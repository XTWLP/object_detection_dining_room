/* Generated code for Python module 'torch.overrides'
 * created by Nuitka version 0.9.6
 *
 * This code is in part copyright 2022 Kay Hayen.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "nuitka/prelude.h"

#include "nuitka/unfreezing.h"

#include "__helpers.h"

/* The "module_torch$overrides" is a Python object pointer of module type.
 *
 * Note: For full compatibility with CPython, every module variable access
 * needs to go through it except for cases where the module cannot possibly
 * have changed in the mean time.
 */

PyObject *module_torch$overrides;
PyDictObject *moduledict_torch$overrides;

/* The declarations of module constants used, if any. */
static PyObject *mod_consts[1372];
#ifndef __NUITKA_NO_ASSERT__
static Py_hash_t mod_consts_hash[1372];
#endif

static PyObject *module_filename_obj = NULL;

/* Indicator if this modules private constants were created yet. */
static bool constants_created = false;

/* Function to create module private constants. */
static void createModuleConstants(void) {
    if (constants_created == false) {
        loadConstantsBlob(&mod_consts[0], UNTRANSLATE("torch.overrides"));
        constants_created = true;

#ifndef __NUITKA_NO_ASSERT__
        for (int i = 0; i < 1372; i++) {
            mod_consts_hash[i] = DEEP_HASH(mod_consts[i]);
        }
#endif
    }
}

// We want to be able to initialize the "__main__" constants in any case.
#if 0
void createMainModuleConstants(void) {
    createModuleConstants();
}
#endif

/* Function to verify module private constants for non-corruption. */
#ifndef __NUITKA_NO_ASSERT__
void checkModuleConstants_torch$overrides(void) {
    // The module may not have been used at all, then ignore this.
    if (constants_created == false) return;

    for (int i = 0; i < 1372; i++) {
        assert(mod_consts_hash[i] == DEEP_HASH(mod_consts[i]));
        CHECK_OBJECT_DEEP(mod_consts[i]);
    }
}
#endif

// The module code objects.
static PyCodeObject *codeobj_820d4c3053ff03a73b15ed9fe22ce4e4;
static PyCodeObject *codeobj_01f33796bc85db7f9da6f1ce0b59cc41;
static PyCodeObject *codeobj_617da111e7814616a99fd7ec33c56714;
static PyCodeObject *codeobj_d68d4e80f536f7a9780b74378060ae30;
static PyCodeObject *codeobj_d2e0a3028c0ae5d690c5d6dc62586c2c;
static PyCodeObject *codeobj_6e7a2c37b05890177243502e8225fad1;
static PyCodeObject *codeobj_f1aa09101725e0642609e846892d9b01;
static PyCodeObject *codeobj_d62377d328f3057ec90c50c0f2ab5ae0;
static PyCodeObject *codeobj_839e52343318810e4edcc15d5bb0dcc0;
static PyCodeObject *codeobj_12c7efe66f7f77aa3a060530e2d53131;
static PyCodeObject *codeobj_40c8a1ab097e24e73d21b243b5ea1a1b;
static PyCodeObject *codeobj_badaa9b7f948cb582c8bf0d638344bc1;
static PyCodeObject *codeobj_803a5a9f7e3ec6d7170b9ee2717ebed8;
static PyCodeObject *codeobj_051bd70207baefc2ef119e1054f4129c;
static PyCodeObject *codeobj_18c0c6d51def37199a83c105dfe79a97;
static PyCodeObject *codeobj_e913fc1923a2041be8a63962f48d0e5a;
static PyCodeObject *codeobj_1b38c67db128e220d5a863b37a8c9974;
static PyCodeObject *codeobj_e6ebc77f0fb9c37a10f730123c395c1d;
static PyCodeObject *codeobj_759153a34c095830fd7c2d50e180ecf3;
static PyCodeObject *codeobj_dce98f1557effa7f2578e587c810cbd3;
static PyCodeObject *codeobj_3426e15d019a2adb0486b728a9dd74e7;
static PyCodeObject *codeobj_070433f3767f708a84b2d945cf43fae6;
static PyCodeObject *codeobj_14b5187c5fc6a1513f5a02a87c05fceb;
static PyCodeObject *codeobj_5e8436bbe59a5692f996f9c84c98cbc3;
static PyCodeObject *codeobj_5eb2744b4e974e464ee7e95bb0317b7a;
static PyCodeObject *codeobj_759c40cc67642f4aa4a594d390905a11;
static PyCodeObject *codeobj_f7b308f4266b182e74ddc6f21d23bd71;
static PyCodeObject *codeobj_b3e1ba6f1fbc7a4b10ca6563414cda35;
static PyCodeObject *codeobj_d96f65a66c3032c798b258bb4661ae3b;
static PyCodeObject *codeobj_5dbfbaf2b8149e574fa6038492b6fa1c;
static PyCodeObject *codeobj_a62ab153a36f9f18c2bce55b7660fec6;
static PyCodeObject *codeobj_3d9285a4fcf9ca7a7c8c9c2ea3b478da;
static PyCodeObject *codeobj_6ef106c6f1f9264d11e34b781a6556ab;
static PyCodeObject *codeobj_911ad72d3ebfb3e75f03b048f49992f2;
static PyCodeObject *codeobj_336a3fa4ad87dd1c56d8fa959251adf6;
static PyCodeObject *codeobj_90a56f69c7e5a0de9f5bd955e7eac464;
static PyCodeObject *codeobj_e67dd18b202923643ba78ba4e53ebae6;
static PyCodeObject *codeobj_d8383418ceafc69df20e26e6839dba7b;
static PyCodeObject *codeobj_02e39bd46c17894dab0bb0824f1a58eb;
static PyCodeObject *codeobj_d395b78973a7028499477696d5097fd2;
static PyCodeObject *codeobj_78016b5d58a552903192e58be446eedf;
static PyCodeObject *codeobj_35a67090b889b989d26e87cdbed941a0;
static PyCodeObject *codeobj_7cce56e8c0630cae54932162cf0e5cbc;
static PyCodeObject *codeobj_fa25d15cf1fa2e3381cf8dc26bf48222;
static PyCodeObject *codeobj_a044b5240e92debc1935c582e93e2186;
static PyCodeObject *codeobj_a5a4d193cd9df1d36327d84a80f3b7e5;
static PyCodeObject *codeobj_d215e2ba512ee9033650d8b51ddd108a;
static PyCodeObject *codeobj_a66340aa3818c3e823891c63bf9404f1;
static PyCodeObject *codeobj_a7313fa40e83d68bfe82303c0a0992bf;
static PyCodeObject *codeobj_ffb3ed9f24610894b544e92e6e470195;
static PyCodeObject *codeobj_b23c2f0992890a01dbc50170aa50db2c;
static PyCodeObject *codeobj_e9ecf5a44896ac4ea478229af8a82752;
static PyCodeObject *codeobj_1f394b6b945ba82645562d0c03256e5b;
static PyCodeObject *codeobj_1677263690ec58d4effc5d0b50f29445;
static PyCodeObject *codeobj_0b173ab2a6bec184761f01e2464f2ba7;
static PyCodeObject *codeobj_1fa8f624fd6adff65d701213c759f51f;
static PyCodeObject *codeobj_09d3fea6e2500d3521943ff2de4df2d9;
static PyCodeObject *codeobj_9172690bec2dbe37b68ffadc63563e6e;
static PyCodeObject *codeobj_75179e8d70cdbfec19d864aa7c3ced7a;
static PyCodeObject *codeobj_6e9b2cbbf689806b4339763bf1d176da;
static PyCodeObject *codeobj_5898b81da0cf7407918deb15d503c796;
static PyCodeObject *codeobj_b25cb90b9ec6e4f31bdc56dfcde6b5e3;
static PyCodeObject *codeobj_8abf15b14cb41d197135b54b6f67f114;
static PyCodeObject *codeobj_0fa9e2f0115127f3271301505a36d30f;
static PyCodeObject *codeobj_61bac6b71be71b0bab7c7a1e8f010417;
static PyCodeObject *codeobj_656af5bed6b115ca2f28706e3d089147;
static PyCodeObject *codeobj_48388f92d237b47809acaf7d616bd695;
static PyCodeObject *codeobj_0e5f69316d9939294241b29a44ef7c48;
static PyCodeObject *codeobj_76d063a905c17a9a99f1be7a331e67cf;
static PyCodeObject *codeobj_0217d7f76189cbe2fc8608bf5ff28577;
static PyCodeObject *codeobj_d9dacdea00267e02bc2ade1e15a52716;
static PyCodeObject *codeobj_2659af50e36e4452e4562f92b573703f;
static PyCodeObject *codeobj_14b0e1c4eeb0efaf4be8284a6bd757bd;
static PyCodeObject *codeobj_f75ffe88a2d601dbcccd2bc3a46d2bba;
static PyCodeObject *codeobj_8f63aecf7c8e2a65e2d7a4897c495afa;
static PyCodeObject *codeobj_33b3ebb2639d8201740c7f88fb7e76eb;
static PyCodeObject *codeobj_a1a65d242e50d9b70abbe6dffb8b2af9;
static PyCodeObject *codeobj_ff6a6c91581c991ce7ff66a82456e11e;
static PyCodeObject *codeobj_8fa9016cb500bfadea6ce1eb2928f741;
static PyCodeObject *codeobj_0baba68eb7cc8951affff6641fda0c8d;
static PyCodeObject *codeobj_5195d7b7ceed11f99575358553d18f3a;
static PyCodeObject *codeobj_a73ec3853363e683dfaed25cfd7001e5;
static PyCodeObject *codeobj_4dce9161ddbda422699b243c2bac60c4;
static PyCodeObject *codeobj_1bf209d16122f9fd4695a2f407470e0e;
static PyCodeObject *codeobj_93f97c8c1445b8c152e5d7d9edcfad8d;
static PyCodeObject *codeobj_ef265e5e884d4102d9829bf9c096fdef;
static PyCodeObject *codeobj_cd68e8bb426a4fdad273a47ef28a4472;
static PyCodeObject *codeobj_c232368d74abb528dc4c2cf68d0c34d0;
static PyCodeObject *codeobj_3ada5cafca958e603018cefe71f873a4;
static PyCodeObject *codeobj_8d198e86cb981b8f13fe0348758c1155;
static PyCodeObject *codeobj_06d8be554f837c8a1a50cf361ebf7081;
static PyCodeObject *codeobj_99b9afbef98917154a60dac12272ffc4;
static PyCodeObject *codeobj_2bc8c668ef6f5479552a4909464bcf97;
static PyCodeObject *codeobj_21db83cf1a3fcc5313dbbedf59f61c88;
static PyCodeObject *codeobj_eac471b32f47cbacbdbf3230a633171a;
static PyCodeObject *codeobj_b881e1fe1733720427f035cb9b4ccd3c;
static PyCodeObject *codeobj_d282ae9df147bcd7f6700260fc074fb6;
static PyCodeObject *codeobj_b298b2c40a578a3f929ded3d64fa23ee;
static PyCodeObject *codeobj_6562eb61386ef0033e54c6d938c2bb3c;
static PyCodeObject *codeobj_17c32f247cca654448db550a7cb6707c;
static PyCodeObject *codeobj_61557941a19612574c0ed389afa577bb;
static PyCodeObject *codeobj_8becbf862656f24a0c1445c038cbd46f;
static PyCodeObject *codeobj_e1774da6a1766e1d975eb101bd34a2e7;
static PyCodeObject *codeobj_d690d1937797e01720ebf96be9d98ca3;
static PyCodeObject *codeobj_1eb3a784606f27eccfa1af31af0a759b;
static PyCodeObject *codeobj_a427df230a95c321dc1f4fca84aeec35;
static PyCodeObject *codeobj_696112b42c2d230fdf675f427878dfef;
static PyCodeObject *codeobj_41f9984a59ae08351d997376f897d71f;
static PyCodeObject *codeobj_bf37ad38612391430fcf4c134de1dea9;
static PyCodeObject *codeobj_f118337dfde5f486568a609d11677db0;
static PyCodeObject *codeobj_0b37822f831e4e3d35266a32a435acee;
static PyCodeObject *codeobj_038e6956e138bae26d9af57a7fc4fbe4;
static PyCodeObject *codeobj_06ecd1f315f809289f5b18347b82346a;
static PyCodeObject *codeobj_11f6003de0ad1b2594bfc7a06d8cafca;
static PyCodeObject *codeobj_35bf73cf0ae77c5bb93bddeed02081cb;
static PyCodeObject *codeobj_f7ede9e9636103a0471d3efe1db139b1;
static PyCodeObject *codeobj_f46d1adb89c674089a3e8a206fa1520a;
static PyCodeObject *codeobj_d9f16c6baf6c725760400c2c10970d16;
static PyCodeObject *codeobj_622843b7a2fd6392f8e33d080f4de109;
static PyCodeObject *codeobj_3cd0ef2071698f6da56bace17d4a2635;
static PyCodeObject *codeobj_6f5e5fe31763de9725e981639ac53c42;
static PyCodeObject *codeobj_139d293f6e7bb1529805e599c82875d9;
static PyCodeObject *codeobj_ce6c7911a3ec55475198e2cb89e7df36;
static PyCodeObject *codeobj_eeb8e49306fbcbc54379e1796d043476;
static PyCodeObject *codeobj_bbd2972b9a6900270bbb1644b4f17020;
static PyCodeObject *codeobj_a4889ab0a689f3723ddd3b9b83cb43ac;
static PyCodeObject *codeobj_117d3283aee70b6adb62bd73b24a6ff8;
static PyCodeObject *codeobj_83a0479aad60579f308e6f6f95af3eaa;
static PyCodeObject *codeobj_7b0e3ea98adb4818017d9e75273e41e9;
static PyCodeObject *codeobj_e5e3d89d91ac76e946c6083d6cf1c800;
static PyCodeObject *codeobj_f5b625089ea6dd48dcdf8a643bcbb5ae;
static PyCodeObject *codeobj_7487d6261417f0aca2a73c3a15e13b42;
static PyCodeObject *codeobj_6a2bd8324fe3f931dbef4853f99ecd07;
static PyCodeObject *codeobj_c7c62883de64a4cb091b457e98e0d629;
static PyCodeObject *codeobj_670b54eed00e6a0160abec021a231c03;
static PyCodeObject *codeobj_6fbd5549adcae78dcad4b2fceb91c294;
static PyCodeObject *codeobj_b51f6348dfbbeed9756692accaa73eee;
static PyCodeObject *codeobj_dbff55d02e8d408bb7d849f7b828beb3;
static PyCodeObject *codeobj_77dd84102614fc0ca107217a4db53b73;
static PyCodeObject *codeobj_9526b135c0873ed4bb9febc5403fb64d;
static PyCodeObject *codeobj_039b5265281ad57a712922f98f0812d9;
static PyCodeObject *codeobj_0c0378777b73c34d05e89d65ad0024a8;
static PyCodeObject *codeobj_7be122713bad7a97e7cbad601870a6fe;
static PyCodeObject *codeobj_f5df1d21ddf8e39ac1de2ec92b7a732d;
static PyCodeObject *codeobj_091c3edc2f88d28baa92628bdf1826ab;
static PyCodeObject *codeobj_e8714a4ce7540a6e343c851d3200980c;
static PyCodeObject *codeobj_5725a606917de9528607d361a4ee1397;
static PyCodeObject *codeobj_7b4cce7a471ca55569284493bdb8d656;
static PyCodeObject *codeobj_394434abe4388f0e2553cf544effa313;
static PyCodeObject *codeobj_6940b4176a83c1d9fa637c0cf43f59e2;
static PyCodeObject *codeobj_92ed8b352e35254f0f80f83309cd00a4;
static PyCodeObject *codeobj_de532df743d4c03dc3d41168738d9763;
static PyCodeObject *codeobj_bd77611a57d488d6c56b04d1b5c49dba;
static PyCodeObject *codeobj_7da9ef674f1f2dc5b8eab6d23e0e0287;
static PyCodeObject *codeobj_275a18e23547aac0f83f823531dfba33;
static PyCodeObject *codeobj_db7118ac13e131a2cadd81769740d3a8;
static PyCodeObject *codeobj_35a8a6000774522f3b3731f2d7345fc8;
static PyCodeObject *codeobj_43c677e2b954722d242194acbb400a27;
static PyCodeObject *codeobj_089281af5425e2496b79c97b5a55a1d4;
static PyCodeObject *codeobj_d3678db6fa46a0c989cf4da38ae23f60;
static PyCodeObject *codeobj_b506ad863a22802b35b3747f2dba5fee;
static PyCodeObject *codeobj_4daceae0fd3cd57c3f1bc8fa728a3431;
static PyCodeObject *codeobj_757cdda819ed5ac2ce010c3286d047a1;
static PyCodeObject *codeobj_8e36e5d1e256a6c5bb5fa5feb41b87f5;
static PyCodeObject *codeobj_49e2192e908c890d63fa4044a86d75ad;
static PyCodeObject *codeobj_fb2a85f922638a745586f424e7065204;
static PyCodeObject *codeobj_9390a753c6277141b6a5006c15a149c0;
static PyCodeObject *codeobj_8cf9e6fb448187310d81e577aecc3e3c;
static PyCodeObject *codeobj_88fc0f2ae009ccabc6944ffe5331e522;
static PyCodeObject *codeobj_c42b5b313542a6b626cefecea6c6177f;
static PyCodeObject *codeobj_a2df74f714f923ca0c9cb06cd54fb0b5;
static PyCodeObject *codeobj_96ddb8815cf4bb710cf30ee865186f25;
static PyCodeObject *codeobj_3c59c11e27aaf96affbb2cc6fb48439f;
static PyCodeObject *codeobj_21b8e9598e709b0aee1f9ad7ac4754e0;
static PyCodeObject *codeobj_7866eb0199194d07f7442c2f25c88337;
static PyCodeObject *codeobj_b2f46e65a0af69f974e9a53ab89a0be6;
static PyCodeObject *codeobj_7356e6fba53388ac762b8826b4072ec2;
static PyCodeObject *codeobj_c11d1b982eee87e35a8c60b0b1858cc8;
static PyCodeObject *codeobj_015f2933fabaefb40f8e6f44268235ad;
static PyCodeObject *codeobj_6cb9b39ffff3d0fb681bc5d8ac3a0585;
static PyCodeObject *codeobj_ebeb8fc984071b1910e67484d5e9a92c;
static PyCodeObject *codeobj_d0a2f4f5e657233985c4a742359d6214;
static PyCodeObject *codeobj_ed9089c3669b9fcbfe6a2d632c80c428;
static PyCodeObject *codeobj_d1936b6a18422425889ccc56bfcddc66;
static PyCodeObject *codeobj_fff1d3cc677986b42634e045306adbc8;
static PyCodeObject *codeobj_3992139ed177013d28ac2cb0b9470fdf;
static PyCodeObject *codeobj_913bcdc1b89f5886a92e2a27b919df89;
static PyCodeObject *codeobj_a6871a6e1a2c53302f56f24c9b999259;
static PyCodeObject *codeobj_d5e3aa421711a2dba633e028baa2c2b2;
static PyCodeObject *codeobj_7998909bd240ccad8a9cbe9c82425a6e;
static PyCodeObject *codeobj_eb1c245e48b941846b0b896bc0ec2742;
static PyCodeObject *codeobj_95a7035c66c033fc3948b7d88d4ef685;
static PyCodeObject *codeobj_934e05ded79a3d0b8d146d629a638b34;
static PyCodeObject *codeobj_f713e4c3e6075f5d1c89a2bf4e4c6d25;
static PyCodeObject *codeobj_4b87dea8bb2487680acfb86e0d218d25;
static PyCodeObject *codeobj_c11a622ba0484bdfcf6a423004a1395a;
static PyCodeObject *codeobj_56d146bf25b7fa18f990b47f0ee2038d;
static PyCodeObject *codeobj_dab2b3f853aa4fa30df04b6078bc5b84;
static PyCodeObject *codeobj_6ce3174de930bea221eced6e2e726dd1;
static PyCodeObject *codeobj_d716b4f9d196fdc5294974789343c57b;
static PyCodeObject *codeobj_ed54930c97a0df1a522ef2f535df61e0;
static PyCodeObject *codeobj_a30a11a6233846fbb368dd9f0fb13b57;
static PyCodeObject *codeobj_7d5c1059aad8945ec264524e8c9122fa;
static PyCodeObject *codeobj_30520d877a78800de309434c65b4b753;
static PyCodeObject *codeobj_9d59abfd62c703b2cd4348f789089995;
static PyCodeObject *codeobj_35a765f50b569583621a6b1140ea33c3;
static PyCodeObject *codeobj_7425705ecc93cd66642eac4b0156f7af;
static PyCodeObject *codeobj_9961eaaca2a502e0f5e2f659b19965f1;
static PyCodeObject *codeobj_caedcfb81a0fed3d121d765915818434;
static PyCodeObject *codeobj_ec940f940e125a56c033b0dcbe00a7cb;
static PyCodeObject *codeobj_e5afc1ad9cda13ba888e6f5e96fab8aa;
static PyCodeObject *codeobj_0d6c425a5f5d0eb42421874900957b98;
static PyCodeObject *codeobj_5931536a62ae399c9e5fc3549619447a;
static PyCodeObject *codeobj_50b6b4daf896d5be4739a5d145e2f314;
static PyCodeObject *codeobj_e9688202b23273a47d7fbfce7166accf;
static PyCodeObject *codeobj_7048327794ed05677dc3db834248708d;
static PyCodeObject *codeobj_92ef3f463c788f23a576893dbf6b909e;
static PyCodeObject *codeobj_8ecacd6c708a9404cb57f07285318e85;
static PyCodeObject *codeobj_be86b0b4f821fe9d7a68a3790a84ce71;
static PyCodeObject *codeobj_a0ae26c7c4ec302b47b5c582629bbdf5;
static PyCodeObject *codeobj_75af841ea69fc76854984e678b0b8031;
static PyCodeObject *codeobj_135b5aac5a454240e83ffe5bdb909fce;
static PyCodeObject *codeobj_f022cc6910c9b592d8dc7281b9bfdd98;
static PyCodeObject *codeobj_b68b44b6917bd020e82e67c555514b55;
static PyCodeObject *codeobj_0392c46a2ee0c29b638b907f9d54fcfe;
static PyCodeObject *codeobj_4de9d5ecec663a7049590e0f934cf873;
static PyCodeObject *codeobj_0819dab7e34e03edbb94ce48792910d8;
static PyCodeObject *codeobj_5743abae41ae01f99d7f294a1f645cfc;
static PyCodeObject *codeobj_267f88b7ea050a5ef525ee54749d6053;
static PyCodeObject *codeobj_207bf4b4970fe9bb91f60e54ef73ea55;
static PyCodeObject *codeobj_b8451e5709a1aa8626cb694891c2213e;
static PyCodeObject *codeobj_65063d2a6ef308a64cba3c04606d9254;
static PyCodeObject *codeobj_48a0c7e17be9022e2172b77bf4cdfa17;
static PyCodeObject *codeobj_88ceed81d89385e281d76e9b15a676d4;
static PyCodeObject *codeobj_2bfbe594424ebac7f12bee8149bfb73c;
static PyCodeObject *codeobj_a0dc54c45fcc846ca04bd9c292ed73a2;
static PyCodeObject *codeobj_d09bcbfd1cfab4b1d360d255d20b82b1;
static PyCodeObject *codeobj_43c304f8d065327cf45ced8ec3b9e5e9;
static PyCodeObject *codeobj_4da8401bd35984c23466be7ae610a67a;
static PyCodeObject *codeobj_8dca6036569c72b9f5d514aac0bfd41c;
static PyCodeObject *codeobj_492eff16660605d922dc693506811e59;
static PyCodeObject *codeobj_f5b647f327f3b0fb92fb8ac242a9c936;
static PyCodeObject *codeobj_7ef9b8317e9297f244713fbc98813a01;
static PyCodeObject *codeobj_b2f3ddb6f4491168deaddb0651d6ac58;
static PyCodeObject *codeobj_fb8c196bd77170d2afc4bb456f4aac04;
static PyCodeObject *codeobj_6959040a96bc56f9695cc9025388110e;
static PyCodeObject *codeobj_7ee093a8f8de311dfd521a4b41a320de;
static PyCodeObject *codeobj_a07b3f4b2ed3f1d9f9e6b20454bc343b;
static PyCodeObject *codeobj_d9889fa5f466ba8401cd91caf28cc58c;
static PyCodeObject *codeobj_2b1f70a99dd0e1ac366fe3369c9a3a02;
static PyCodeObject *codeobj_19ddd7ccf85d1dee8bf238ecff939a31;
static PyCodeObject *codeobj_047ba541c18e97aeae041f81b866bf17;
static PyCodeObject *codeobj_fc2db9d4ea2bb13741ef9ffe5a821f22;
static PyCodeObject *codeobj_4990cde66c4c8f4d809694e8a4eb030c;
static PyCodeObject *codeobj_ece0f7949a98bad71ccdddb3c4cc207a;
static PyCodeObject *codeobj_66dff01e9a6d2ebf860304a66e264e5f;
static PyCodeObject *codeobj_c725a154746ff10192c05ef4dd1774d4;
static PyCodeObject *codeobj_9969c43c09bbcede7412f8523f86d3db;
static PyCodeObject *codeobj_419684b5882985a25304089cb3d66260;
static PyCodeObject *codeobj_ea8b8556cb410ced311557529d8d570d;
static PyCodeObject *codeobj_105bba3e6b74f13048ebdf4a3372d7d9;
static PyCodeObject *codeobj_b2c915c276c7bab1c5af37f44766629e;
static PyCodeObject *codeobj_e1d5765d62a6bbed8da789a588d10c48;
static PyCodeObject *codeobj_97c1d77c65714df61e4273ee44d29df2;
static PyCodeObject *codeobj_6c9c587629c9b266088ba0d533e41227;
static PyCodeObject *codeobj_911caabdc1d3d60cc1bbe0e84eeba228;
static PyCodeObject *codeobj_75901d348710cd83bd43eaa66a6a2485;
static PyCodeObject *codeobj_91a95c9af941da45a9fc1aa28527283a;
static PyCodeObject *codeobj_fdbccf0dca7dd3d1021cbe260d48fc7d;
static PyCodeObject *codeobj_ce17ee6c6fb41334def2115245226780;
static PyCodeObject *codeobj_ee8234270fcb3e8df9dbc4703e4f9902;
static PyCodeObject *codeobj_cb75dd4a920f9ed7594fc7b7a200b6da;
static PyCodeObject *codeobj_5ceaeffb584fefeace4e5b355d63d14c;
static PyCodeObject *codeobj_403fba215e1be6cada8e3a594959041d;
static PyCodeObject *codeobj_4479328ca0f341c323060fd957269caf;
static PyCodeObject *codeobj_caae7c841607feef1f9e6ee0b90f969d;
static PyCodeObject *codeobj_9be1a2b91b77491923931ff78f51854e;
static PyCodeObject *codeobj_49615681273b3d2f3efefbfbcacf8cd5;
static PyCodeObject *codeobj_bceb8a557171a6e4ef02ce411d32d7ec;
static PyCodeObject *codeobj_7782c6441866344e4165bd7ddedefe17;
static PyCodeObject *codeobj_47a8b3e55610cac64a887d5a1173d7fc;
static PyCodeObject *codeobj_716292767b903a8296167b4ae84d7021;
static PyCodeObject *codeobj_ce683cdbaf2de138a67b5fdefb42e521;
static PyCodeObject *codeobj_42a1e3b8b6287a9a90dde009079d0c87;
static PyCodeObject *codeobj_29f82f0f326391364ccc8ddd1e20698c;
static PyCodeObject *codeobj_ef1397d459020de6931074dbdb5e0d87;
static PyCodeObject *codeobj_f36d7a238d5b672ebd109bf1278c738c;
static PyCodeObject *codeobj_bb2c8c9fadd63b1a4ce6cd3fd14cc65c;
static PyCodeObject *codeobj_ef3d4dbaad1d0fab2b5ea2537a5937ef;
static PyCodeObject *codeobj_b6ae86e102d5d39379e37307d01fe6b7;
static PyCodeObject *codeobj_3ebea4094d228bdf91ba1233ffaa72b6;
static PyCodeObject *codeobj_5239cc8a975d587e172c73f1728ddb8d;
static PyCodeObject *codeobj_d128997ac371bbf8c38ac42c8bf5fde8;
static PyCodeObject *codeobj_f0e7ed39f87a8008f5700b9b6ae6498a;
static PyCodeObject *codeobj_d5a7daa8d114bb71ee1452af953dc7c5;
static PyCodeObject *codeobj_7bb7929a2ff6e5695b7ecb6c0d79653b;
static PyCodeObject *codeobj_c7e57baae065ffbb9bd3fed8e60117be;
static PyCodeObject *codeobj_fa1144e4a4cea04a80e187e761dcf994;
static PyCodeObject *codeobj_004ac222539267a5a5b8c98f585994c9;
static PyCodeObject *codeobj_dcdf22896010aae78caa8b5330e3545a;
static PyCodeObject *codeobj_c15799d9c70c75374826b610a49d086d;
static PyCodeObject *codeobj_538b252c1ee4bd11d010f6bfa07bcf5e;
static PyCodeObject *codeobj_640bbf7a5633386b24cfe485e733f96e;
static PyCodeObject *codeobj_57b6bf21d907008ffecdb3c605b6c86d;
static PyCodeObject *codeobj_534c08731440e03b3fbbbbd0e56468db;
static PyCodeObject *codeobj_6e19d0b0361ba16de8adbb71f462b65e;
static PyCodeObject *codeobj_68aa4e1f033f852aa1be53efa9cb0c1d;
static PyCodeObject *codeobj_2e0815109111092eaee9219bb3e29c44;
static PyCodeObject *codeobj_cbbfb275684a4d801a2e486028aa560c;
static PyCodeObject *codeobj_e89a914ce94f89bf6ee0a028768882fd;
static PyCodeObject *codeobj_03b5692592251a258d193cf42a9f3d07;
static PyCodeObject *codeobj_c5d0961ae719cc71346189506826b938;
static PyCodeObject *codeobj_0dc0e4d07490a41fb31654c9de80395c;
static PyCodeObject *codeobj_08a2cb300cb53ba86f201bacb5497a6d;
static PyCodeObject *codeobj_09ca7fd1eeddf11cc9c5e80fc73493fa;
static PyCodeObject *codeobj_93718ec85146bccb991e775a65d56ce5;
static PyCodeObject *codeobj_aa3d74651f623430808b6764ed9cfe54;
static PyCodeObject *codeobj_daa00c4f7a55cd6beb342fb86581f5ea;
static PyCodeObject *codeobj_ae595f8c12674e6c48ea94edaeb93219;
static PyCodeObject *codeobj_df95a7e4895f6fa556eba21da9f897f1;
static PyCodeObject *codeobj_d9b9da619da6673fe39675c26f86594a;
static PyCodeObject *codeobj_b94cc4b18209a972f4dc8868c7c142a1;
static PyCodeObject *codeobj_85e049a385cf6befd2a3dd18bb942e13;
static PyCodeObject *codeobj_28a02dffcd25c131006ca4e06bb94f89;
static PyCodeObject *codeobj_2b8c8696daefc8805988d0da2857e91c;
static PyCodeObject *codeobj_f5f13b859fd2ee6622b96445c9556d08;
static PyCodeObject *codeobj_9a27727bb923b412dcaf4ee658e94d9e;
static PyCodeObject *codeobj_a9415034c86ef3814f538cc41b464fea;
static PyCodeObject *codeobj_b67624ded915f5d05c31ccc42d6d25e1;
static PyCodeObject *codeobj_184a2782933341af77a8d57338fc87a1;
static PyCodeObject *codeobj_99a2f3c9140d5ef026bac3942daba5aa;
static PyCodeObject *codeobj_18aa2bed3b87c73f81192f6cd10b065d;
static PyCodeObject *codeobj_7eccf1ea19034e827b77b437e7ffd305;
static PyCodeObject *codeobj_3ab6e1e7ff6cd5c63b5c9c2aa90dcba3;
static PyCodeObject *codeobj_8b32de9b527d7790246971657024d8d3;
static PyCodeObject *codeobj_947b9e3ac2e65e7b1862c83ef9de9e01;
static PyCodeObject *codeobj_1eb0004babc4bbda679ee8f99815bfd3;
static PyCodeObject *codeobj_1573b5a984f0ce603d01a7cbf6c95988;
static PyCodeObject *codeobj_1b091a7c5d6be595b8b930e08ddd81a3;
static PyCodeObject *codeobj_47dad59927ae2dd6391a3be17728371d;
static PyCodeObject *codeobj_b4c511956b95d153925a77792c9529dc;
static PyCodeObject *codeobj_28770312ef3371ffa7a6f34789007dc5;
static PyCodeObject *codeobj_3758e92bb394c6d2db5c57808746d8c0;
static PyCodeObject *codeobj_325a94d2bac807d6eab4763bd33aa964;
static PyCodeObject *codeobj_3128194a7d217473c0c34e84f918828a;
static PyCodeObject *codeobj_3ec7f4a6d1ce72308783aa898cd0fcba;
static PyCodeObject *codeobj_d350070fd3b14826b127d45a88dcbb1b;
static PyCodeObject *codeobj_ef03dcb78a858bb55482715920087f95;
static PyCodeObject *codeobj_e3a14ab9beee1c7c597e9d8b97e57803;
static PyCodeObject *codeobj_465a2756349966912eee7527c5e0567a;
static PyCodeObject *codeobj_eda42bf74430799fd6b09c6c89a46e3c;
static PyCodeObject *codeobj_6b24c16c22c91bae759c0880b4d48ccc;
static PyCodeObject *codeobj_df2ebb7a6d74120aa1eb5ed010155688;
static PyCodeObject *codeobj_cddcaedf1e77551465322634fe58726f;
static PyCodeObject *codeobj_fda8a10e2d867eed91cca663273223a5;
static PyCodeObject *codeobj_153f0a5ce3d8144d9a719bbae36498b3;
static PyCodeObject *codeobj_60784da2011e39b547d44efed65cd1e0;
static PyCodeObject *codeobj_df9b95b5283b43df8b32b2e5533651f3;
static PyCodeObject *codeobj_8034a89fe0b7148ca5dd2c02e7c43174;
static PyCodeObject *codeobj_d1b65482262a0612a10b90eaa8c63863;
static PyCodeObject *codeobj_b3a95c48a95604147f501a5e1bae01c7;
static PyCodeObject *codeobj_1b7d3ef7a10bf4daaec1a9f38c967397;
static PyCodeObject *codeobj_88014088a865b5b3d8ccb75f8b3b4bd8;
static PyCodeObject *codeobj_58a61b888b720a8b4aa0d167cdfe4ba7;
static PyCodeObject *codeobj_88a434033bc1819617af944fd43221ec;
static PyCodeObject *codeobj_ca7f5e8e75fc52fc00cf987f16dc68ca;
static PyCodeObject *codeobj_7a1be44988387e2ed8c8ba6f57154393;
static PyCodeObject *codeobj_ba83dfb20e240cf85b24c48c039a4cbc;
static PyCodeObject *codeobj_9fd5b6e9fc1f9531b50008440dac46ff;
static PyCodeObject *codeobj_27a378dbc9145be3dcf7c610710a33cc;
static PyCodeObject *codeobj_12e190367c8b6f27df7ac1f957838d67;
static PyCodeObject *codeobj_57b447c6cfb2ed7b4d40d192dd7f6c3c;
static PyCodeObject *codeobj_db68008fd3848f116b60f95c0a31e897;
static PyCodeObject *codeobj_38c37c891a973d6cdf5ffd4f035dcd9a;
static PyCodeObject *codeobj_79f8a99354682a62830c65be1362f363;
static PyCodeObject *codeobj_1358de6509ac5dace0db6cb3abecb644;
static PyCodeObject *codeobj_45dedc6d4e9c8b9f4f1f75c6b6301e38;
static PyCodeObject *codeobj_e74e393d662c7e19eaab9c8afe6bfa39;
static PyCodeObject *codeobj_2f9941c07e060233d65e197a9dec2c91;
static PyCodeObject *codeobj_c21e6268f9d53429e789e8b545b43323;
static PyCodeObject *codeobj_69d6e954c709de78083bdff34aaf2a5d;
static PyCodeObject *codeobj_ce551165bf4720e28f888c3643e71da4;
static PyCodeObject *codeobj_a13ed037050aee545a18c73b495018dd;
static PyCodeObject *codeobj_b5c8ac55f31c9ed42e6b8968df60a72b;
static PyCodeObject *codeobj_4cb2f46ae6b39d870d336fa9414b7c2c;
static PyCodeObject *codeobj_11be5a9b0f0ff9afb6355035bbd86d01;
static PyCodeObject *codeobj_7de916c913eda9d261875ff98cb8496e;
static PyCodeObject *codeobj_37d0a4114cc1dcfdbdbb7b0b4b0ad6cd;
static PyCodeObject *codeobj_eba05ca0485db4d8c66ff68463505ac6;
static PyCodeObject *codeobj_e2c82381507ef1204be505cda1acc5b0;
static PyCodeObject *codeobj_44798b7dfe042838663a5b12e2f6bf27;
static PyCodeObject *codeobj_6a9ac7e5d81c628a4339348ce189da08;
static PyCodeObject *codeobj_d58dd01f1969168e51a71aea03ee8b27;
static PyCodeObject *codeobj_3698f8981d4de5f415fde27a218e38f2;
static PyCodeObject *codeobj_724336cddb4cf636cb87309f68e1324d;
static PyCodeObject *codeobj_fa63cd0813c56e78a3a00bca56366486;
static PyCodeObject *codeobj_ca94db2dacbf98c23fff8c77542a7f67;
static PyCodeObject *codeobj_d8ca62146a408f595fe18c0bd8602c11;
static PyCodeObject *codeobj_0da4cdf33236de410794e8bf89fd4b73;
static PyCodeObject *codeobj_268b7c8e14b394f60bf3da706570ea1e;
static PyCodeObject *codeobj_97891f1081890478238e058551bcca16;
static PyCodeObject *codeobj_c281df153b9eef1fa73b8d62af4d7c74;
static PyCodeObject *codeobj_40b04b9f841b34f3203c1b2c76bcc522;
static PyCodeObject *codeobj_78133a70371f2ea6e9fee4dbc7da11f3;
static PyCodeObject *codeobj_867d7a9403b4a36258cab6ee35fa6660;
static PyCodeObject *codeobj_ec3de194f702361a9c161ada714ca3ab;
static PyCodeObject *codeobj_ce45e4d62e343addeff2f4ed2725eeed;
static PyCodeObject *codeobj_5ab0a02771904f856e100fdffdb485af;
static PyCodeObject *codeobj_d4beabe9b103084c2c3c1d8ef23475c7;
static PyCodeObject *codeobj_53151ac996a3dfb557c13732aaa679af;
static PyCodeObject *codeobj_957a72d891b459369be02a68dd1c4808;
static PyCodeObject *codeobj_4a669e1d327be6e579110e86cbc1f9af;
static PyCodeObject *codeobj_5ccf6114025d5d4590a61c81081129c6;
static PyCodeObject *codeobj_7b5d97caf456021d6b8481ea17c89349;
static PyCodeObject *codeobj_8a7ee6585868ca50e2114a9a86988dbd;
static PyCodeObject *codeobj_94349176af01fe74dfc97a36048368b8;
static PyCodeObject *codeobj_56b165b15a71faca856d8e3fc8529a6c;
static PyCodeObject *codeobj_0d05f362a21cc26461ea0dd004036f12;
static PyCodeObject *codeobj_d27a9cbea385c54ea14d9ca48006bffe;
static PyCodeObject *codeobj_82c21351b4dc8934a6909353ef6d29fa;
static PyCodeObject *codeobj_9ae21e3f2dd4eede222c2d6713f44f5a;
static PyCodeObject *codeobj_55b854c24cbd63a08fcdcc73eb3b0304;
static PyCodeObject *codeobj_a0aa0a9c3412002aff4b12ea95de651b;
static PyCodeObject *codeobj_e6b2c140edef90ef38b8cbf83aaa48f3;
static PyCodeObject *codeobj_43f882f911f1fdc6257937f2709bffe0;
static PyCodeObject *codeobj_e6c5424638a72a51a134e6981f4abcca;
static PyCodeObject *codeobj_d9930f6e633506b969ba611cdf1479d2;
static PyCodeObject *codeobj_579754208aaa7c15a36c75102a11aa0c;
static PyCodeObject *codeobj_35f7f1d018fa2dbb6cbe9a5c0b1300fb;
static PyCodeObject *codeobj_33ebeb93e8a54dbd98a47855b44bd399;
static PyCodeObject *codeobj_3bf6be688ad9b71b4846e4a9bd532493;
static PyCodeObject *codeobj_951a4ade5a8a01727ae0a9da3adc2623;
static PyCodeObject *codeobj_26a32058e04ccddcc9d6e45f075d588d;
static PyCodeObject *codeobj_438f315a416aa26d9a52c8442e36807d;
static PyCodeObject *codeobj_757b1082df04a403c0a459cef6cf9da9;
static PyCodeObject *codeobj_0686c6936da42e5c9e3830de2765f320;
static PyCodeObject *codeobj_ee1dc6734df143ad01be28c17fbc76dc;
static PyCodeObject *codeobj_d4e09ddc82d94690a2e82f2b1b98f7e7;
static PyCodeObject *codeobj_e22700050447bd1e0f329e8b48907a4e;
static PyCodeObject *codeobj_069952b989110b445af0387d1bc12a3e;
static PyCodeObject *codeobj_1935982f7f2e7edafd8854ffca92c6ce;
static PyCodeObject *codeobj_092ef49a35e65ed64056b7c044ef2ef7;
static PyCodeObject *codeobj_8de0beff63021828d98d8050200bc6d8;
static PyCodeObject *codeobj_bb38ae4c913c9c6ec8e62282ec4d473d;
static PyCodeObject *codeobj_e3927df365719d87fb24263593ffbbf1;
static PyCodeObject *codeobj_ef7dcfb54a473c258c8f12cc4fe59917;
static PyCodeObject *codeobj_50182f3bffbda404c2a830019baebd4e;
static PyCodeObject *codeobj_1623a43da474bdf0f22c8765c99e3a4e;
static PyCodeObject *codeobj_c3d96b030b6fc90e6efb95680c7f7324;
static PyCodeObject *codeobj_a5b9f9edb882a26f8fc6ff962747aeb2;
static PyCodeObject *codeobj_2838850478099bc5a2b92ea8894fad5c;
static PyCodeObject *codeobj_dee84dd429cee958e3392b429d6e10d1;
static PyCodeObject *codeobj_a62328bc960ae7d17d18e863953cbc03;
static PyCodeObject *codeobj_369fee2725204340697986f5db225b90;
static PyCodeObject *codeobj_846c413d32166b7d9cddd7eba52302e9;
static PyCodeObject *codeobj_ef1fdf9fe45f9b292cf8f7347adab7b0;
static PyCodeObject *codeobj_0098591fcaa03562bc14b8e795c9382a;
static PyCodeObject *codeobj_5aec9d865aeb577325622ca57b6d1ead;
static PyCodeObject *codeobj_b38c2f41511fe86579a792e89d90a30d;
static PyCodeObject *codeobj_7c620f04362547a6d05f51da8135c643;
static PyCodeObject *codeobj_3fea8db730d78923acb09e6373cd046b;
static PyCodeObject *codeobj_663ec780e62890150bd2c77ef4253d81;
static PyCodeObject *codeobj_8b31a2b7f77e39180cd9d431e18a8372;
static PyCodeObject *codeobj_63d8839719c5a9facef3e01c988bf9f7;
static PyCodeObject *codeobj_0f8f81ca55e8e1da5ed9cc6e2c5c4c3b;
static PyCodeObject *codeobj_d48923f5002d27ad3da630c5654364d0;
static PyCodeObject *codeobj_565f1885c2ffb854444ea9f74f6b8956;
static PyCodeObject *codeobj_3e40584376e7f60db271b0c3d156792f;
static PyCodeObject *codeobj_860612f3126ad49a39ca8f81c0857218;
static PyCodeObject *codeobj_8554aaa1872522d93fc64c498f6928c8;
static PyCodeObject *codeobj_22d63acaadcd9c5c4979a368c514d1d2;
static PyCodeObject *codeobj_c089b03676f4ea5846854cbc3742dac2;
static PyCodeObject *codeobj_fa1529bc8deeac510c9e61be87ca6aac;
static PyCodeObject *codeobj_cbae45b5325d2cff917d3ed35a3b3317;
static PyCodeObject *codeobj_101fd9de83e830389def230eb29d9748;
static PyCodeObject *codeobj_5e972c3f26641aab2b72670051502ec0;
static PyCodeObject *codeobj_febe1e83734af1268446672bca1191b7;
static PyCodeObject *codeobj_8486ded99a7036e4ad5e8a9a53ba969a;
static PyCodeObject *codeobj_dca7d7ceec02a5c60f3aba206cd28c08;
static PyCodeObject *codeobj_96333c87531cca458baded93ba67a994;
static PyCodeObject *codeobj_6be0414880ba6f6b433c227f58491bde;
static PyCodeObject *codeobj_b19e3924e96957c6b96e2a00a7dea162;
static PyCodeObject *codeobj_010aacf245659ff840a43fec530aecad;
static PyCodeObject *codeobj_3cbfb00d8f52e5f3ea9e5b2ab83591b9;
static PyCodeObject *codeobj_91df195e5feae93a70c33f23586dad62;
static PyCodeObject *codeobj_bcf5330f19ef0731084be5d9945f8c9d;
static PyCodeObject *codeobj_10420cfcf7ebe4cd0eab890d1e989634;
static PyCodeObject *codeobj_e3135b30c2ffbb37d50c1e103e4ea327;
static PyCodeObject *codeobj_f9ab347541fbb7e5eaa73462a987fc35;
static PyCodeObject *codeobj_1b1baa996a9aa4db3501ac39f75605ef;
static PyCodeObject *codeobj_4f029fda04d4a776069f561c70540239;
static PyCodeObject *codeobj_4fed1211764a0002f0964ff5df22ee52;
static PyCodeObject *codeobj_02dbede001a1e37e15f84d532cf6190f;
static PyCodeObject *codeobj_42e4f9648e940e1996ea0380aa2dd19f;
static PyCodeObject *codeobj_55d7dbc327d092f771f630573bf598df;
static PyCodeObject *codeobj_7811755944a2a6d05e812dc52274bd3d;
static PyCodeObject *codeobj_1417d16419933e762e389fbee90b91f7;
static PyCodeObject *codeobj_f713704a7ba127f931280e52dcd65b8b;
static PyCodeObject *codeobj_37f979ef9cd9279e87a48e30be4fabb7;
static PyCodeObject *codeobj_d3f474efd33e0186ab9be5330a06226e;
static PyCodeObject *codeobj_679b827a638bfcb2f34fc1025ad1cce0;
static PyCodeObject *codeobj_bcfb4d516614a69aa8dac813d636e504;
static PyCodeObject *codeobj_3fa143d70c25849b2036970c219a875c;
static PyCodeObject *codeobj_329e72e79189363e9dc039ce83923479;
static PyCodeObject *codeobj_bb0d153d8897a5b657176d08c8594a16;
static PyCodeObject *codeobj_eaf14433425ec478a824daf963b03aa6;
static PyCodeObject *codeobj_6664e8abfe89cdaffd1accfc260d7920;
static PyCodeObject *codeobj_d5099f7201f9d7484a8aec53c51c60a7;
static PyCodeObject *codeobj_c1aa34506ff2db6b85c5687004f2df7b;
static PyCodeObject *codeobj_2512803867250188a038c678598dded1;
static PyCodeObject *codeobj_a9cdc0aff805406c166683af171167b0;
static PyCodeObject *codeobj_378f1484508a32d57e08e59de784deb3;
static PyCodeObject *codeobj_77b7c0239ca19f52b7d2d1b2c93f7212;
static PyCodeObject *codeobj_bac6657b7654ae2101b3a4cad951d032;
static PyCodeObject *codeobj_7b01927d67643ce0eef421a64fddf5bc;
static PyCodeObject *codeobj_1cf4344747a5c75784e8f3c9f710b1bc;
static PyCodeObject *codeobj_0876eff6cda25315b54cb0b6810f6735;
static PyCodeObject *codeobj_7dba519dedf0b9af6c294099e52053d4;
static PyCodeObject *codeobj_ce65af401f1139ca5e66474baa28214b;
static PyCodeObject *codeobj_b2ff758cb1d28d1f58f70797a35b4ae3;
static PyCodeObject *codeobj_aa0f22dbe3b10af7e29cfb79b24c12bd;
static PyCodeObject *codeobj_4f7fec7f4b33ced4818a477050b6e2f6;
static PyCodeObject *codeobj_2d35c35e0539a548d7f7367193233711;
static PyCodeObject *codeobj_f8e6b282c3f6c8e6c394dc315cb67289;
static PyCodeObject *codeobj_c83641657902a7d14882b2c5679c7a27;
static PyCodeObject *codeobj_29c14bb16de6dc53d8e0f34ad36ff02b;
static PyCodeObject *codeobj_e514ce676e9f791e724b3e2b8ee3517e;
static PyCodeObject *codeobj_bf1d96d936851e30d347ea328df356f7;
static PyCodeObject *codeobj_d6639c3d748e14f52c70358395c9ce89;
static PyCodeObject *codeobj_afced52859d61a926d49e9db5968663b;
static PyCodeObject *codeobj_b702c39d122d4ea4a738e071068e65c6;
static PyCodeObject *codeobj_74f8d94d49e9d1b3fcc51a4010fb5b05;
static PyCodeObject *codeobj_6f1e994bac42fa341d0aa13e327c8daa;
static PyCodeObject *codeobj_e3dd73bdb8b4f5b0e782f3b248d1bbf0;
static PyCodeObject *codeobj_6472c0ce4b64cd5a6fbc99d80b23915e;
static PyCodeObject *codeobj_b6bbf93c71965cedf95e6f130505292c;
static PyCodeObject *codeobj_42f5df001e42f799bdd66d4326fe2450;
static PyCodeObject *codeobj_58eae10d95351d4564e2132f6aabd04d;
static PyCodeObject *codeobj_00eecd338db8e7fc72104c076ea2cb22;
static PyCodeObject *codeobj_3c64cd27205b35aebadb239d9a7aa80f;
static PyCodeObject *codeobj_12569823e89ebd1f7010bf35877653ec;
static PyCodeObject *codeobj_4d55603165fdee73a489e272024b5566;
static PyCodeObject *codeobj_7caf0afd9012f0af301e8b709cdfa99d;
static PyCodeObject *codeobj_87abfa1590bf8169d5377e954b0c82f8;
static PyCodeObject *codeobj_d9ea36f93ae2a0e75fa4a9dd58385550;
static PyCodeObject *codeobj_eb9b182d1a8b2e3c06f57c8c989ce4ea;
static PyCodeObject *codeobj_c15bba6d7c175b122a3c688aeb5faae2;
static PyCodeObject *codeobj_e83983f0754629dff38961216e4710b2;
static PyCodeObject *codeobj_e3f682910d7e24ca5e7e6b9cb710e670;
static PyCodeObject *codeobj_c64deef88142504456628a1c57e2e898;
static PyCodeObject *codeobj_89a9e99fdeb055da1aad7c4cf594bac6;
static PyCodeObject *codeobj_9a46581073e9d35d3e662f0dd0d90fc6;
static PyCodeObject *codeobj_5d284c3564eb208718b4f7b3fdb5c76d;
static PyCodeObject *codeobj_e3da31d09a44334ff59634ce6ed0bc3c;
static PyCodeObject *codeobj_a32d9273877d5555e1f8397a426ac96e;
static PyCodeObject *codeobj_a97f33dcf9bfaf8a4419dabc918ae347;
static PyCodeObject *codeobj_d6a48bba910c54c87a10374713f50c03;
static PyCodeObject *codeobj_f757f955720f8f6105e2ae3c8140e814;
static PyCodeObject *codeobj_96442a0dfa832a0ca2ef5688d65f0601;
static PyCodeObject *codeobj_16f5a860b27edd898159d148b21a269d;
static PyCodeObject *codeobj_dbf278b15e5abf874473528998df56a2;
static PyCodeObject *codeobj_1a0da7f678d0c44e4ab0b9ee3998ce3d;
static PyCodeObject *codeobj_588e096092ad3e8ff39d00541f3ba214;
static PyCodeObject *codeobj_9aa4f3fcf67882e11384d538da3cf533;
static PyCodeObject *codeobj_e3c70d6d7c27f75c285b54bcb9bf5971;
static PyCodeObject *codeobj_c728221989c94a572787558029f54575;
static PyCodeObject *codeobj_b4384d5fc3e7916e68dd5a79dbe5af6a;
static PyCodeObject *codeobj_df6d2d36af6933f0a9c9322ae3cb2d8d;
static PyCodeObject *codeobj_3d83f283adc8088b6a2389b55a77b22f;
static PyCodeObject *codeobj_7bb9255037436edd735d9b2f553bced6;
static PyCodeObject *codeobj_21fe7c20f7e6de3882fb0c57b3a8518e;
static PyCodeObject *codeobj_906a8fe77cc911fc1e2a212899cad0ac;
static PyCodeObject *codeobj_5f0d7afe6dab2cc41cdd921619392452;
static PyCodeObject *codeobj_2be1b4aca87a6dc8a16b106038b7e70b;
static PyCodeObject *codeobj_21aa967ad87a07864e5de333e28e2ee6;
static PyCodeObject *codeobj_1d8ea9748902d427ef915d49d461dc64;
static PyCodeObject *codeobj_755d1972be7ae154fd4fa21add3197bb;
static PyCodeObject *codeobj_853e881185c91a789360267365075b33;
static PyCodeObject *codeobj_3592e4f7e774e536184c9d85c1636018;
static PyCodeObject *codeobj_61cd31af88d046a364a3284524c567b3;
static PyCodeObject *codeobj_d6d5ffafe75da7b5091b64ccd241ec7d;
static PyCodeObject *codeobj_889d729aeb89a261055f0a29016f2fdf;
static PyCodeObject *codeobj_13bf352ddd5fa3c695d02068f0b1e30f;
static PyCodeObject *codeobj_34148d4b957f95056e6417efc83e54c7;
static PyCodeObject *codeobj_7bf90605cb1280915f604f36d70ceb41;
static PyCodeObject *codeobj_c8ef158a6ed27b9c50be908fb958740c;
static PyCodeObject *codeobj_e472dcad8970048cd352890714c223fd;
static PyCodeObject *codeobj_0f973e787a689cc52b286a23226535ff;
static PyCodeObject *codeobj_e400d213813e546f77aef5718667f789;
static PyCodeObject *codeobj_605416594363f56b0d10d73015825425;
static PyCodeObject *codeobj_3f892fb729973a2389b6393bb8d6fb8c;
static PyCodeObject *codeobj_f92ca0e40f752d9e759d3735cae2475b;
static PyCodeObject *codeobj_34d520deb0ed14b89036e5c1da00fecc;
static PyCodeObject *codeobj_3026332f14fbf8665c7cd4578c428196;
static PyCodeObject *codeobj_5c40d2d7645073415341562fe91c1f4b;
static PyCodeObject *codeobj_2d0b66f2b8fd24c66a35f010413b49d5;
static PyCodeObject *codeobj_40fa58f8f298d619ecbc9a81eee4234b;
static PyCodeObject *codeobj_ff5fe515038cc46493064e2698355f84;
static PyCodeObject *codeobj_6e3372a8c156a773345a1df183a9da22;
static PyCodeObject *codeobj_1f53acf0eff9c711b12e02e706db1b39;
static PyCodeObject *codeobj_2e4da870440087c6273a32fffe6b8f69;
static PyCodeObject *codeobj_7ab685f261388b269ab7018432a4ba0c;
static PyCodeObject *codeobj_3305a22d8988435833c7836623df6fca;
static PyCodeObject *codeobj_efb4a8ca864e92def98ed1b8a1cfbee8;
static PyCodeObject *codeobj_38c2d4a4c251de148d0436a0a4be469e;
static PyCodeObject *codeobj_b252551eddbbd2576c56696ee1d493dd;
static PyCodeObject *codeobj_4d17852abf8a517fc4ff44ae729e548b;
static PyCodeObject *codeobj_e89b8e795b4d1910cbcc791149e9a212;
static PyCodeObject *codeobj_42f175115eb8ff44d2ec6fc8756645a2;
static PyCodeObject *codeobj_3edaf8be8af74f4d442a9cb5ecd42094;
static PyCodeObject *codeobj_7e2e09242460c15f0834e9c5a605ef40;
static PyCodeObject *codeobj_ca365c385a3d2a0ae87d5750f0bfdfb9;
static PyCodeObject *codeobj_2a928a6ecbfea16729224220e9761eac;
static PyCodeObject *codeobj_f63a990b5a8ce0603a1d3e259728a3eb;
static PyCodeObject *codeobj_73de6d70f5db1ee1d11eaed6f5a59333;
static PyCodeObject *codeobj_1040b822b634c307ec5fa63f79b0e0bc;
static PyCodeObject *codeobj_2d89cadff36e844998f6c8b3f7ad10e7;
static PyCodeObject *codeobj_34898716a2b25c5ff89184f00bcba555;
static PyCodeObject *codeobj_0fc3d3a4cce57302d701706398783808;
static PyCodeObject *codeobj_49f6a0a2ef5d95eab9f10adcbe6d0640;
static PyCodeObject *codeobj_4b4fabf56b81048ddc4b99fb442247be;
static PyCodeObject *codeobj_fa6e19317fbdc14afbe4c45f87f453ea;
static PyCodeObject *codeobj_cf0d8cee1c0e22f3fa8373d9ae1ee202;
static PyCodeObject *codeobj_08462f39dde841a10fab2c87b0ce420e;
static PyCodeObject *codeobj_fd453767e5259a1a9334b3aa46dd5046;
static PyCodeObject *codeobj_bb774c7f31c7bb717b18dcb5b7ccee62;
static PyCodeObject *codeobj_8dd4b67d7fc72cbec764bb7937f272cf;
static PyCodeObject *codeobj_9c130511bb36e5474147c5c308128768;
static PyCodeObject *codeobj_c2f30c868af015bb1e2957516b303bc4;
static PyCodeObject *codeobj_006f60789af7f75f333d104908d05101;
static PyCodeObject *codeobj_ea92c19a0efc2cc9557533048d34bbe6;
static PyCodeObject *codeobj_7034167245b21eb3259b2ff7355e7a8b;
static PyCodeObject *codeobj_a9f508abcfd284cd87056fb7f5e3acce;
static PyCodeObject *codeobj_76daf6860d3644632d0d657edfa983a0;
static PyCodeObject *codeobj_7be041372a3ea2fbf9bfc5563d496a9f;
static PyCodeObject *codeobj_8e713bec3ab09c713cc282cf14ff3b40;
static PyCodeObject *codeobj_2f4825462fa1d8cfb1966311a8d37a18;
static PyCodeObject *codeobj_a9531df7a95b5a1df86ea05bd54be08c;
static PyCodeObject *codeobj_efaae3bc030aba6ae0586fba58adda68;
static PyCodeObject *codeobj_8b77290f7cb29f19017b2fabb1f1cd39;
static PyCodeObject *codeobj_cebb6efe21f489a19821799b0060167e;
static PyCodeObject *codeobj_ad7abfff9a8ace837cef9c8befb2a3d3;
static PyCodeObject *codeobj_bea355721dd4873255d3fa06cd15b076;
static PyCodeObject *codeobj_b8edc5c0d6ababe853c4e97a3c2622f6;
static PyCodeObject *codeobj_001e334e41d2a52e959d9a55c352cb2d;
static PyCodeObject *codeobj_707a66e0a7b7d275648c8f6a19111844;
static PyCodeObject *codeobj_453e315128d097c62446eba020d8b766;
static PyCodeObject *codeobj_dbe16675e951c881376fe3916e59ce39;
static PyCodeObject *codeobj_85ded636f13dc2748ca6dc2facf04d87;
static PyCodeObject *codeobj_c07f188c3697a98da20f5ecc7087adda;
static PyCodeObject *codeobj_838dd01117966c2d76f91375634feb0b;
static PyCodeObject *codeobj_10f57efaeacb58a7dc2fb45250479593;
static PyCodeObject *codeobj_c77bac1d2d8b09b36f06541ee7d1c809;
static PyCodeObject *codeobj_fcc405463fdf61e7cb5f71f88f1b3aae;
static PyCodeObject *codeobj_d97f9f397b3cb92eb573e30ebf139cd2;
static PyCodeObject *codeobj_f0dbe416ae5c1921912a342d9cc5e507;
static PyCodeObject *codeobj_f843252fcf81bae474990bc203ed92b4;
static PyCodeObject *codeobj_0df2824def00aced95e5ab515ecd14b3;
static PyCodeObject *codeobj_09a08958825512da68a3318a1a74b624;
static PyCodeObject *codeobj_042ab9f9f47a2ee1b929194970a894ff;
static PyCodeObject *codeobj_70d9974d4dce420c7821cf01f86f3804;
static PyCodeObject *codeobj_6b9befeca3059e3efa8ab83f072ae9f9;
static PyCodeObject *codeobj_b774c94b41bba0912d7f96c7bf07dcb7;
static PyCodeObject *codeobj_ffebb5641ad002c18fec8bef23371a2f;
static PyCodeObject *codeobj_54d328f6650ecdcedde9b694a65c6992;
static PyCodeObject *codeobj_c6c49fe0ad99308d3b88c9927f08c3a8;
static PyCodeObject *codeobj_e1c4508088fd65b1b811ece268bb18c0;
static PyCodeObject *codeobj_84504c440f206dac8bf39606312c7b53;
static PyCodeObject *codeobj_7e1725d755d630dc1fdc3dd30b18407b;
static PyCodeObject *codeobj_d3692d30251465242bca3a2f8dfc1985;
static PyCodeObject *codeobj_320a5da8062c1545fae1c70c2735422b;
static PyCodeObject *codeobj_5a885c4160c7fc30ce3cd2b5ddd2cac2;
static PyCodeObject *codeobj_d2d6a572eccd40b211bf95f563ba310f;
static PyCodeObject *codeobj_7c1a81b4c22081b323098fe75313c380;
static PyCodeObject *codeobj_41439d00d428d07f66100e916a0cebec;
static PyCodeObject *codeobj_48414fb32bb8beea0c751e181df9c780;
static PyCodeObject *codeobj_059c2701d069237cb13a3c10a79c2dd7;
static PyCodeObject *codeobj_c281c027bdb0ca0290530ab424df02bf;
static PyCodeObject *codeobj_8ca52050f6f9a2d7fdf5e445547c3771;
static PyCodeObject *codeobj_847e7f94bf2761dec2c35df656db185e;
static PyCodeObject *codeobj_7609cae0868d903e5a2be68e72c874c8;
static PyCodeObject *codeobj_f077011d878bdd0950478d9435b61f37;
static PyCodeObject *codeobj_18e2a6babf431e501ebd34ef62dfee6a;
static PyCodeObject *codeobj_8010d6bb762f8675cc559331bfa74efb;
static PyCodeObject *codeobj_f0739fe6a3573ced803d021a46f73484;
static PyCodeObject *codeobj_a4b91766ab7047a92cbf56396ffc786f;
static PyCodeObject *codeobj_2fdd8ebf8b37a3be4d078f5aa37f6b9b;
static PyCodeObject *codeobj_f779d74eebc1cb8fce27d789ba9c525d;
static PyCodeObject *codeobj_5109c98e1e11618c92a0cf7838547347;
static PyCodeObject *codeobj_c752f3799ac01c3199ebdaedb36a8142;
static PyCodeObject *codeobj_14aee79461124a621d76399c7bd182a8;
static PyCodeObject *codeobj_75e66ccd951a27b683ba1d1964e713da;
static PyCodeObject *codeobj_e475846966cdd11f8ed327620243fb8b;
static PyCodeObject *codeobj_953e8f7210b66734d2427f7b5e46a13a;
static PyCodeObject *codeobj_21fff67716cbe4d4e5d761af0af9f929;
static PyCodeObject *codeobj_c998dce4ca09801fdb5ec8ec717b3a93;
static PyCodeObject *codeobj_b1ee6155ec7fb1f6382d3953e9bdb127;
static PyCodeObject *codeobj_99d1e402b1a6521d7f0cc9b1c4c04626;
static PyCodeObject *codeobj_2866f05819f324b0ba31917d05642955;
static PyCodeObject *codeobj_29a9574f0ae92bde0e463245ffa82934;
static PyCodeObject *codeobj_4fc794cc258db96e0581acd70eed1ee4;
static PyCodeObject *codeobj_cddf06f76a61e27687c8d04b467e3434;
static PyCodeObject *codeobj_a4f4a2117ada9bc708f462b4ccb986c5;
static PyCodeObject *codeobj_fa0ab4f5906404aa4b5cbe475e1f2e6e;
static PyCodeObject *codeobj_475ff1167e42bc5c401e446e79cd286a;
static PyCodeObject *codeobj_927f76c467770a5b9e5c981dc56ce84e;
static PyCodeObject *codeobj_322264d5c85ad95f9d3757969320c74c;
static PyCodeObject *codeobj_66f7ab97d939c3f4f0e95767f2780a7c;
static PyCodeObject *codeobj_d2aeb0f6581eea4412c9b79be5fa0530;
static PyCodeObject *codeobj_c71cbdd5c1a73f69916fb9d768b0e3c8;
static PyCodeObject *codeobj_cf189704e4014db0ee029373657fd37e;
static PyCodeObject *codeobj_74153452be25943b302bd7b3877d82ba;
static PyCodeObject *codeobj_a582dbc6e71bdfe5ea1b503092fc52a9;
static PyCodeObject *codeobj_8a9ce251c9fed0565f88fbd0d8da81d0;
static PyCodeObject *codeobj_d17db1f017fbc3be9b7f39950b885ab0;
static PyCodeObject *codeobj_bca737e899e3ad78f1157591a1e24532;
static PyCodeObject *codeobj_fe1e246f74080f172c5e511c76764f11;
static PyCodeObject *codeobj_979f62d5e23e391e772b06edae72c2dc;
static PyCodeObject *codeobj_946438b20fd42ed2d862099a4b118d99;
static PyCodeObject *codeobj_2ec674c03dd7fd4126c2ac2ee31b8a05;
static PyCodeObject *codeobj_69a535a32cf2e3762391685dba872750;
static PyCodeObject *codeobj_48310ecd8e8402d535ab59156deb2693;
static PyCodeObject *codeobj_eb0c70f7ca52a5d76aa1c66983c5e750;
static PyCodeObject *codeobj_9f477e055e6d61b408214f9c75869016;
static PyCodeObject *codeobj_619539fdd70ba5b6e36e0d21b51c976d;
static PyCodeObject *codeobj_0eed00c2a4d10957613addab994fb2e2;
static PyCodeObject *codeobj_8bcfcc928f3f7335c124c74f34429144;
static PyCodeObject *codeobj_de09c6c08f1327b2adc32bbc4dc46f13;
static PyCodeObject *codeobj_bba29cf04bc3d1b0badf15dbd430adc8;
static PyCodeObject *codeobj_a5dcb1ee4f6881a996dd4905c583a6d6;
static PyCodeObject *codeobj_d98789f658724e5a85f4af82e1f5c43e;
static PyCodeObject *codeobj_f71878a4dfa11d4726ae13c2b5baf2d1;
static PyCodeObject *codeobj_cca8fd0701c5392dbc7d40521b9b3a08;
static PyCodeObject *codeobj_df6e651c101aa95f91564425da2654cd;
static PyCodeObject *codeobj_1807b6ca922be67e82841e9b47006d62;
static PyCodeObject *codeobj_e575def1afe55ee5a201ad8385042e98;
static PyCodeObject *codeobj_17eabe4867ea0ae34f6a9c77e36a7b6f;
static PyCodeObject *codeobj_a79a5208a14db603e6d837b0c34ebb39;
static PyCodeObject *codeobj_368bd565df8d1b7bc9a4c039f93ba850;
static PyCodeObject *codeobj_4b3fde649e7c4be6197c566dac81a024;
static PyCodeObject *codeobj_db73c6e00aec411f2aa7eb9da05c6805;
static PyCodeObject *codeobj_e4b372e089fbc7e5fb4d45b16a0c8636;
static PyCodeObject *codeobj_5cbf4fab4c2124bb2b36a401dd8e6c5f;
static PyCodeObject *codeobj_5ce825167c761b763f62a0cca3170fdc;
static PyCodeObject *codeobj_4c1db0006441ef38b5ee7e374d4d0804;
static PyCodeObject *codeobj_6b20f2bc37602335552e6e16621dd1c4;
static PyCodeObject *codeobj_73be685428acc1df92a271369e0bd316;
static PyCodeObject *codeobj_931c0a7f3453008c37a1330dd732be96;
static PyCodeObject *codeobj_b1f0b52deb44af19d4dec0799359dbc6;
static PyCodeObject *codeobj_89195a8737e718a015732554cd8b0ecf;
static PyCodeObject *codeobj_31699ff386c647c16a59772e9d1185d5;
static PyCodeObject *codeobj_064d595c73c8c4974ab0d3debd4311fd;
static PyCodeObject *codeobj_e8234a88e79846c05388c3368aa40b02;
static PyCodeObject *codeobj_36b75efc5cb2644b1e5b2f2b7ac76e2a;
static PyCodeObject *codeobj_1a8dd72c18c03866f4411799d28c5979;
static PyCodeObject *codeobj_e26d0b73897c1062af13835f340e634c;
static PyCodeObject *codeobj_dbc69801ca75427565e636777011a71a;
static PyCodeObject *codeobj_bd4819956892029ce6dc625927cdd03b;
static PyCodeObject *codeobj_ce3d7f1da4108e9ee73751089818154a;
static PyCodeObject *codeobj_d01e95afa6773609415a5ad3d1bc7378;
static PyCodeObject *codeobj_c6cff64f5a619567cc90bcd3ff5b41a1;
static PyCodeObject *codeobj_2aee0e71fbfb7d70078ef3e5651c5274;
static PyCodeObject *codeobj_9e53b0661e341a07bfe06ad7b3648d5c;
static PyCodeObject *codeobj_b1e8231baac4ff0fb8a1ee4db14e786e;
static PyCodeObject *codeobj_08a8341025608895f5cca084a2a73a59;
static PyCodeObject *codeobj_7ff0ae4604184518803c0a295e81bf4d;
static PyCodeObject *codeobj_29fc55b34bb3ce57dc59d6be792503c9;
static PyCodeObject *codeobj_fc0fb2316499201016d2c11f98c02811;
static PyCodeObject *codeobj_804b72e970ddaba1aaa2ed310122c27c;
static PyCodeObject *codeobj_9d175873b9d319b284c2dd2cd56512fd;
static PyCodeObject *codeobj_db02ea50efb61a8e73a7fefd737c763d;
static PyCodeObject *codeobj_bea55e10897cf5b6c5f6dccbe052466a;

static void createModuleCodeObjects(void) {
    module_filename_obj = MAKE_RELATIVE_PATH(mod_consts[1063]); CHECK_OBJECT(module_filename_obj);
    codeobj_820d4c3053ff03a73b15ed9fe22ce4e4 = MAKE_CODEOBJECT(module_filename_obj, 540, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1064], NULL, 4, 0, 0);
    codeobj_01f33796bc85db7f9da6f1ce0b59cc41 = MAKE_CODEOBJECT(module_filename_obj, 450, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1065], NULL, 4, 0, 0);
    codeobj_617da111e7814616a99fd7ec33c56714 = MAKE_CODEOBJECT(module_filename_obj, 874, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1066], NULL, 3, 0, 0);
    codeobj_d68d4e80f536f7a9780b74378060ae30 = MAKE_CODEOBJECT(module_filename_obj, 875, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1067], NULL, 4, 0, 0);
    codeobj_d2e0a3028c0ae5d690c5d6dc62586c2c = MAKE_CODEOBJECT(module_filename_obj, 873, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1068], NULL, 2, 0, 0);
    codeobj_6e7a2c37b05890177243502e8225fad1 = MAKE_CODEOBJECT(module_filename_obj, 344, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1069], NULL, 2, 0, 0);
    codeobj_f1aa09101725e0642609e846892d9b01 = MAKE_CODEOBJECT(module_filename_obj, 730, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1070], NULL, 3, 4, 0);
    codeobj_d62377d328f3057ec90c50c0f2ab5ae0 = MAKE_CODEOBJECT(module_filename_obj, 728, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1071], NULL, 10, 0, 0);
    codeobj_839e52343318810e4edcc15d5bb0dcc0 = MAKE_CODEOBJECT(module_filename_obj, 885, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1071], NULL, 10, 0, 0);
    codeobj_12c7efe66f7f77aa3a060530e2d53131 = MAKE_CODEOBJECT(module_filename_obj, 541, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1072], NULL, 4, 0, 0);
    codeobj_40c8a1ab097e24e73d21b243b5ea1a1b = MAKE_CODEOBJECT(module_filename_obj, 902, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1073], NULL, 3, 0, 0);
    codeobj_badaa9b7f948cb582c8bf0d638344bc1 = MAKE_CODEOBJECT(module_filename_obj, 311, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1074], NULL, 3, 0, 0);
    codeobj_803a5a9f7e3ec6d7170b9ee2717ebed8 = MAKE_CODEOBJECT(module_filename_obj, 535, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1075], NULL, 9, 0, 0);
    codeobj_051bd70207baefc2ef119e1054f4129c = MAKE_CODEOBJECT(module_filename_obj, 817, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1076], NULL, 6, 0, 0);
    codeobj_18c0c6d51def37199a83c105dfe79a97 = MAKE_CODEOBJECT(module_filename_obj, 394, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1077], NULL, 1, 0, 0);
    codeobj_e913fc1923a2041be8a63962f48d0e5a = MAKE_CODEOBJECT(module_filename_obj, 300, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1078], NULL, 8, 0, 0);
    codeobj_1b38c67db128e220d5a863b37a8c9974 = MAKE_CODEOBJECT(module_filename_obj, 299, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1079], NULL, 8, 0, 0);
    codeobj_e6ebc77f0fb9c37a10f730123c395c1d = MAKE_CODEOBJECT(module_filename_obj, 280, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_759153a34c095830fd7c2d50e180ecf3 = MAKE_CODEOBJECT(module_filename_obj, 281, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_dce98f1557effa7f2578e587c810cbd3 = MAKE_CODEOBJECT(module_filename_obj, 284, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_3426e15d019a2adb0486b728a9dd74e7 = MAKE_CODEOBJECT(module_filename_obj, 340, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_070433f3767f708a84b2d945cf43fae6 = MAKE_CODEOBJECT(module_filename_obj, 360, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_14b5187c5fc6a1513f5a02a87c05fceb = MAKE_CODEOBJECT(module_filename_obj, 370, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_5e8436bbe59a5692f996f9c84c98cbc3 = MAKE_CODEOBJECT(module_filename_obj, 371, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_5eb2744b4e974e464ee7e95bb0317b7a = MAKE_CODEOBJECT(module_filename_obj, 372, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_759c40cc67642f4aa4a594d390905a11 = MAKE_CODEOBJECT(module_filename_obj, 373, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_f7b308f4266b182e74ddc6f21d23bd71 = MAKE_CODEOBJECT(module_filename_obj, 415, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_b3e1ba6f1fbc7a4b10ca6563414cda35 = MAKE_CODEOBJECT(module_filename_obj, 416, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_d96f65a66c3032c798b258bb4661ae3b = MAKE_CODEOBJECT(module_filename_obj, 440, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_5dbfbaf2b8149e574fa6038492b6fa1c = MAKE_CODEOBJECT(module_filename_obj, 441, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_a62ab153a36f9f18c2bce55b7660fec6 = MAKE_CODEOBJECT(module_filename_obj, 493, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_3d9285a4fcf9ca7a7c8c9c2ea3b478da = MAKE_CODEOBJECT(module_filename_obj, 497, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_6ef106c6f1f9264d11e34b781a6556ab = MAKE_CODEOBJECT(module_filename_obj, 498, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_911ad72d3ebfb3e75f03b048f49992f2 = MAKE_CODEOBJECT(module_filename_obj, 499, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_336a3fa4ad87dd1c56d8fa959251adf6 = MAKE_CODEOBJECT(module_filename_obj, 500, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_90a56f69c7e5a0de9f5bd955e7eac464 = MAKE_CODEOBJECT(module_filename_obj, 502, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_e67dd18b202923643ba78ba4e53ebae6 = MAKE_CODEOBJECT(module_filename_obj, 504, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_d8383418ceafc69df20e26e6839dba7b = MAKE_CODEOBJECT(module_filename_obj, 526, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_02e39bd46c17894dab0bb0824f1a58eb = MAKE_CODEOBJECT(module_filename_obj, 552, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_d395b78973a7028499477696d5097fd2 = MAKE_CODEOBJECT(module_filename_obj, 651, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_78016b5d58a552903192e58be446eedf = MAKE_CODEOBJECT(module_filename_obj, 671, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_35a67090b889b989d26e87cdbed941a0 = MAKE_CODEOBJECT(module_filename_obj, 725, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_7cce56e8c0630cae54932162cf0e5cbc = MAKE_CODEOBJECT(module_filename_obj, 726, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_fa25d15cf1fa2e3381cf8dc26bf48222 = MAKE_CODEOBJECT(module_filename_obj, 741, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_a044b5240e92debc1935c582e93e2186 = MAKE_CODEOBJECT(module_filename_obj, 761, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_a5a4d193cd9df1d36327d84a80f3b7e5 = MAKE_CODEOBJECT(module_filename_obj, 762, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_d215e2ba512ee9033650d8b51ddd108a = MAKE_CODEOBJECT(module_filename_obj, 763, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_a66340aa3818c3e823891c63bf9404f1 = MAKE_CODEOBJECT(module_filename_obj, 764, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_a7313fa40e83d68bfe82303c0a0992bf = MAKE_CODEOBJECT(module_filename_obj, 765, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_ffb3ed9f24610894b544e92e6e470195 = MAKE_CODEOBJECT(module_filename_obj, 790, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_b23c2f0992890a01dbc50170aa50db2c = MAKE_CODEOBJECT(module_filename_obj, 793, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_e9ecf5a44896ac4ea478229af8a82752 = MAKE_CODEOBJECT(module_filename_obj, 794, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_1f394b6b945ba82645562d0c03256e5b = MAKE_CODEOBJECT(module_filename_obj, 827, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_1677263690ec58d4effc5d0b50f29445 = MAKE_CODEOBJECT(module_filename_obj, 828, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_0b173ab2a6bec184761f01e2464f2ba7 = MAKE_CODEOBJECT(module_filename_obj, 857, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_1fa8f624fd6adff65d701213c759f51f = MAKE_CODEOBJECT(module_filename_obj, 858, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_09d3fea6e2500d3521943ff2de4df2d9 = MAKE_CODEOBJECT(module_filename_obj, 859, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_9172690bec2dbe37b68ffadc63563e6e = MAKE_CODEOBJECT(module_filename_obj, 860, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_75179e8d70cdbfec19d864aa7c3ced7a = MAKE_CODEOBJECT(module_filename_obj, 861, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_6e9b2cbbf689806b4339763bf1d176da = MAKE_CODEOBJECT(module_filename_obj, 862, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_5898b81da0cf7407918deb15d503c796 = MAKE_CODEOBJECT(module_filename_obj, 863, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_b25cb90b9ec6e4f31bdc56dfcde6b5e3 = MAKE_CODEOBJECT(module_filename_obj, 864, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_8abf15b14cb41d197135b54b6f67f114 = MAKE_CODEOBJECT(module_filename_obj, 865, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_0fa9e2f0115127f3271301505a36d30f = MAKE_CODEOBJECT(module_filename_obj, 866, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_61bac6b71be71b0bab7c7a1e8f010417 = MAKE_CODEOBJECT(module_filename_obj, 868, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_656af5bed6b115ca2f28706e3d089147 = MAKE_CODEOBJECT(module_filename_obj, 880, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1080], NULL, 1, 0, 0);
    codeobj_48388f92d237b47809acaf7d616bd695 = MAKE_CODEOBJECT(module_filename_obj, 537, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1081], NULL, 3, 0, 0);
    codeobj_0e5f69316d9939294241b29a44ef7c48 = MAKE_CODEOBJECT(module_filename_obj, 832, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1081], NULL, 3, 0, 0);
    codeobj_76d063a905c17a9a99f1be7a331e67cf = MAKE_CODEOBJECT(module_filename_obj, 883, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1082], NULL, 5, 0, 0);
    codeobj_0217d7f76189cbe2fc8608bf5ff28577 = MAKE_CODEOBJECT(module_filename_obj, 392, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1083], NULL, 3, 0, 0);
    codeobj_d9dacdea00267e02bc2ade1e15a52716 = MAKE_CODEOBJECT(module_filename_obj, 393, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1083], NULL, 3, 0, 0);
    codeobj_2659af50e36e4452e4562f92b573703f = MAKE_CODEOBJECT(module_filename_obj, 417, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1084], NULL, 3, 0, 0);
    codeobj_14b0e1c4eeb0efaf4be8284a6bd757bd = MAKE_CODEOBJECT(module_filename_obj, 325, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1085], NULL, 3, 0, 0);
    codeobj_f75ffe88a2d601dbcccd2bc3a46d2bba = MAKE_CODEOBJECT(module_filename_obj, 622, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1086], NULL, 3, 0, 0);
    codeobj_8f63aecf7c8e2a65e2d7a4897c495afa = MAKE_CODEOBJECT(module_filename_obj, 632, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1086], NULL, 3, 0, 0);
    codeobj_33b3ebb2639d8201740c7f88fb7e76eb = MAKE_CODEOBJECT(module_filename_obj, 734, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1087], NULL, 2, 0, 0);
    codeobj_a1a65d242e50d9b70abbe6dffb8b2af9 = MAKE_CODEOBJECT(module_filename_obj, 856, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1088], NULL, 3, 0, 0);
    codeobj_ff6a6c91581c991ce7ff66a82456e11e = MAKE_CODEOBJECT(module_filename_obj, 266, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1089], NULL, 6, 0, 0);
    codeobj_8fa9016cb500bfadea6ce1eb2928f741 = MAKE_CODEOBJECT(module_filename_obj, 297, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1089], NULL, 6, 0, 0);
    codeobj_0baba68eb7cc8951affff6641fda0c8d = MAKE_CODEOBJECT(module_filename_obj, 723, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1090], NULL, 3, 0, 0);
    codeobj_5195d7b7ceed11f99575358553d18f3a = MAKE_CODEOBJECT(module_filename_obj, 472, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1091], NULL, 5, 0, 0);
    codeobj_a73ec3853363e683dfaed25cfd7001e5 = MAKE_CODEOBJECT(module_filename_obj, 320, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1092], NULL, 5, 0, 0);
    codeobj_4dce9161ddbda422699b243c2bac60c4 = MAKE_CODEOBJECT(module_filename_obj, 330, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1093], NULL, 3, 0, 0);
    codeobj_1bf209d16122f9fd4695a2f407470e0e = MAKE_CODEOBJECT(module_filename_obj, 496, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1093], NULL, 3, 0, 0);
    codeobj_93f97c8c1445b8c152e5d7d9edcfad8d = MAKE_CODEOBJECT(module_filename_obj, 334, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1094], NULL, 3, 0, 0);
    codeobj_ef265e5e884d4102d9829bf9c096fdef = MAKE_CODEOBJECT(module_filename_obj, 894, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1094], NULL, 3, 0, 0);
    codeobj_cd68e8bb426a4fdad273a47ef28a4472 = MAKE_CODEOBJECT(module_filename_obj, 581, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1095], NULL, 3, 0, 0);
    codeobj_c232368d74abb528dc4c2cf68d0c34d0 = MAKE_CODEOBJECT(module_filename_obj, 374, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1096], NULL, 3, 0, 0);
    codeobj_3ada5cafca958e603018cefe71f873a4 = MAKE_CODEOBJECT(module_filename_obj, 375, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1096], NULL, 3, 0, 0);
    codeobj_8d198e86cb981b8f13fe0348758c1155 = MAKE_CODEOBJECT(module_filename_obj, 884, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1096], NULL, 3, 0, 0);
    codeobj_06d8be554f837c8a1a50cf361ebf7081 = MAKE_CODEOBJECT(module_filename_obj, 888, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1096], NULL, 3, 0, 0);
    codeobj_99b9afbef98917154a60dac12272ffc4 = MAKE_CODEOBJECT(module_filename_obj, 273, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_2bc8c668ef6f5479552a4909464bcf97 = MAKE_CODEOBJECT(module_filename_obj, 276, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_21db83cf1a3fcc5313dbbedf59f61c88 = MAKE_CODEOBJECT(module_filename_obj, 277, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_eac471b32f47cbacbdbf3230a633171a = MAKE_CODEOBJECT(module_filename_obj, 282, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_b881e1fe1733720427f035cb9b4ccd3c = MAKE_CODEOBJECT(module_filename_obj, 434, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_d282ae9df147bcd7f6700260fc074fb6 = MAKE_CODEOBJECT(module_filename_obj, 435, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_b298b2c40a578a3f929ded3d64fa23ee = MAKE_CODEOBJECT(module_filename_obj, 561, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_6562eb61386ef0033e54c6d938c2bb3c = MAKE_CODEOBJECT(module_filename_obj, 562, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_17c32f247cca654448db550a7cb6707c = MAKE_CODEOBJECT(module_filename_obj, 563, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_61557941a19612574c0ed389afa577bb = MAKE_CODEOBJECT(module_filename_obj, 652, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_8becbf862656f24a0c1445c038cbd46f = MAKE_CODEOBJECT(module_filename_obj, 799, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_e1774da6a1766e1d975eb101bd34a2e7 = MAKE_CODEOBJECT(module_filename_obj, 842, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_d690d1937797e01720ebf96be9d98ca3 = MAKE_CODEOBJECT(module_filename_obj, 843, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_1eb3a784606f27eccfa1af31af0a759b = MAKE_CODEOBJECT(module_filename_obj, 848, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_a427df230a95c321dc1f4fca84aeec35 = MAKE_CODEOBJECT(module_filename_obj, 849, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_696112b42c2d230fdf675f427878dfef = MAKE_CODEOBJECT(module_filename_obj, 891, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_41f9984a59ae08351d997376f897d71f = MAKE_CODEOBJECT(module_filename_obj, 898, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_bf37ad38612391430fcf4c134de1dea9 = MAKE_CODEOBJECT(module_filename_obj, 899, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1097], NULL, 2, 0, 0);
    codeobj_f118337dfde5f486568a609d11677db0 = MAKE_CODEOBJECT(module_filename_obj, 670, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1098], NULL, 4, 0, 0);
    codeobj_0b37822f831e4e3d35266a32a435acee = MAKE_CODEOBJECT(module_filename_obj, 721, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1098], NULL, 4, 0, 0);
    codeobj_038e6956e138bae26d9af57a7fc4fbe4 = MAKE_CODEOBJECT(module_filename_obj, 722, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1098], NULL, 4, 0, 0);
    codeobj_06ecd1f315f809289f5b18347b82346a = MAKE_CODEOBJECT(module_filename_obj, 834, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1099], NULL, 3, 2, 0);
    codeobj_11f6003de0ad1b2594bfc7a06d8cafca = MAKE_CODEOBJECT(module_filename_obj, 520, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1100], NULL, 3, 0, 0);
    codeobj_35bf73cf0ae77c5bb93bddeed02081cb = MAKE_CODEOBJECT(module_filename_obj, 831, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1100], NULL, 3, 0, 0);
    codeobj_f7ede9e9636103a0471d3efe1db139b1 = MAKE_CODEOBJECT(module_filename_obj, 818, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1101], NULL, 3, 0, 0);
    codeobj_f46d1adb89c674089a3e8a206fa1520a = MAKE_CODEOBJECT(module_filename_obj, 484, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1102], NULL, 4, 0, 0);
    codeobj_d9f16c6baf6c725760400c2c10970d16 = MAKE_CODEOBJECT(module_filename_obj, 451, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1103], NULL, 5, 0, 0);
    codeobj_622843b7a2fd6392f8e33d080f4de109 = MAKE_CODEOBJECT(module_filename_obj, 481, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1104], NULL, 4, 0, 0);
    codeobj_3cd0ef2071698f6da56bace17d4a2635 = MAKE_CODEOBJECT(module_filename_obj, 482, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1104], NULL, 4, 0, 0);
    codeobj_6f5e5fe31763de9725e981639ac53c42 = MAKE_CODEOBJECT(module_filename_obj, 814, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1105], NULL, 4, 0, 0);
    codeobj_139d293f6e7bb1529805e599c82875d9 = MAKE_CODEOBJECT(module_filename_obj, 815, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1105], NULL, 4, 0, 0);
    codeobj_ce6c7911a3ec55475198e2cb89e7df36 = MAKE_CODEOBJECT(module_filename_obj, 485, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1106], NULL, 4, 0, 0);
    codeobj_eeb8e49306fbcbc54379e1796d043476 = MAKE_CODEOBJECT(module_filename_obj, 279, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1107], NULL, 4, 0, 0);
    codeobj_bbd2972b9a6900270bbb1644b4f17020 = MAKE_CODEOBJECT(module_filename_obj, 442, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1107], NULL, 4, 0, 0);
    codeobj_a4889ab0a689f3723ddd3b9b83cb43ac = MAKE_CODEOBJECT(module_filename_obj, 578, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1107], NULL, 4, 0, 0);
    codeobj_117d3283aee70b6adb62bd73b24a6ff8 = MAKE_CODEOBJECT(module_filename_obj, 364, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1108], NULL, 3, 0, 0);
    codeobj_83a0479aad60579f308e6f6f95af3eaa = MAKE_CODEOBJECT(module_filename_obj, 365, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1108], NULL, 3, 0, 0);
    codeobj_7b0e3ea98adb4818017d9e75273e41e9 = MAKE_CODEOBJECT(module_filename_obj, 368, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1108], NULL, 3, 0, 0);
    codeobj_e5e3d89d91ac76e946c6083d6cf1c800 = MAKE_CODEOBJECT(module_filename_obj, 839, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1108], NULL, 3, 0, 0);
    codeobj_f5b625089ea6dd48dcdf8a643bcbb5ae = MAKE_CODEOBJECT(module_filename_obj, 897, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1108], NULL, 3, 0, 0);
    codeobj_7487d6261417f0aca2a73c3a15e13b42 = MAKE_CODEOBJECT(module_filename_obj, 366, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1109], NULL, 4, 0, 0);
    codeobj_6a2bd8324fe3f931dbef4853f99ecd07 = MAKE_CODEOBJECT(module_filename_obj, 367, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1109], NULL, 4, 0, 0);
    codeobj_c7c62883de64a4cb091b457e98e0d629 = MAKE_CODEOBJECT(module_filename_obj, 587, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1110], NULL, 4, 0, 0);
    codeobj_670b54eed00e6a0160abec021a231c03 = MAKE_CODEOBJECT(module_filename_obj, 588, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1110], NULL, 4, 0, 0);
    codeobj_6fbd5549adcae78dcad4b2fceb91c294 = MAKE_CODEOBJECT(module_filename_obj, 855, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1111], NULL, 3, 0, 0);
    codeobj_b51f6348dfbbeed9756692accaa73eee = MAKE_CODEOBJECT(module_filename_obj, 881, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1111], NULL, 3, 0, 0);
    codeobj_dbff55d02e8d408bb7d849f7b828beb3 = MAKE_CODEOBJECT(module_filename_obj, 439, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1112], NULL, 2, 0, 0);
    codeobj_77dd84102614fc0ca107217a4db53b73 = MAKE_CODEOBJECT(module_filename_obj, 878, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1112], NULL, 2, 0, 0);
    codeobj_9526b135c0873ed4bb9febc5403fb64d = MAKE_CODEOBJECT(module_filename_obj, 751, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1113], NULL, 2, 0, 0);
    codeobj_039b5265281ad57a712922f98f0812d9 = MAKE_CODEOBJECT(module_filename_obj, 759, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1114], NULL, 2, 0, 0);
    codeobj_0c0378777b73c34d05e89d65ad0024a8 = MAKE_CODEOBJECT(module_filename_obj, 399, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1115], NULL, 5, 0, 0);
    codeobj_7be122713bad7a97e7cbad601870a6fe = MAKE_CODEOBJECT(module_filename_obj, 757, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1115], NULL, 5, 0, 0);
    codeobj_f5df1d21ddf8e39ac1de2ec92b7a732d = MAKE_CODEOBJECT(module_filename_obj, 787, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1115], NULL, 5, 0, 0);
    codeobj_091c3edc2f88d28baa92628bdf1826ab = MAKE_CODEOBJECT(module_filename_obj, 789, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1115], NULL, 5, 0, 0);
    codeobj_e8714a4ce7540a6e343c851d3200980c = MAKE_CODEOBJECT(module_filename_obj, 903, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1115], NULL, 5, 0, 0);
    codeobj_5725a606917de9528607d361a4ee1397 = MAKE_CODEOBJECT(module_filename_obj, 389, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1116], NULL, 3, 0, 0);
    codeobj_7b4cce7a471ca55569284493bdb8d656 = MAKE_CODEOBJECT(module_filename_obj, 854, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1117], NULL, 4, 0, 0);
    codeobj_394434abe4388f0e2553cf544effa313 = MAKE_CODEOBJECT(module_filename_obj, 515, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1118], NULL, 4, 0, 0);
    codeobj_6940b4176a83c1d9fa637c0cf43f59e2 = MAKE_CODEOBJECT(module_filename_obj, 304, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1119], NULL, 2, 0, 0);
    codeobj_92ed8b352e35254f0f80f83309cd00a4 = MAKE_CODEOBJECT(module_filename_obj, 533, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1119], NULL, 2, 0, 0);
    codeobj_de532df743d4c03dc3d41168738d9763 = MAKE_CODEOBJECT(module_filename_obj, 445, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1120], NULL, 3, 0, 0);
    codeobj_bd77611a57d488d6c56b04d1b5c49dba = MAKE_CODEOBJECT(module_filename_obj, 758, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1120], NULL, 3, 0, 0);
    codeobj_7da9ef674f1f2dc5b8eab6d23e0e0287 = MAKE_CODEOBJECT(module_filename_obj, 449, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1121], NULL, 7, 0, 0);
    codeobj_275a18e23547aac0f83f823531dfba33 = MAKE_CODEOBJECT(module_filename_obj, 852, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1122], NULL, 3, 0, 0);
    codeobj_db7118ac13e131a2cadd81769740d3a8 = MAKE_CODEOBJECT(module_filename_obj, 752, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1123], NULL, 2, 0, 0);
    codeobj_35a8a6000774522f3b3731f2d7345fc8 = MAKE_CODEOBJECT(module_filename_obj, 306, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1124], NULL, 3, 0, 0);
    codeobj_43c677e2b954722d242194acbb400a27 = MAKE_CODEOBJECT(module_filename_obj, 461, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1125], NULL, 5, 0, 0);
    codeobj_089281af5425e2496b79c97b5a55a1d4 = MAKE_CODEOBJECT(module_filename_obj, 462, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1125], NULL, 5, 0, 0);
    codeobj_d3678db6fa46a0c989cf4da38ae23f60 = MAKE_CODEOBJECT(module_filename_obj, 463, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1125], NULL, 5, 0, 0);
    codeobj_b506ad863a22802b35b3747f2dba5fee = MAKE_CODEOBJECT(module_filename_obj, 653, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1126], NULL, 5, 0, 0);
    codeobj_4daceae0fd3cd57c3f1bc8fa728a3431 = MAKE_CODEOBJECT(module_filename_obj, 327, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1127], NULL, 2, 0, 0);
    codeobj_757cdda819ed5ac2ce010c3286d047a1 = MAKE_CODEOBJECT(module_filename_obj, 788, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1128], NULL, 6, 0, 0);
    codeobj_8e36e5d1e256a6c5bb5fa5feb41b87f5 = MAKE_CODEOBJECT(module_filename_obj, 801, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1129], NULL, 9, 0, 0);
    codeobj_49e2192e908c890d63fa4044a86d75ad = MAKE_CODEOBJECT(module_filename_obj, 803, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1129], NULL, 9, 0, 0);
    codeobj_fb2a85f922638a745586f424e7065204 = MAKE_CODEOBJECT(module_filename_obj, 465, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1130], NULL, 9, 0, 0);
    codeobj_9390a753c6277141b6a5006c15a149c0 = MAKE_CODEOBJECT(module_filename_obj, 466, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1131], NULL, 6, 0, 0);
    codeobj_8cf9e6fb448187310d81e577aecc3e3c = MAKE_CODEOBJECT(module_filename_obj, 536, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1131], NULL, 6, 0, 0);
    codeobj_88fc0f2ae009ccabc6944ffe5331e522 = MAKE_CODEOBJECT(module_filename_obj, 802, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1131], NULL, 6, 0, 0);
    codeobj_c42b5b313542a6b626cefecea6c6177f = MAKE_CODEOBJECT(module_filename_obj, 804, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1131], NULL, 6, 0, 0);
    codeobj_a2df74f714f923ca0c9cb06cd54fb0b5 = MAKE_CODEOBJECT(module_filename_obj, 773, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1132], NULL, 14, 0, 0);
    codeobj_96ddb8815cf4bb710cf30ee865186f25 = MAKE_CODEOBJECT(module_filename_obj, 776, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1132], NULL, 14, 0, 0);
    codeobj_3c59c11e27aaf96affbb2cc6fb48439f = MAKE_CODEOBJECT(module_filename_obj, 782, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1132], NULL, 14, 0, 0);
    codeobj_21b8e9598e709b0aee1f9ad7ac4754e0 = MAKE_CODEOBJECT(module_filename_obj, 784, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1132], NULL, 14, 0, 0);
    codeobj_7866eb0199194d07f7442c2f25c88337 = MAKE_CODEOBJECT(module_filename_obj, 869, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1133], NULL, 2, 0, 0);
    codeobj_b2f46e65a0af69f974e9a53ab89a0be6 = MAKE_CODEOBJECT(module_filename_obj, 760, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1134], NULL, 4, 0, 0);
    codeobj_7356e6fba53388ac762b8826b4072ec2 = MAKE_CODEOBJECT(module_filename_obj, 870, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1135], NULL, 4, 0, 0);
    codeobj_c11d1b982eee87e35a8c60b0b1858cc8 = MAKE_CODEOBJECT(module_filename_obj, 688, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1136], NULL, 6, 0, 0);
    codeobj_015f2933fabaefb40f8e6f44268235ad = MAKE_CODEOBJECT(module_filename_obj, 689, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1136], NULL, 6, 0, 0);
    codeobj_6cb9b39ffff3d0fb681bc5d8ac3a0585 = MAKE_CODEOBJECT(module_filename_obj, 690, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1136], NULL, 6, 0, 0);
    codeobj_ebeb8fc984071b1910e67484d5e9a92c = MAKE_CODEOBJECT(module_filename_obj, 483, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1137], NULL, 4, 0, 0);
    codeobj_d0a2f4f5e657233985c4a742359d6214 = MAKE_CODEOBJECT(module_filename_obj, 387, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1138], NULL, 2, 0, 0);
    codeobj_ed9089c3669b9fcbfe6a2d632c80c428 = MAKE_CODEOBJECT(module_filename_obj, 475, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1138], NULL, 2, 0, 0);
    codeobj_d1936b6a18422425889ccc56bfcddc66 = MAKE_CODEOBJECT(module_filename_obj, 900, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1138], NULL, 2, 0, 0);
    codeobj_fff1d3cc677986b42634e045306adbc8 = MAKE_CODEOBJECT(module_filename_obj, 876, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1139], NULL, 3, 0, 0);
    codeobj_3992139ed177013d28ac2cb0b9470fdf = MAKE_CODEOBJECT(module_filename_obj, 712, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1140], NULL, 2, 0, 0);
    codeobj_913bcdc1b89f5886a92e2a27b919df89 = MAKE_CODEOBJECT(module_filename_obj, 713, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1140], NULL, 2, 0, 0);
    codeobj_a6871a6e1a2c53302f56f24c9b999259 = MAKE_CODEOBJECT(module_filename_obj, 715, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1140], NULL, 2, 0, 0);
    codeobj_d5e3aa421711a2dba633e028baa2c2b2 = MAKE_CODEOBJECT(module_filename_obj, 716, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1140], NULL, 2, 0, 0);
    codeobj_7998909bd240ccad8a9cbe9c82425a6e = MAKE_CODEOBJECT(module_filename_obj, 717, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1140], NULL, 2, 0, 0);
    codeobj_eb1c245e48b941846b0b896bc0ec2742 = MAKE_CODEOBJECT(module_filename_obj, 796, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1140], NULL, 2, 0, 0);
    codeobj_95a7035c66c033fc3948b7d88d4ef685 = MAKE_CODEOBJECT(module_filename_obj, 819, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1140], NULL, 2, 0, 0);
    codeobj_934e05ded79a3d0b8d146d629a638b34 = MAKE_CODEOBJECT(module_filename_obj, 743, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1141], NULL, 5, 0, 0);
    codeobj_f713e4c3e6075f5d1c89a2bf4e4c6d25 = MAKE_CODEOBJECT(module_filename_obj, 517, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1142], NULL, 14, 0, 0);
    codeobj_4b87dea8bb2487680acfb86e0d218d25 = MAKE_CODEOBJECT(module_filename_obj, 879, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1143], NULL, 5, 0, 0);
    codeobj_c11a622ba0484bdfcf6a423004a1395a = MAKE_CODEOBJECT(module_filename_obj, 509, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1144], NULL, 5, 0, 0);
    codeobj_56d146bf25b7fa18f990b47f0ee2038d = MAKE_CODEOBJECT(module_filename_obj, 806, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1145], NULL, 3, 0, 0);
    codeobj_dab2b3f853aa4fa30df04b6078bc5b84 = MAKE_CODEOBJECT(module_filename_obj, 733, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1146], NULL, 5, 0, 0);
    codeobj_6ce3174de930bea221eced6e2e726dd1 = MAKE_CODEOBJECT(module_filename_obj, 640, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1147], NULL, 6, 0, 0);
    codeobj_d716b4f9d196fdc5294974789343c57b = MAKE_CODEOBJECT(module_filename_obj, 643, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1147], NULL, 6, 0, 0);
    codeobj_ed54930c97a0df1a522ef2f535df61e0 = MAKE_CODEOBJECT(module_filename_obj, 645, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1147], NULL, 6, 0, 0);
    codeobj_a30a11a6233846fbb368dd9f0fb13b57 = MAKE_CODEOBJECT(module_filename_obj, 648, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1147], NULL, 6, 0, 0);
    codeobj_7d5c1059aad8945ec264524e8c9122fa = MAKE_CODEOBJECT(module_filename_obj, 296, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1148], NULL, 6, 0, 0);
    codeobj_30520d877a78800de309434c65b4b753 = MAKE_CODEOBJECT(module_filename_obj, 611, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1149], NULL, 7, 0, 0);
    codeobj_9d59abfd62c703b2cd4348f789089995 = MAKE_CODEOBJECT(module_filename_obj, 613, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1149], NULL, 7, 0, 0);
    codeobj_35a765f50b569583621a6b1140ea33c3 = MAKE_CODEOBJECT(module_filename_obj, 556, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1150], NULL, 6, 0, 0);
    codeobj_7425705ecc93cd66642eac4b0156f7af = MAKE_CODEOBJECT(module_filename_obj, 557, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1150], NULL, 6, 0, 0);
    codeobj_9961eaaca2a502e0f5e2f659b19965f1 = MAKE_CODEOBJECT(module_filename_obj, 558, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1150], NULL, 6, 0, 0);
    codeobj_caedcfb81a0fed3d121d765915818434 = MAKE_CODEOBJECT(module_filename_obj, 778, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1150], NULL, 6, 0, 0);
    codeobj_ec940f940e125a56c033b0dcbe00a7cb = MAKE_CODEOBJECT(module_filename_obj, 780, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1150], NULL, 6, 0, 0);
    codeobj_e5afc1ad9cda13ba888e6f5e96fab8aa = MAKE_CODEOBJECT(module_filename_obj, 676, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1151], NULL, 7, 0, 0);
    codeobj_0d6c425a5f5d0eb42421874900957b98 = MAKE_CODEOBJECT(module_filename_obj, 680, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1151], NULL, 7, 0, 0);
    codeobj_5931536a62ae399c9e5fc3549619447a = MAKE_CODEOBJECT(module_filename_obj, 559, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1152], NULL, 7, 0, 0);
    codeobj_50b6b4daf896d5be4739a5d145e2f314 = MAKE_CODEOBJECT(module_filename_obj, 678, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1152], NULL, 7, 0, 0);
    codeobj_e9688202b23273a47d7fbfce7166accf = MAKE_CODEOBJECT(module_filename_obj, 682, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1152], NULL, 7, 0, 0);
    codeobj_7048327794ed05677dc3db834248708d = MAKE_CODEOBJECT(module_filename_obj, 684, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1152], NULL, 7, 0, 0);
    codeobj_92ef3f463c788f23a576893dbf6b909e = MAKE_CODEOBJECT(module_filename_obj, 686, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1152], NULL, 7, 0, 0);
    codeobj_8ecacd6c708a9404cb57f07285318e85 = MAKE_CODEOBJECT(module_filename_obj, 469, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1153], NULL, 2, 0, 0);
    codeobj_be86b0b4f821fe9d7a68a3790a84ce71 = MAKE_CODEOBJECT(module_filename_obj, 656, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1153], NULL, 2, 0, 0);
    codeobj_a0ae26c7c4ec302b47b5c582629bbdf5 = MAKE_CODEOBJECT(module_filename_obj, 724, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1153], NULL, 2, 0, 0);
    codeobj_75af841ea69fc76854984e678b0b8031 = MAKE_CODEOBJECT(module_filename_obj, 714, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1154], NULL, 5, 0, 0);
    codeobj_135b5aac5a454240e83ffe5bdb909fce = MAKE_CODEOBJECT(module_filename_obj, 810, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1154], NULL, 5, 0, 0);
    codeobj_f022cc6910c9b592d8dc7281b9bfdd98 = MAKE_CODEOBJECT(module_filename_obj, 545, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1155], NULL, 3, 0, 0);
    codeobj_b68b44b6917bd020e82e67c555514b55 = MAKE_CODEOBJECT(module_filename_obj, 544, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1156], NULL, 3, 0, 0);
    codeobj_0392c46a2ee0c29b638b907f9d54fcfe = MAKE_CODEOBJECT(module_filename_obj, 543, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1157], NULL, 3, 0, 0);
    codeobj_4de9d5ecec663a7049590e0f934cf873 = MAKE_CODEOBJECT(module_filename_obj, 270, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1158], NULL, 6, 0, 0);
    codeobj_0819dab7e34e03edbb94ce48792910d8 = MAKE_CODEOBJECT(module_filename_obj, 269, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1159], NULL, 6, 0, 0);
    codeobj_5743abae41ae01f99d7f294a1f645cfc = MAKE_CODEOBJECT(module_filename_obj, 813, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1159], NULL, 6, 0, 0);
    codeobj_267f88b7ea050a5ef525ee54749d6053 = MAKE_CODEOBJECT(module_filename_obj, 840, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1159], NULL, 6, 0, 0);
    codeobj_207bf4b4970fe9bb91f60e54ef73ea55 = MAKE_CODEOBJECT(module_filename_obj, 385, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1160], NULL, 2, 0, 0);
    codeobj_b8451e5709a1aa8626cb694891c2213e = MAKE_CODEOBJECT(module_filename_obj, 829, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1160], NULL, 2, 0, 0);
    codeobj_65063d2a6ef308a64cba3c04606d9254 = MAKE_CODEOBJECT(module_filename_obj, 830, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1160], NULL, 2, 0, 0);
    codeobj_48a0c7e17be9022e2172b77bf4cdfa17 = MAKE_CODEOBJECT(module_filename_obj, 317, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1161], NULL, 3, 0, 0);
    codeobj_88ceed81d89385e281d76e9b15a676d4 = MAKE_CODEOBJECT(module_filename_obj, 577, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1161], NULL, 3, 0, 0);
    codeobj_2bfbe594424ebac7f12bee8149bfb73c = MAKE_CODEOBJECT(module_filename_obj, 338, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1162], NULL, 3, 0, 0);
    codeobj_a0dc54c45fcc846ca04bd9c292ed73a2 = MAKE_CODEOBJECT(module_filename_obj, 302, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1163], NULL, 8, 0, 0);
    codeobj_d09bcbfd1cfab4b1d360d255d20b82b1 = MAKE_CODEOBJECT(module_filename_obj, 303, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1163], NULL, 8, 0, 0);
    codeobj_43c304f8d065327cf45ced8ec3b9e5e9 = MAKE_CODEOBJECT(module_filename_obj, 335, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1164], NULL, 4, 0, 0);
    codeobj_4da8401bd35984c23466be7ae610a67a = MAKE_CODEOBJECT(module_filename_obj, 336, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1164], NULL, 4, 0, 0);
    codeobj_8dca6036569c72b9f5d514aac0bfd41c = MAKE_CODEOBJECT(module_filename_obj, 337, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1165], NULL, 3, 0, 0);
    codeobj_492eff16660605d922dc693506811e59 = MAKE_CODEOBJECT(module_filename_obj, 657, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1166], NULL, 4, 0, 0);
    codeobj_f5b647f327f3b0fb92fb8ac242a9c936 = MAKE_CODEOBJECT(module_filename_obj, 767, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1167], NULL, 3, 0, 0);
    codeobj_7ef9b8317e9297f244713fbc98813a01 = MAKE_CODEOBJECT(module_filename_obj, 547, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1168], NULL, 2, 0, 0);
    codeobj_b2f3ddb6f4491168deaddb0651d6ac58 = MAKE_CODEOBJECT(module_filename_obj, 420, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1169], NULL, 4, 0, 0);
    codeobj_fb8c196bd77170d2afc4bb456f4aac04 = MAKE_CODEOBJECT(module_filename_obj, 421, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1169], NULL, 4, 0, 0);
    codeobj_6959040a96bc56f9695cc9025388110e = MAKE_CODEOBJECT(module_filename_obj, 422, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1169], NULL, 4, 0, 0);
    codeobj_7ee093a8f8de311dfd521a4b41a320de = MAKE_CODEOBJECT(module_filename_obj, 423, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1169], NULL, 4, 0, 0);
    codeobj_a07b3f4b2ed3f1d9f9e6b20454bc343b = MAKE_CODEOBJECT(module_filename_obj, 424, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1169], NULL, 4, 0, 0);
    codeobj_d9889fa5f466ba8401cd91caf28cc58c = MAKE_CODEOBJECT(module_filename_obj, 425, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1169], NULL, 4, 0, 0);
    codeobj_2b1f70a99dd0e1ac366fe3369c9a3a02 = MAKE_CODEOBJECT(module_filename_obj, 436, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1169], NULL, 4, 0, 0);
    codeobj_19ddd7ccf85d1dee8bf238ecff939a31 = MAKE_CODEOBJECT(module_filename_obj, 377, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1170], NULL, 6, 0, 0);
    codeobj_047ba541c18e97aeae041f81b866bf17 = MAKE_CODEOBJECT(module_filename_obj, 548, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1171], NULL, 3, 0, 0);
    codeobj_fc2db9d4ea2bb13741ef9ffe5a821f22 = MAKE_CODEOBJECT(module_filename_obj, 754, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1171], NULL, 3, 0, 0);
    codeobj_4990cde66c4c8f4d809694e8a4eb030c = MAKE_CODEOBJECT(module_filename_obj, 505, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1172], NULL, 10, 0, 0);
    codeobj_ece0f7949a98bad71ccdddb3c4cc207a = MAKE_CODEOBJECT(module_filename_obj, 844, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1173], NULL, 10, 0, 0);
    codeobj_66dff01e9a6d2ebf860304a66e264e5f = MAKE_CODEOBJECT(module_filename_obj, 532, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1174], NULL, 4, 0, 0);
    codeobj_c725a154746ff10192c05ef4dd1774d4 = MAKE_CODEOBJECT(module_filename_obj, 534, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1174], NULL, 4, 0, 0);
    codeobj_9969c43c09bbcede7412f8523f86d3db = MAKE_CODEOBJECT(module_filename_obj, 589, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1175], NULL, 5, 0, 0);
    codeobj_419684b5882985a25304089cb3d66260 = MAKE_CODEOBJECT(module_filename_obj, 667, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1176], NULL, 3, 0, 0);
    codeobj_ea8b8556cb410ced311557529d8d570d = MAKE_CODEOBJECT(module_filename_obj, 672, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1177], NULL, 5, 0, 0);
    codeobj_105bba3e6b74f13048ebdf4a3372d7d9 = MAKE_CODEOBJECT(module_filename_obj, 673, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1177], NULL, 5, 0, 0);
    codeobj_b2c915c276c7bab1c5af37f44766629e = MAKE_CODEOBJECT(module_filename_obj, 591, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1178], NULL, 5, 0, 0);
    codeobj_e1d5765d62a6bbed8da789a588d10c48 = MAKE_CODEOBJECT(module_filename_obj, 666, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1178], NULL, 5, 0, 0);
    codeobj_97c1d77c65714df61e4273ee44d29df2 = MAKE_CODEOBJECT(module_filename_obj, 510, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1179], NULL, 6, 0, 0);
    codeobj_6c9c587629c9b266088ba0d533e41227 = MAKE_CODEOBJECT(module_filename_obj, 654, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1180], NULL, 5, 0, 0);
    codeobj_911caabdc1d3d60cc1bbe0e84eeba228 = MAKE_CODEOBJECT(module_filename_obj, 464, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1181], NULL, 6, 0, 0);
    codeobj_75901d348710cd83bd43eaa66a6a2485 = MAKE_CODEOBJECT(module_filename_obj, 584, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1182], NULL, 4, 0, 0);
    codeobj_91a95c9af941da45a9fc1aa28527283a = MAKE_CODEOBJECT(module_filename_obj, 333, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1183], NULL, 5, 0, 0);
    codeobj_fdbccf0dca7dd3d1021cbe260d48fc7d = MAKE_CODEOBJECT(module_filename_obj, 376, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1184], NULL, 2, 0, 0);
    codeobj_ce17ee6c6fb41334def2115245226780 = MAKE_CODEOBJECT(module_filename_obj, 378, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1185], NULL, 4, 0, 0);
    codeobj_ee8234270fcb3e8df9dbc4703e4f9902 = MAKE_CODEOBJECT(module_filename_obj, 345, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1186], NULL, 2, 0, 0);
    codeobj_cb75dd4a920f9ed7594fc7b7a200b6da = MAKE_CODEOBJECT(module_filename_obj, 736, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1187], NULL, 6, 0, 0);
    codeobj_5ceaeffb584fefeace4e5b355d63d14c = MAKE_CODEOBJECT(module_filename_obj, 737, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1187], NULL, 6, 0, 0);
    codeobj_403fba215e1be6cada8e3a594959041d = MAKE_CODEOBJECT(module_filename_obj, 738, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1187], NULL, 6, 0, 0);
    codeobj_4479328ca0f341c323060fd957269caf = MAKE_CODEOBJECT(module_filename_obj, 401, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1188], NULL, 2, 0, 0);
    codeobj_caae7c841607feef1f9e6ee0b90f969d = MAKE_CODEOBJECT(module_filename_obj, 444, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1188], NULL, 2, 0, 0);
    codeobj_9be1a2b91b77491923931ff78f51854e = MAKE_CODEOBJECT(module_filename_obj, 501, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1188], NULL, 2, 0, 0);
    codeobj_49615681273b3d2f3efefbfbcacf8cd5 = MAKE_CODEOBJECT(module_filename_obj, 508, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1188], NULL, 2, 0, 0);
    codeobj_bceb8a557171a6e4ef02ce411d32d7ec = MAKE_CODEOBJECT(module_filename_obj, 889, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1188], NULL, 2, 0, 0);
    codeobj_7782c6441866344e4165bd7ddedefe17 = MAKE_CODEOBJECT(module_filename_obj, 812, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1189], NULL, 3, 0, 0);
    codeobj_47a8b3e55610cac64a887d5a1173d7fc = MAKE_CODEOBJECT(module_filename_obj, 361, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1190], NULL, 4, 0, 0);
    codeobj_716292767b903a8296167b4ae84d7021 = MAKE_CODEOBJECT(module_filename_obj, 265, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_ce683cdbaf2de138a67b5fdefb42e521 = MAKE_CODEOBJECT(module_filename_obj, 290, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_42a1e3b8b6287a9a90dde009079d0c87 = MAKE_CODEOBJECT(module_filename_obj, 312, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_29f82f0f326391364ccc8ddd1e20698c = MAKE_CODEOBJECT(module_filename_obj, 314, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_ef1397d459020de6931074dbdb5e0d87 = MAKE_CODEOBJECT(module_filename_obj, 315, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_f36d7a238d5b672ebd109bf1278c738c = MAKE_CODEOBJECT(module_filename_obj, 343, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_bb2c8c9fadd63b1a4ce6cd3fd14cc65c = MAKE_CODEOBJECT(module_filename_obj, 383, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_ef3d4dbaad1d0fab2b5ea2537a5937ef = MAKE_CODEOBJECT(module_filename_obj, 400, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_b6ae86e102d5d39379e37307d01fe6b7 = MAKE_CODEOBJECT(module_filename_obj, 446, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_3ebea4094d228bdf91ba1233ffaa72b6 = MAKE_CODEOBJECT(module_filename_obj, 452, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_5239cc8a975d587e172c73f1728ddb8d = MAKE_CODEOBJECT(module_filename_obj, 453, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_d128997ac371bbf8c38ac42c8bf5fde8 = MAKE_CODEOBJECT(module_filename_obj, 454, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_f0e7ed39f87a8008f5700b9b6ae6498a = MAKE_CODEOBJECT(module_filename_obj, 457, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_d5a7daa8d114bb71ee1452af953dc7c5 = MAKE_CODEOBJECT(module_filename_obj, 467, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_7bb7929a2ff6e5695b7ecb6c0d79653b = MAKE_CODEOBJECT(module_filename_obj, 468, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_c7e57baae065ffbb9bd3fed8e60117be = MAKE_CODEOBJECT(module_filename_obj, 477, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_fa1144e4a4cea04a80e187e761dcf994 = MAKE_CODEOBJECT(module_filename_obj, 478, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_004ac222539267a5a5b8c98f585994c9 = MAKE_CODEOBJECT(module_filename_obj, 479, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_dcdf22896010aae78caa8b5330e3545a = MAKE_CODEOBJECT(module_filename_obj, 511, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_c15799d9c70c75374826b610a49d086d = MAKE_CODEOBJECT(module_filename_obj, 512, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_538b252c1ee4bd11d010f6bfa07bcf5e = MAKE_CODEOBJECT(module_filename_obj, 513, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_640bbf7a5633386b24cfe485e733f96e = MAKE_CODEOBJECT(module_filename_obj, 514, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_57b6bf21d907008ffecdb3c605b6c86d = MAKE_CODEOBJECT(module_filename_obj, 524, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_534c08731440e03b3fbbbbd0e56468db = MAKE_CODEOBJECT(module_filename_obj, 525, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_6e19d0b0361ba16de8adbb71f462b65e = MAKE_CODEOBJECT(module_filename_obj, 528, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_68aa4e1f033f852aa1be53efa9cb0c1d = MAKE_CODEOBJECT(module_filename_obj, 530, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_2e0815109111092eaee9219bb3e29c44 = MAKE_CODEOBJECT(module_filename_obj, 531, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_cbbfb275684a4d801a2e486028aa560c = MAKE_CODEOBJECT(module_filename_obj, 538, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_e89a914ce94f89bf6ee0a028768882fd = MAKE_CODEOBJECT(module_filename_obj, 539, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_03b5692592251a258d193cf42a9f3d07 = MAKE_CODEOBJECT(module_filename_obj, 546, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_c5d0961ae719cc71346189506826b938 = MAKE_CODEOBJECT(module_filename_obj, 554, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_0dc0e4d07490a41fb31654c9de80395c = MAKE_CODEOBJECT(module_filename_obj, 555, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_08a2cb300cb53ba86f201bacb5497a6d = MAKE_CODEOBJECT(module_filename_obj, 566, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_09ca7fd1eeddf11cc9c5e80fc73493fa = MAKE_CODEOBJECT(module_filename_obj, 567, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_93718ec85146bccb991e775a65d56ce5 = MAKE_CODEOBJECT(module_filename_obj, 582, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_aa3d74651f623430808b6764ed9cfe54 = MAKE_CODEOBJECT(module_filename_obj, 583, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_daa00c4f7a55cd6beb342fb86581f5ea = MAKE_CODEOBJECT(module_filename_obj, 596, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_ae595f8c12674e6c48ea94edaeb93219 = MAKE_CODEOBJECT(module_filename_obj, 597, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_df95a7e4895f6fa556eba21da9f897f1 = MAKE_CODEOBJECT(module_filename_obj, 600, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_d9b9da619da6673fe39675c26f86594a = MAKE_CODEOBJECT(module_filename_obj, 792, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_b94cc4b18209a972f4dc8868c7c142a1 = MAKE_CODEOBJECT(module_filename_obj, 797, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_85e049a385cf6befd2a3dd18bb942e13 = MAKE_CODEOBJECT(module_filename_obj, 833, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_28a02dffcd25c131006ca4e06bb94f89 = MAKE_CODEOBJECT(module_filename_obj, 846, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_2b8c8696daefc8805988d0da2857e91c = MAKE_CODEOBJECT(module_filename_obj, 847, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_f5f13b859fd2ee6622b96445c9556d08 = MAKE_CODEOBJECT(module_filename_obj, 867, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1191], NULL, 3, 0, 0);
    codeobj_9a27727bb923b412dcaf4ee658e94d9e = MAKE_CODEOBJECT(module_filename_obj, 380, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1192], NULL, 3, 0, 0);
    codeobj_a9415034c86ef3814f538cc41b464fea = MAKE_CODEOBJECT(module_filename_obj, 381, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1193], NULL, 4, 0, 0);
    codeobj_b67624ded915f5d05c31ccc42d6d25e1 = MAKE_CODEOBJECT(module_filename_obj, 382, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1193], NULL, 4, 0, 0);
    codeobj_184a2782933341af77a8d57338fc87a1 = MAKE_CODEOBJECT(module_filename_obj, 503, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1194], NULL, 5, 0, 0);
    codeobj_99a2f3c9140d5ef026bac3942daba5aa = MAKE_CODEOBJECT(module_filename_obj, 274, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1195], NULL, 5, 0, 0);
    codeobj_18aa2bed3b87c73f81192f6cd10b065d = MAKE_CODEOBJECT(module_filename_obj, 257, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_7eccf1ea19034e827b77b437e7ffd305 = MAKE_CODEOBJECT(module_filename_obj, 258, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_3ab6e1e7ff6cd5c63b5c9c2aa90dcba3 = MAKE_CODEOBJECT(module_filename_obj, 261, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_8b32de9b527d7790246971657024d8d3 = MAKE_CODEOBJECT(module_filename_obj, 262, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_947b9e3ac2e65e7b1862c83ef9de9e01 = MAKE_CODEOBJECT(module_filename_obj, 263, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_1eb0004babc4bbda679ee8f99815bfd3 = MAKE_CODEOBJECT(module_filename_obj, 264, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_1573b5a984f0ce603d01a7cbf6c95988 = MAKE_CODEOBJECT(module_filename_obj, 278, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_1b091a7c5d6be595b8b930e08ddd81a3 = MAKE_CODEOBJECT(module_filename_obj, 283, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_47dad59927ae2dd6391a3be17728371d = MAKE_CODEOBJECT(module_filename_obj, 285, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_b4c511956b95d153925a77792c9529dc = MAKE_CODEOBJECT(module_filename_obj, 286, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_28770312ef3371ffa7a6f34789007dc5 = MAKE_CODEOBJECT(module_filename_obj, 287, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_3758e92bb394c6d2db5c57808746d8c0 = MAKE_CODEOBJECT(module_filename_obj, 288, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_325a94d2bac807d6eab4763bd33aa964 = MAKE_CODEOBJECT(module_filename_obj, 289, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_3128194a7d217473c0c34e84f918828a = MAKE_CODEOBJECT(module_filename_obj, 291, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_3ec7f4a6d1ce72308783aa898cd0fcba = MAKE_CODEOBJECT(module_filename_obj, 292, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_d350070fd3b14826b127d45a88dcbb1b = MAKE_CODEOBJECT(module_filename_obj, 313, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_ef03dcb78a858bb55482715920087f95 = MAKE_CODEOBJECT(module_filename_obj, 324, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_e3a14ab9beee1c7c597e9d8b97e57803 = MAKE_CODEOBJECT(module_filename_obj, 329, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_465a2756349966912eee7527c5e0567a = MAKE_CODEOBJECT(module_filename_obj, 346, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_eda42bf74430799fd6b09c6c89a46e3c = MAKE_CODEOBJECT(module_filename_obj, 356, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_6b24c16c22c91bae759c0880b4d48ccc = MAKE_CODEOBJECT(module_filename_obj, 358, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_df2ebb7a6d74120aa1eb5ed010155688 = MAKE_CODEOBJECT(module_filename_obj, 369, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_cddcaedf1e77551465322634fe58726f = MAKE_CODEOBJECT(module_filename_obj, 379, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_fda8a10e2d867eed91cca663273223a5 = MAKE_CODEOBJECT(module_filename_obj, 390, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_153f0a5ce3d8144d9a719bbae36498b3 = MAKE_CODEOBJECT(module_filename_obj, 391, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_60784da2011e39b547d44efed65cd1e0 = MAKE_CODEOBJECT(module_filename_obj, 402, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_df9b95b5283b43df8b32b2e5533651f3 = MAKE_CODEOBJECT(module_filename_obj, 403, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_8034a89fe0b7148ca5dd2c02e7c43174 = MAKE_CODEOBJECT(module_filename_obj, 404, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_d1b65482262a0612a10b90eaa8c63863 = MAKE_CODEOBJECT(module_filename_obj, 405, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_b3a95c48a95604147f501a5e1bae01c7 = MAKE_CODEOBJECT(module_filename_obj, 406, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_1b7d3ef7a10bf4daaec1a9f38c967397 = MAKE_CODEOBJECT(module_filename_obj, 407, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_88014088a865b5b3d8ccb75f8b3b4bd8 = MAKE_CODEOBJECT(module_filename_obj, 437, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_58a61b888b720a8b4aa0d167cdfe4ba7 = MAKE_CODEOBJECT(module_filename_obj, 443, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_88a434033bc1819617af944fd43221ec = MAKE_CODEOBJECT(module_filename_obj, 447, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_ca7f5e8e75fc52fc00cf987f16dc68ca = MAKE_CODEOBJECT(module_filename_obj, 448, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_7a1be44988387e2ed8c8ba6f57154393 = MAKE_CODEOBJECT(module_filename_obj, 455, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_ba83dfb20e240cf85b24c48c039a4cbc = MAKE_CODEOBJECT(module_filename_obj, 456, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_9fd5b6e9fc1f9531b50008440dac46ff = MAKE_CODEOBJECT(module_filename_obj, 480, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_27a378dbc9145be3dcf7c610710a33cc = MAKE_CODEOBJECT(module_filename_obj, 489, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_12e190367c8b6f27df7ac1f957838d67 = MAKE_CODEOBJECT(module_filename_obj, 490, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_57b447c6cfb2ed7b4d40d192dd7f6c3c = MAKE_CODEOBJECT(module_filename_obj, 494, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_db68008fd3848f116b60f95c0a31e897 = MAKE_CODEOBJECT(module_filename_obj, 495, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_38c37c891a973d6cdf5ffd4f035dcd9a = MAKE_CODEOBJECT(module_filename_obj, 516, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_79f8a99354682a62830c65be1362f363 = MAKE_CODEOBJECT(module_filename_obj, 519, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_1358de6509ac5dace0db6cb3abecb644 = MAKE_CODEOBJECT(module_filename_obj, 521, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_45dedc6d4e9c8b9f4f1f75c6b6301e38 = MAKE_CODEOBJECT(module_filename_obj, 522, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_e74e393d662c7e19eaab9c8afe6bfa39 = MAKE_CODEOBJECT(module_filename_obj, 523, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_2f9941c07e060233d65e197a9dec2c91 = MAKE_CODEOBJECT(module_filename_obj, 529, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_c21e6268f9d53429e789e8b545b43323 = MAKE_CODEOBJECT(module_filename_obj, 553, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_69d6e954c709de78083bdff34aaf2a5d = MAKE_CODEOBJECT(module_filename_obj, 565, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_ce551165bf4720e28f888c3643e71da4 = MAKE_CODEOBJECT(module_filename_obj, 598, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_a13ed037050aee545a18c73b495018dd = MAKE_CODEOBJECT(module_filename_obj, 599, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_b5c8ac55f31c9ed42e6b8968df60a72b = MAKE_CODEOBJECT(module_filename_obj, 755, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_4cb2f46ae6b39d870d336fa9414b7c2c = MAKE_CODEOBJECT(module_filename_obj, 786, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_11be5a9b0f0ff9afb6355035bbd86d01 = MAKE_CODEOBJECT(module_filename_obj, 791, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_7de916c913eda9d261875ff98cb8496e = MAKE_CODEOBJECT(module_filename_obj, 795, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_37d0a4114cc1dcfdbdbb7b0b4b0ad6cd = MAKE_CODEOBJECT(module_filename_obj, 807, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_eba05ca0485db4d8c66ff68463505ac6 = MAKE_CODEOBJECT(module_filename_obj, 811, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_e2c82381507ef1204be505cda1acc5b0 = MAKE_CODEOBJECT(module_filename_obj, 820, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_44798b7dfe042838663a5b12e2f6bf27 = MAKE_CODEOBJECT(module_filename_obj, 821, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_6a9ac7e5d81c628a4339348ce189da08 = MAKE_CODEOBJECT(module_filename_obj, 822, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_d58dd01f1969168e51a71aea03ee8b27 = MAKE_CODEOBJECT(module_filename_obj, 823, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_3698f8981d4de5f415fde27a218e38f2 = MAKE_CODEOBJECT(module_filename_obj, 824, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_724336cddb4cf636cb87309f68e1324d = MAKE_CODEOBJECT(module_filename_obj, 825, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_fa63cd0813c56e78a3a00bca56366486 = MAKE_CODEOBJECT(module_filename_obj, 826, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_ca94db2dacbf98c23fff8c77542a7f67 = MAKE_CODEOBJECT(module_filename_obj, 837, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_d8ca62146a408f595fe18c0bd8602c11 = MAKE_CODEOBJECT(module_filename_obj, 838, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_0da4cdf33236de410794e8bf89fd4b73 = MAKE_CODEOBJECT(module_filename_obj, 853, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_268b7c8e14b394f60bf3da706570ea1e = MAKE_CODEOBJECT(module_filename_obj, 871, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_97891f1081890478238e058551bcca16 = MAKE_CODEOBJECT(module_filename_obj, 872, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_c281df153b9eef1fa73b8d62af4d7c74 = MAKE_CODEOBJECT(module_filename_obj, 890, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1196], NULL, 2, 0, 0);
    codeobj_40b04b9f841b34f3203c1b2c76bcc522 = MAKE_CODEOBJECT(module_filename_obj, 259, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1197], NULL, 2, 0, 0);
    codeobj_78133a70371f2ea6e9fee4dbc7da11f3 = MAKE_CODEOBJECT(module_filename_obj, 601, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1197], NULL, 2, 0, 0);
    codeobj_867d7a9403b4a36258cab6ee35fa6660 = MAKE_CODEOBJECT(module_filename_obj, 602, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1197], NULL, 2, 0, 0);
    codeobj_ec3de194f702361a9c161ada714ca3ab = MAKE_CODEOBJECT(module_filename_obj, 639, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1198], NULL, 6, 0, 0);
    codeobj_ce45e4d62e343addeff2f4ed2725eeed = MAKE_CODEOBJECT(module_filename_obj, 603, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1199], NULL, 3, 0, 0);
    codeobj_5ab0a02771904f856e100fdffdb485af = MAKE_CODEOBJECT(module_filename_obj, 604, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1199], NULL, 3, 0, 0);
    codeobj_d4beabe9b103084c2c3c1d8ef23475c7 = MAKE_CODEOBJECT(module_filename_obj, 605, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1199], NULL, 3, 0, 0);
    codeobj_53151ac996a3dfb557c13732aaa679af = MAKE_CODEOBJECT(module_filename_obj, 606, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1199], NULL, 3, 0, 0);
    codeobj_957a72d891b459369be02a68dd1c4808 = MAKE_CODEOBJECT(module_filename_obj, 607, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1199], NULL, 3, 0, 0);
    codeobj_4a669e1d327be6e579110e86cbc1f9af = MAKE_CODEOBJECT(module_filename_obj, 608, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1199], NULL, 3, 0, 0);
    codeobj_5ccf6114025d5d4590a61c81081129c6 = MAKE_CODEOBJECT(module_filename_obj, 586, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1200], NULL, 2, 0, 0);
    codeobj_7b5d97caf456021d6b8481ea17c89349 = MAKE_CODEOBJECT(module_filename_obj, 593, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1200], NULL, 2, 0, 0);
    codeobj_8a7ee6585868ca50e2114a9a86988dbd = MAKE_CODEOBJECT(module_filename_obj, 594, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1200], NULL, 2, 0, 0);
    codeobj_94349176af01fe74dfc97a36048368b8 = MAKE_CODEOBJECT(module_filename_obj, 747, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1200], NULL, 2, 0, 0);
    codeobj_56b165b15a71faca856d8e3fc8529a6c = MAKE_CODEOBJECT(module_filename_obj, 705, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1201], NULL, 5, 0, 0);
    codeobj_0d05f362a21cc26461ea0dd004036f12 = MAKE_CODEOBJECT(module_filename_obj, 595, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1202], NULL, 5, 0, 0);
    codeobj_d27a9cbea385c54ea14d9ca48006bffe = MAKE_CODEOBJECT(module_filename_obj, 735, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1203], NULL, 6, 0, 0);
    codeobj_82c21351b4dc8934a6909353ef6d29fa = MAKE_CODEOBJECT(module_filename_obj, 740, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1203], NULL, 6, 0, 0);
    codeobj_9ae21e3f2dd4eede222c2d6713f44f5a = MAKE_CODEOBJECT(module_filename_obj, 798, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1204], NULL, 5, 0, 0);
    codeobj_55b854c24cbd63a08fcdcc73eb3b0304 = MAKE_CODEOBJECT(module_filename_obj, 418, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1205], NULL, 3, 0, 0);
    codeobj_a0aa0a9c3412002aff4b12ea95de651b = MAKE_CODEOBJECT(module_filename_obj, 419, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1205], NULL, 3, 0, 0);
    codeobj_e6b2c140edef90ef38b8cbf83aaa48f3 = MAKE_CODEOBJECT(module_filename_obj, 275, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1206], NULL, 4, 0, 0);
    codeobj_43f882f911f1fdc6257937f2709bffe0 = MAKE_CODEOBJECT(module_filename_obj, 384, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1206], NULL, 4, 0, 0);
    codeobj_e6c5424638a72a51a134e6981f4abcca = MAKE_CODEOBJECT(module_filename_obj, 610, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1207], NULL, 4, 0, 0);
    codeobj_d9930f6e633506b969ba611cdf1479d2 = MAKE_CODEOBJECT(module_filename_obj, 629, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1207], NULL, 4, 0, 0);
    codeobj_579754208aaa7c15a36c75102a11aa0c = MAKE_CODEOBJECT(module_filename_obj, 630, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1207], NULL, 4, 0, 0);
    codeobj_35f7f1d018fa2dbb6cbe9a5c0b1300fb = MAKE_CODEOBJECT(module_filename_obj, 631, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1207], NULL, 4, 0, 0);
    codeobj_33ebeb93e8a54dbd98a47855b44bd399 = MAKE_CODEOBJECT(module_filename_obj, 638, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1207], NULL, 4, 0, 0);
    codeobj_3bf6be688ad9b71b4846e4a9bd532493 = MAKE_CODEOBJECT(module_filename_obj, 410, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1208], NULL, 3, 0, 0);
    codeobj_951a4ade5a8a01727ae0a9da3adc2623 = MAKE_CODEOBJECT(module_filename_obj, 411, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1208], NULL, 3, 0, 0);
    codeobj_26a32058e04ccddcc9d6e45f075d588d = MAKE_CODEOBJECT(module_filename_obj, 707, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1209], NULL, 4, 0, 0);
    codeobj_438f315a416aa26d9a52c8442e36807d = MAKE_CODEOBJECT(module_filename_obj, 347, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1210], NULL, 3, 0, 0);
    codeobj_757b1082df04a403c0a459cef6cf9da9 = MAKE_CODEOBJECT(module_filename_obj, 746, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1211], NULL, 4, 0, 0);
    codeobj_0686c6936da42e5c9e3830de2765f320 = MAKE_CODEOBJECT(module_filename_obj, 768, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1212], NULL, 5, 0, 0);
    codeobj_ee1dc6734df143ad01be28c17fbc76dc = MAKE_CODEOBJECT(module_filename_obj, 769, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1212], NULL, 5, 0, 0);
    codeobj_d4e09ddc82d94690a2e82f2b1b98f7e7 = MAKE_CODEOBJECT(module_filename_obj, 851, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1213], NULL, 4, 0, 0);
    codeobj_e22700050447bd1e0f329e8b48907a4e = MAKE_CODEOBJECT(module_filename_obj, 341, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1214], NULL, 3, 0, 0);
    codeobj_069952b989110b445af0387d1bc12a3e = MAKE_CODEOBJECT(module_filename_obj, 748, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1215], NULL, 2, 0, 0);
    codeobj_1935982f7f2e7edafd8854ffca92c6ce = MAKE_CODEOBJECT(module_filename_obj, 749, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1216], NULL, 3, 0, 0);
    codeobj_092ef49a35e65ed64056b7c044ef2ef7 = MAKE_CODEOBJECT(module_filename_obj, 893, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1217], NULL, 4, 0, 0);
    codeobj_8de0beff63021828d98d8050200bc6d8 = MAKE_CODEOBJECT(module_filename_obj, 305, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1218], NULL, 4, 0, 0);
    codeobj_bb38ae4c913c9c6ec8e62282ec4d473d = MAKE_CODEOBJECT(module_filename_obj, 615, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1219], NULL, 8, 0, 0);
    codeobj_e3927df365719d87fb24263593ffbbf1 = MAKE_CODEOBJECT(module_filename_obj, 660, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1220], NULL, 8, 0, 0);
    codeobj_ef7dcfb54a473c258c8f12cc4fe59917 = MAKE_CODEOBJECT(module_filename_obj, 491, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1221], NULL, 9, 0, 0);
    codeobj_50182f3bffbda404c2a830019baebd4e = MAKE_CODEOBJECT(module_filename_obj, 426, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1222], NULL, 4, 0, 0);
    codeobj_1623a43da474bdf0f22c8765c99e3a4e = MAKE_CODEOBJECT(module_filename_obj, 427, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1222], NULL, 4, 0, 0);
    codeobj_c3d96b030b6fc90e6efb95680c7f7324 = MAKE_CODEOBJECT(module_filename_obj, 428, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1222], NULL, 4, 0, 0);
    codeobj_a5b9f9edb882a26f8fc6ff962747aeb2 = MAKE_CODEOBJECT(module_filename_obj, 429, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1222], NULL, 4, 0, 0);
    codeobj_2838850478099bc5a2b92ea8894fad5c = MAKE_CODEOBJECT(module_filename_obj, 430, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1222], NULL, 4, 0, 0);
    codeobj_dee84dd429cee958e3392b429d6e10d1 = MAKE_CODEOBJECT(module_filename_obj, 431, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1222], NULL, 4, 0, 0);
    codeobj_a62328bc960ae7d17d18e863953cbc03 = MAKE_CODEOBJECT(module_filename_obj, 432, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1222], NULL, 4, 0, 0);
    codeobj_369fee2725204340697986f5db225b90 = MAKE_CODEOBJECT(module_filename_obj, 433, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1222], NULL, 4, 0, 0);
    codeobj_846c413d32166b7d9cddd7eba52302e9 = MAKE_CODEOBJECT(module_filename_obj, 408, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1223], NULL, 6, 0, 0);
    codeobj_ef1fdf9fe45f9b292cf8f7347adab7b0 = MAKE_CODEOBJECT(module_filename_obj, 771, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1224], NULL, 4, 0, 0);
    codeobj_0098591fcaa03562bc14b8e795c9382a = MAKE_CODEOBJECT(module_filename_obj, 409, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1225], NULL, 5, 0, 0);
    codeobj_5aec9d865aeb577325622ca57b6d1ead = MAKE_CODEOBJECT(module_filename_obj, 770, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1226], NULL, 5, 0, 0);
    codeobj_b38c2f41511fe86579a792e89d90a30d = MAKE_CODEOBJECT(module_filename_obj, 800, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1227], NULL, 2, 0, 0);
    codeobj_7c620f04362547a6d05f51da8135c643 = MAKE_CODEOBJECT(module_filename_obj, 805, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1228], NULL, 3, 0, 0);
    codeobj_3fea8db730d78923acb09e6373cd046b = MAKE_CODEOBJECT(module_filename_obj, 669, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1229], NULL, 5, 0, 0);
    codeobj_663ec780e62890150bd2c77ef4253d81 = MAKE_CODEOBJECT(module_filename_obj, 662, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1230], NULL, 6, 0, 0);
    codeobj_8b31a2b7f77e39180cd9d431e18a8372 = MAKE_CODEOBJECT(module_filename_obj, 850, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1231], NULL, 4, 0, 0);
    codeobj_63d8839719c5a9facef3e01c988bf9f7 = MAKE_CODEOBJECT(module_filename_obj, 766, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1232], NULL, 3, 0, 0);
    codeobj_0f8f81ca55e8e1da5ed9cc6e2c5c4c3b = MAKE_CODEOBJECT(module_filename_obj, 892, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1233], NULL, 5, 0, 0);
    codeobj_d48923f5002d27ad3da630c5654364d0 = MAKE_CODEOBJECT(module_filename_obj, 579, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1234], NULL, 3, 0, 0);
    codeobj_565f1885c2ffb854444ea9f74f6b8956 = MAKE_CODEOBJECT(module_filename_obj, 580, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1234], NULL, 3, 0, 0);
    codeobj_3e40584376e7f60db271b0c3d156792f = MAKE_CODEOBJECT(module_filename_obj, 460, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1235], NULL, 4, 0, 0);
    codeobj_860612f3126ad49a39ca8f81c0857218 = MAKE_CODEOBJECT(module_filename_obj, 438, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1236], NULL, 3, 0, 0);
    codeobj_8554aaa1872522d93fc64c498f6928c8 = MAKE_CODEOBJECT(module_filename_obj, 753, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1237], NULL, 6, 0, 0);
    codeobj_22d63acaadcd9c5c4979a368c514d1d2 = MAKE_CODEOBJECT(module_filename_obj, 709, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1238], NULL, 8, 0, 0);
    codeobj_c089b03676f4ea5846854cbc3742dac2 = MAKE_CODEOBJECT(module_filename_obj, 471, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1239], NULL, 6, 0, 0);
    codeobj_fa1529bc8deeac510c9e61be87ca6aac = MAKE_CODEOBJECT(module_filename_obj, 658, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1239], NULL, 6, 0, 0);
    codeobj_cbae45b5325d2cff917d3ed35a3b3317 = MAKE_CODEOBJECT(module_filename_obj, 697, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1240], NULL, 8, 0, 0);
    codeobj_101fd9de83e830389def230eb29d9748 = MAKE_CODEOBJECT(module_filename_obj, 719, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1241], NULL, 4, 0, 0);
    codeobj_5e972c3f26641aab2b72670051502ec0 = MAKE_CODEOBJECT(module_filename_obj, 665, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1242], NULL, 5, 0, 0);
    codeobj_febe1e83734af1268446672bca1191b7 = MAKE_CODEOBJECT(module_filename_obj, 691, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1242], NULL, 5, 0, 0);
    codeobj_8486ded99a7036e4ad5e8a9a53ba969a = MAKE_CODEOBJECT(module_filename_obj, 699, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1242], NULL, 5, 0, 0);
    codeobj_dca7d7ceec02a5c60f3aba206cd28c08 = MAKE_CODEOBJECT(module_filename_obj, 720, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1242], NULL, 5, 0, 0);
    codeobj_96333c87531cca458baded93ba67a994 = MAKE_CODEOBJECT(module_filename_obj, 718, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1243], NULL, 6, 0, 0);
    codeobj_6be0414880ba6f6b433c227f58491bde = MAKE_CODEOBJECT(module_filename_obj, 507, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1244], NULL, 6, 0, 0);
    codeobj_b19e3924e96957c6b96e2a00a7dea162 = MAKE_CODEOBJECT(module_filename_obj, 664, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1244], NULL, 6, 0, 0);
    codeobj_010aacf245659ff840a43fec530aecad = MAKE_CODEOBJECT(module_filename_obj, 650, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1245], NULL, 6, 0, 0);
    codeobj_3cbfb00d8f52e5f3ea9e5b2ab83591b9 = MAKE_CODEOBJECT(module_filename_obj, 625, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1246], NULL, 7, 0, 0);
    codeobj_91df195e5feae93a70c33f23586dad62 = MAKE_CODEOBJECT(module_filename_obj, 703, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1246], NULL, 7, 0, 0);
    codeobj_bcf5330f19ef0731084be5d9945f8c9d = MAKE_CODEOBJECT(module_filename_obj, 618, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1247], NULL, 6, 0, 0);
    codeobj_10420cfcf7ebe4cd0eab890d1e989634 = MAKE_CODEOBJECT(module_filename_obj, 701, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1247], NULL, 6, 0, 0);
    codeobj_e3135b30c2ffbb37d50c1e103e4ea327 = MAKE_CODEOBJECT(module_filename_obj, 308, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1248], NULL, 7, 0, 0);
    codeobj_f9ab347541fbb7e5eaa73462a987fc35 = MAKE_CODEOBJECT(module_filename_obj, 620, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1248], NULL, 7, 0, 0);
    codeobj_1b1baa996a9aa4db3501ac39f75605ef = MAKE_CODEOBJECT(module_filename_obj, 473, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1249], NULL, 2, 0, 0);
    codeobj_4f029fda04d4a776069f561c70540239 = MAKE_CODEOBJECT(module_filename_obj, 742, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1249], NULL, 2, 0, 0);
    codeobj_4fed1211764a0002f0964ff5df22ee52 = MAKE_CODEOBJECT(module_filename_obj, 267, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1250], NULL, 5, 0, 0);
    codeobj_02dbede001a1e37e15f84d532cf6190f = MAKE_CODEOBJECT(module_filename_obj, 268, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1250], NULL, 5, 0, 0);
    codeobj_42e4f9648e940e1996ea0380aa2dd19f = MAKE_CODEOBJECT(module_filename_obj, 727, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1251], NULL, 4, 0, 0);
    codeobj_55d7dbc327d092f771f630573bf598df = MAKE_CODEOBJECT(module_filename_obj, 877, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1251], NULL, 4, 0, 0);
    codeobj_7811755944a2a6d05e812dc52274bd3d = MAKE_CODEOBJECT(module_filename_obj, 550, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1252], NULL, 3, 0, 0);
    codeobj_1417d16419933e762e389fbee90b91f7 = MAKE_CODEOBJECT(module_filename_obj, 549, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1253], NULL, 3, 0, 0);
    codeobj_f713704a7ba127f931280e52dcd65b8b = MAKE_CODEOBJECT(module_filename_obj, 328, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1254], NULL, 3, 0, 0);
    codeobj_37f979ef9cd9279e87a48e30be4fabb7 = MAKE_CODEOBJECT(module_filename_obj, 331, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1254], NULL, 3, 0, 0);
    codeobj_d3f474efd33e0186ab9be5330a06226e = MAKE_CODEOBJECT(module_filename_obj, 750, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1255], NULL, 2, 0, 0);
    codeobj_679b827a638bfcb2f34fc1025ad1cce0 = MAKE_CODEOBJECT(module_filename_obj, 470, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1256], NULL, 3, 0, 0);
    codeobj_bcfb4d516614a69aa8dac813d636e504 = MAKE_CODEOBJECT(module_filename_obj, 585, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1257], NULL, 3, 0, 0);
    codeobj_3fa143d70c25849b2036970c219a875c = MAKE_CODEOBJECT(module_filename_obj, 271, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1258], NULL, 6, 0, 0);
    codeobj_329e72e79189363e9dc039ce83923479 = MAKE_CODEOBJECT(module_filename_obj, 458, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1259], NULL, 3, 0, 0);
    codeobj_bb0d153d8897a5b657176d08c8594a16 = MAKE_CODEOBJECT(module_filename_obj, 459, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1259], NULL, 3, 0, 0);
    codeobj_eaf14433425ec478a824daf963b03aa6 = MAKE_CODEOBJECT(module_filename_obj, 711, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1260], NULL, 2, 0, 0);
    codeobj_6664e8abfe89cdaffd1accfc260d7920 = MAKE_CODEOBJECT(module_filename_obj, 756, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1260], NULL, 2, 0, 0);
    codeobj_d5099f7201f9d7484a8aec53c51c60a7 = MAKE_CODEOBJECT(module_filename_obj, 668, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1261], NULL, 3, 0, 0);
    codeobj_c1aa34506ff2db6b85c5687004f2df7b = MAKE_CODEOBJECT(module_filename_obj, 592, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1262], NULL, 8, 0, 0);
    codeobj_2512803867250188a038c678598dded1 = MAKE_CODEOBJECT(module_filename_obj, 301, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1263], NULL, 6, 0, 0);
    codeobj_a9cdc0aff805406c166683af171167b0 = MAKE_CODEOBJECT(module_filename_obj, 772, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1264], NULL, 8, 0, 0);
    codeobj_378f1484508a32d57e08e59de784deb3 = MAKE_CODEOBJECT(module_filename_obj, 352, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1265], NULL, 4, 0, 0);
    codeobj_77b7c0239ca19f52b7d2d1b2c93f7212 = MAKE_CODEOBJECT(module_filename_obj, 571, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1266], NULL, 10, 0, 0);
    codeobj_bac6657b7654ae2101b3a4cad951d032 = MAKE_CODEOBJECT(module_filename_obj, 570, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1267], NULL, 9, 0, 0);
    codeobj_7b01927d67643ce0eef421a64fddf5bc = MAKE_CODEOBJECT(module_filename_obj, 573, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1267], NULL, 9, 0, 0);
    codeobj_1cf4344747a5c75784e8f3c9f710b1bc = MAKE_CODEOBJECT(module_filename_obj, 568, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1268], NULL, 8, 0, 0);
    codeobj_0876eff6cda25315b54cb0b6810f6735 = MAKE_CODEOBJECT(module_filename_obj, 590, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1269], NULL, 8, 0, 0);
    codeobj_7dba519dedf0b9af6c294099e52053d4 = MAKE_CODEOBJECT(module_filename_obj, 298, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1270], NULL, 9, 0, 0);
    codeobj_ce65af401f1139ca5e66474baa28214b = MAKE_CODEOBJECT(module_filename_obj, 348, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1271], NULL, 7, 0, 0);
    codeobj_b2ff758cb1d28d1f58f70797a35b4ae3 = MAKE_CODEOBJECT(module_filename_obj, 349, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1271], NULL, 7, 0, 0);
    codeobj_aa0f22dbe3b10af7e29cfb79b24c12bd = MAKE_CODEOBJECT(module_filename_obj, 350, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1271], NULL, 7, 0, 0);
    codeobj_4f7fec7f4b33ced4818a477050b6e2f6 = MAKE_CODEOBJECT(module_filename_obj, 351, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1272], NULL, 9, 0, 0);
    codeobj_2d35c35e0539a548d7f7367193233711 = MAKE_CODEOBJECT(module_filename_obj, 353, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1273], NULL, 8, 0, 0);
    codeobj_f8e6b282c3f6c8e6c394dc315cb67289 = MAKE_CODEOBJECT(module_filename_obj, 354, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1273], NULL, 8, 0, 0);
    codeobj_c83641657902a7d14882b2c5679c7a27 = MAKE_CODEOBJECT(module_filename_obj, 355, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1273], NULL, 8, 0, 0);
    codeobj_29c14bb16de6dc53d8e0f34ad36ff02b = MAKE_CODEOBJECT(module_filename_obj, 635, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1274], NULL, 11, 0, 0);
    codeobj_e514ce676e9f791e724b3e2b8ee3517e = MAKE_CODEOBJECT(module_filename_obj, 397, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1275], NULL, 10, 0, 0);
    codeobj_bf1d96d936851e30d347ea328df356f7 = MAKE_CODEOBJECT(module_filename_obj, 412, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1276], NULL, 7, 0, 0);
    codeobj_d6639c3d748e14f52c70358395c9ce89 = MAKE_CODEOBJECT(module_filename_obj, 413, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1276], NULL, 7, 0, 0);
    codeobj_afced52859d61a926d49e9db5968663b = MAKE_CODEOBJECT(module_filename_obj, 395, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1277], NULL, 7, 0, 0);
    codeobj_b702c39d122d4ea4a738e071068e65c6 = MAKE_CODEOBJECT(module_filename_obj, 633, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1277], NULL, 7, 0, 0);
    codeobj_74f8d94d49e9d1b3fcc51a4010fb5b05 = MAKE_CODEOBJECT(module_filename_obj, 575, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1278], NULL, 14, 0, 0);
    codeobj_6f1e994bac42fa341d0aa13e327c8daa = MAKE_CODEOBJECT(module_filename_obj, 310, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1279], NULL, 3, 0, 0);
    codeobj_e3dd73bdb8b4f5b0e782f3b248d1bbf0 = MAKE_CODEOBJECT(module_filename_obj, 357, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1280], NULL, 7, 0, 0);
    codeobj_6472c0ce4b64cd5a6fbc99d80b23915e = MAKE_CODEOBJECT(module_filename_obj, 542, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1280], NULL, 7, 0, 0);
    codeobj_b6bbf93c71965cedf95e6f130505292c = MAKE_CODEOBJECT(module_filename_obj, 623, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1280], NULL, 7, 0, 0);
    codeobj_42f5df001e42f799bdd66d4326fe2450 = MAKE_CODEOBJECT(module_filename_obj, 674, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1280], NULL, 7, 0, 0);
    codeobj_58eae10d95351d4564e2132f6aabd04d = MAKE_CODEOBJECT(module_filename_obj, 332, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1281], NULL, 4, 0, 0);
    codeobj_00eecd338db8e7fc72104c076ea2cb22 = MAKE_CODEOBJECT(module_filename_obj, 307, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1282], NULL, 4, 0, 0);
    codeobj_3c64cd27205b35aebadb239d9a7aa80f = MAKE_CODEOBJECT(module_filename_obj, 617, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1282], NULL, 4, 0, 0);
    codeobj_12569823e89ebd1f7010bf35877653ec = MAKE_CODEOBJECT(module_filename_obj, 260, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1283], NULL, 2, 0, 0);
    codeobj_4d55603165fdee73a489e272024b5566 = MAKE_CODEOBJECT(module_filename_obj, 362, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1284], NULL, 7, 0, 0);
    codeobj_7caf0afd9012f0af301e8b709cdfa99d = MAKE_CODEOBJECT(module_filename_obj, 627, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1284], NULL, 7, 0, 0);
    codeobj_87abfa1590bf8169d5377e954b0c82f8 = MAKE_CODEOBJECT(module_filename_obj, 655, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1285], NULL, 5, 0, 0);
    codeobj_d9ea36f93ae2a0e75fa4a9dd58385550 = MAKE_CODEOBJECT(module_filename_obj, 386, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1286], NULL, 2, 0, 0);
    codeobj_eb9b182d1a8b2e3c06f57c8c989ce4ea = MAKE_CODEOBJECT(module_filename_obj, 474, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1287], NULL, 3, 0, 0);
    codeobj_c15bba6d7c175b122a3c688aeb5faae2 = MAKE_CODEOBJECT(module_filename_obj, 326, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1288], NULL, 0, 1, 0);
    codeobj_e83983f0754629dff38961216e4710b2 = MAKE_CODEOBJECT(module_filename_obj, 693, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1289], NULL, 23, 0, 0);
    codeobj_e3f682910d7e24ca5e7e6b9cb710e670 = MAKE_CODEOBJECT(module_filename_obj, 342, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1290], NULL, 2, 0, 0);
    codeobj_c64deef88142504456628a1c57e2e898 = MAKE_CODEOBJECT(module_filename_obj, 914, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_89a9e99fdeb055da1aad7c4cf594bac6 = MAKE_CODEOBJECT(module_filename_obj, 915, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_9a46581073e9d35d3e662f0dd0d90fc6 = MAKE_CODEOBJECT(module_filename_obj, 917, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_5d284c3564eb208718b4f7b3fdb5c76d = MAKE_CODEOBJECT(module_filename_obj, 919, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_e3da31d09a44334ff59634ce6ed0bc3c = MAKE_CODEOBJECT(module_filename_obj, 920, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_a32d9273877d5555e1f8397a426ac96e = MAKE_CODEOBJECT(module_filename_obj, 926, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_a97f33dcf9bfaf8a4419dabc918ae347 = MAKE_CODEOBJECT(module_filename_obj, 927, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_d6a48bba910c54c87a10374713f50c03 = MAKE_CODEOBJECT(module_filename_obj, 928, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_f757f955720f8f6105e2ae3c8140e814 = MAKE_CODEOBJECT(module_filename_obj, 929, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_96442a0dfa832a0ca2ef5688d65f0601 = MAKE_CODEOBJECT(module_filename_obj, 930, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_16f5a860b27edd898159d148b21a269d = MAKE_CODEOBJECT(module_filename_obj, 933, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_dbf278b15e5abf874473528998df56a2 = MAKE_CODEOBJECT(module_filename_obj, 934, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_1a0da7f678d0c44e4ab0b9ee3998ce3d = MAKE_CODEOBJECT(module_filename_obj, 937, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_588e096092ad3e8ff39d00541f3ba214 = MAKE_CODEOBJECT(module_filename_obj, 938, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_9aa4f3fcf67882e11384d538da3cf533 = MAKE_CODEOBJECT(module_filename_obj, 939, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_e3c70d6d7c27f75c285b54bcb9bf5971 = MAKE_CODEOBJECT(module_filename_obj, 940, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_c728221989c94a572787558029f54575 = MAKE_CODEOBJECT(module_filename_obj, 941, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_b4384d5fc3e7916e68dd5a79dbe5af6a = MAKE_CODEOBJECT(module_filename_obj, 942, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_df6d2d36af6933f0a9c9322ae3cb2d8d = MAKE_CODEOBJECT(module_filename_obj, 943, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_3d83f283adc8088b6a2389b55a77b22f = MAKE_CODEOBJECT(module_filename_obj, 944, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_7bb9255037436edd735d9b2f553bced6 = MAKE_CODEOBJECT(module_filename_obj, 945, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_21fe7c20f7e6de3882fb0c57b3a8518e = MAKE_CODEOBJECT(module_filename_obj, 946, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_906a8fe77cc911fc1e2a212899cad0ac = MAKE_CODEOBJECT(module_filename_obj, 947, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_5f0d7afe6dab2cc41cdd921619392452 = MAKE_CODEOBJECT(module_filename_obj, 948, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_2be1b4aca87a6dc8a16b106038b7e70b = MAKE_CODEOBJECT(module_filename_obj, 949, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_21aa967ad87a07864e5de333e28e2ee6 = MAKE_CODEOBJECT(module_filename_obj, 950, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_1d8ea9748902d427ef915d49d461dc64 = MAKE_CODEOBJECT(module_filename_obj, 951, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_755d1972be7ae154fd4fa21add3197bb = MAKE_CODEOBJECT(module_filename_obj, 952, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_853e881185c91a789360267365075b33 = MAKE_CODEOBJECT(module_filename_obj, 953, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_3592e4f7e774e536184c9d85c1636018 = MAKE_CODEOBJECT(module_filename_obj, 954, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_61cd31af88d046a364a3284524c567b3 = MAKE_CODEOBJECT(module_filename_obj, 955, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_d6d5ffafe75da7b5091b64ccd241ec7d = MAKE_CODEOBJECT(module_filename_obj, 956, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_889d729aeb89a261055f0a29016f2fdf = MAKE_CODEOBJECT(module_filename_obj, 957, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_13bf352ddd5fa3c695d02068f0b1e30f = MAKE_CODEOBJECT(module_filename_obj, 958, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_34148d4b957f95056e6417efc83e54c7 = MAKE_CODEOBJECT(module_filename_obj, 959, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_7bf90605cb1280915f604f36d70ceb41 = MAKE_CODEOBJECT(module_filename_obj, 960, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_c8ef158a6ed27b9c50be908fb958740c = MAKE_CODEOBJECT(module_filename_obj, 961, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_e472dcad8970048cd352890714c223fd = MAKE_CODEOBJECT(module_filename_obj, 962, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_0f973e787a689cc52b286a23226535ff = MAKE_CODEOBJECT(module_filename_obj, 963, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_e400d213813e546f77aef5718667f789 = MAKE_CODEOBJECT(module_filename_obj, 964, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_605416594363f56b0d10d73015825425 = MAKE_CODEOBJECT(module_filename_obj, 965, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_3f892fb729973a2389b6393bb8d6fb8c = MAKE_CODEOBJECT(module_filename_obj, 966, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_f92ca0e40f752d9e759d3735cae2475b = MAKE_CODEOBJECT(module_filename_obj, 967, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_34d520deb0ed14b89036e5c1da00fecc = MAKE_CODEOBJECT(module_filename_obj, 968, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_3026332f14fbf8665c7cd4578c428196 = MAKE_CODEOBJECT(module_filename_obj, 969, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_5c40d2d7645073415341562fe91c1f4b = MAKE_CODEOBJECT(module_filename_obj, 971, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_2d0b66f2b8fd24c66a35f010413b49d5 = MAKE_CODEOBJECT(module_filename_obj, 972, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_40fa58f8f298d619ecbc9a81eee4234b = MAKE_CODEOBJECT(module_filename_obj, 973, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_ff5fe515038cc46493064e2698355f84 = MAKE_CODEOBJECT(module_filename_obj, 974, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_6e3372a8c156a773345a1df183a9da22 = MAKE_CODEOBJECT(module_filename_obj, 975, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_1f53acf0eff9c711b12e02e706db1b39 = MAKE_CODEOBJECT(module_filename_obj, 976, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_2e4da870440087c6273a32fffe6b8f69 = MAKE_CODEOBJECT(module_filename_obj, 977, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_7ab685f261388b269ab7018432a4ba0c = MAKE_CODEOBJECT(module_filename_obj, 978, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_3305a22d8988435833c7836623df6fca = MAKE_CODEOBJECT(module_filename_obj, 980, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_efb4a8ca864e92def98ed1b8a1cfbee8 = MAKE_CODEOBJECT(module_filename_obj, 992, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_38c2d4a4c251de148d0436a0a4be469e = MAKE_CODEOBJECT(module_filename_obj, 999, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_b252551eddbbd2576c56696ee1d493dd = MAKE_CODEOBJECT(module_filename_obj, 1000, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_4d17852abf8a517fc4ff44ae729e548b = MAKE_CODEOBJECT(module_filename_obj, 1001, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_e89b8e795b4d1910cbcc791149e9a212 = MAKE_CODEOBJECT(module_filename_obj, 1004, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_42f175115eb8ff44d2ec6fc8756645a2 = MAKE_CODEOBJECT(module_filename_obj, 1013, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_3edaf8be8af74f4d442a9cb5ecd42094 = MAKE_CODEOBJECT(module_filename_obj, 1015, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_7e2e09242460c15f0834e9c5a605ef40 = MAKE_CODEOBJECT(module_filename_obj, 1016, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_ca365c385a3d2a0ae87d5750f0bfdfb9 = MAKE_CODEOBJECT(module_filename_obj, 1018, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_2a928a6ecbfea16729224220e9761eac = MAKE_CODEOBJECT(module_filename_obj, 1019, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_f63a990b5a8ce0603a1d3e259728a3eb = MAKE_CODEOBJECT(module_filename_obj, 1020, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_73de6d70f5db1ee1d11eaed6f5a59333 = MAKE_CODEOBJECT(module_filename_obj, 1022, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_1040b822b634c307ec5fa63f79b0e0bc = MAKE_CODEOBJECT(module_filename_obj, 1023, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_2d89cadff36e844998f6c8b3f7ad10e7 = MAKE_CODEOBJECT(module_filename_obj, 1031, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_34898716a2b25c5ff89184f00bcba555 = MAKE_CODEOBJECT(module_filename_obj, 1032, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_0fc3d3a4cce57302d701706398783808 = MAKE_CODEOBJECT(module_filename_obj, 1033, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_49f6a0a2ef5d95eab9f10adcbe6d0640 = MAKE_CODEOBJECT(module_filename_obj, 1034, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_4b4fabf56b81048ddc4b99fb442247be = MAKE_CODEOBJECT(module_filename_obj, 1036, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_fa6e19317fbdc14afbe4c45f87f453ea = MAKE_CODEOBJECT(module_filename_obj, 1038, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_cf0d8cee1c0e22f3fa8373d9ae1ee202 = MAKE_CODEOBJECT(module_filename_obj, 1050, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_08462f39dde841a10fab2c87b0ce420e = MAKE_CODEOBJECT(module_filename_obj, 1052, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_fd453767e5259a1a9334b3aa46dd5046 = MAKE_CODEOBJECT(module_filename_obj, 1054, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_bb774c7f31c7bb717b18dcb5b7ccee62 = MAKE_CODEOBJECT(module_filename_obj, 1055, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_8dd4b67d7fc72cbec764bb7937f272cf = MAKE_CODEOBJECT(module_filename_obj, 1060, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_9c130511bb36e5474147c5c308128768 = MAKE_CODEOBJECT(module_filename_obj, 1061, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_c2f30c868af015bb1e2957516b303bc4 = MAKE_CODEOBJECT(module_filename_obj, 1062, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_006f60789af7f75f333d104908d05101 = MAKE_CODEOBJECT(module_filename_obj, 1066, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_ea92c19a0efc2cc9557533048d34bbe6 = MAKE_CODEOBJECT(module_filename_obj, 1067, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_7034167245b21eb3259b2ff7355e7a8b = MAKE_CODEOBJECT(module_filename_obj, 1068, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_a9f508abcfd284cd87056fb7f5e3acce = MAKE_CODEOBJECT(module_filename_obj, 1069, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_76daf6860d3644632d0d657edfa983a0 = MAKE_CODEOBJECT(module_filename_obj, 1073, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_7be041372a3ea2fbf9bfc5563d496a9f = MAKE_CODEOBJECT(module_filename_obj, 1076, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1291], NULL, 1, 0, 0);
    codeobj_8e713bec3ab09c713cc282cf14ff3b40 = MAKE_CODEOBJECT(module_filename_obj, 923, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1292], NULL, 2, 0, 0);
    codeobj_2f4825462fa1d8cfb1966311a8d37a18 = MAKE_CODEOBJECT(module_filename_obj, 1077, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1293], NULL, 4, 0, 0);
    codeobj_a9531df7a95b5a1df86ea05bd54be08c = MAKE_CODEOBJECT(module_filename_obj, 983, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1294], NULL, 2, 0, 0);
    codeobj_efaae3bc030aba6ae0586fba58adda68 = MAKE_CODEOBJECT(module_filename_obj, 993, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1295], NULL, 2, 0, 0);
    codeobj_8b77290f7cb29f19017b2fabb1f1cd39 = MAKE_CODEOBJECT(module_filename_obj, 936, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1296], NULL, 2, 0, 0);
    codeobj_cebb6efe21f489a19821799b0060167e = MAKE_CODEOBJECT(module_filename_obj, 745, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1297], NULL, 2, 0, 0);
    codeobj_ad7abfff9a8ace837cef9c8befb2a3d3 = MAKE_CODEOBJECT(module_filename_obj, 1025, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1297], NULL, 2, 0, 0);
    codeobj_bea355721dd4873255d3fa06cd15b076 = MAKE_CODEOBJECT(module_filename_obj, 1035, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1297], NULL, 2, 0, 0);
    codeobj_b8edc5c0d6ababe853c4e97a3c2622f6 = MAKE_CODEOBJECT(module_filename_obj, 1071, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1298], NULL, 4, 0, 0);
    codeobj_001e334e41d2a52e959d9a55c352cb2d = MAKE_CODEOBJECT(module_filename_obj, 1030, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1299], NULL, 4, 0, 0);
    codeobj_707a66e0a7b7d275648c8f6a19111844 = MAKE_CODEOBJECT(module_filename_obj, 916, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1300], NULL, 2, 0, 0);
    codeobj_453e315128d097c62446eba020d8b766 = MAKE_CODEOBJECT(module_filename_obj, 1065, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1301], NULL, 5, 0, 0);
    codeobj_dbe16675e951c881376fe3916e59ce39 = MAKE_CODEOBJECT(module_filename_obj, 970, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARKEYWORDS | CO_NOFREE, mod_consts[166], mod_consts[1302], NULL, 3, 0, 0);
    codeobj_85ded636f13dc2748ca6dc2facf04d87 = MAKE_CODEOBJECT(module_filename_obj, 931, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1303], NULL, 2, 0, 0);
    codeobj_c07f188c3697a98da20f5ecc7087adda = MAKE_CODEOBJECT(module_filename_obj, 1072, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1304], NULL, 3, 0, 0);
    codeobj_838dd01117966c2d76f91375634feb0b = MAKE_CODEOBJECT(module_filename_obj, 1039, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1305], NULL, 3, 1, 0);
    codeobj_10f57efaeacb58a7dc2fb45250479593 = MAKE_CODEOBJECT(module_filename_obj, 986, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1306], NULL, 5, 0, 0);
    codeobj_c77bac1d2d8b09b36f06541ee7d1c809 = MAKE_CODEOBJECT(module_filename_obj, 1042, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1307], NULL, 2, 0, 0);
    codeobj_fcc405463fdf61e7cb5f71f88f1b3aae = MAKE_CODEOBJECT(module_filename_obj, 924, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1308], NULL, 2, 0, 0);
    codeobj_d97f9f397b3cb92eb573e30ebf139cd2 = MAKE_CODEOBJECT(module_filename_obj, 1037, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1309], NULL, 4, 0, 0);
    codeobj_f0dbe416ae5c1921912a342d9cc5e507 = MAKE_CODEOBJECT(module_filename_obj, 935, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1310], NULL, 3, 0, 0);
    codeobj_f843252fcf81bae474990bc203ed92b4 = MAKE_CODEOBJECT(module_filename_obj, 1007, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1311], NULL, 2, 1, 0);
    codeobj_0df2824def00aced95e5ab515ecd14b3 = MAKE_CODEOBJECT(module_filename_obj, 1056, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1312], NULL, 2, 0, 0);
    codeobj_09a08958825512da68a3318a1a74b624 = MAKE_CODEOBJECT(module_filename_obj, 1059, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1313], NULL, 6, 0, 0);
    codeobj_042ab9f9f47a2ee1b929194970a894ff = MAKE_CODEOBJECT(module_filename_obj, 1029, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1314], NULL, 2, 0, 0);
    codeobj_70d9974d4dce420c7821cf01f86f3804 = MAKE_CODEOBJECT(module_filename_obj, 1024, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1315], NULL, 3, 1, 0);
    codeobj_6b9befeca3059e3efa8ab83f072ae9f9 = MAKE_CODEOBJECT(module_filename_obj, 991, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1316], NULL, 3, 1, 0);
    codeobj_b774c94b41bba0912d7f96c7bf07dcb7 = MAKE_CODEOBJECT(module_filename_obj, 925, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1317], NULL, 2, 0, 0);
    codeobj_ffebb5641ad002c18fec8bef23371a2f = MAKE_CODEOBJECT(module_filename_obj, 987, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_54d328f6650ecdcedde9b694a65c6992 = MAKE_CODEOBJECT(module_filename_obj, 988, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_c6c49fe0ad99308d3b88c9927f08c3a8 = MAKE_CODEOBJECT(module_filename_obj, 989, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_e1c4508088fd65b1b811ece268bb18c0 = MAKE_CODEOBJECT(module_filename_obj, 990, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_84504c440f206dac8bf39606312c7b53 = MAKE_CODEOBJECT(module_filename_obj, 994, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_7e1725d755d630dc1fdc3dd30b18407b = MAKE_CODEOBJECT(module_filename_obj, 996, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_d3692d30251465242bca3a2f8dfc1985 = MAKE_CODEOBJECT(module_filename_obj, 997, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_320a5da8062c1545fae1c70c2735422b = MAKE_CODEOBJECT(module_filename_obj, 998, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_5a885c4160c7fc30ce3cd2b5ddd2cac2 = MAKE_CODEOBJECT(module_filename_obj, 1002, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_d2d6a572eccd40b211bf95f563ba310f = MAKE_CODEOBJECT(module_filename_obj, 1003, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_7c1a81b4c22081b323098fe75313c380 = MAKE_CODEOBJECT(module_filename_obj, 1010, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_41439d00d428d07f66100e916a0cebec = MAKE_CODEOBJECT(module_filename_obj, 1011, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_48414fb32bb8beea0c751e181df9c780 = MAKE_CODEOBJECT(module_filename_obj, 1014, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_059c2701d069237cb13a3c10a79c2dd7 = MAKE_CODEOBJECT(module_filename_obj, 1017, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_c281c027bdb0ca0290530ab424df02bf = MAKE_CODEOBJECT(module_filename_obj, 1026, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_8ca52050f6f9a2d7fdf5e445547c3771 = MAKE_CODEOBJECT(module_filename_obj, 1053, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1318], NULL, 2, 0, 0);
    codeobj_847e7f94bf2761dec2c35df656db185e = MAKE_CODEOBJECT(module_filename_obj, 1043, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1319], NULL, 2, 0, 0);
    codeobj_7609cae0868d903e5a2be68e72c874c8 = MAKE_CODEOBJECT(module_filename_obj, 1041, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1320], NULL, 2, 0, 0);
    codeobj_f077011d878bdd0950478d9435b61f37 = MAKE_CODEOBJECT(module_filename_obj, 979, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1321], NULL, 3, 0, 0);
    codeobj_18e2a6babf431e501ebd34ef62dfee6a = MAKE_CODEOBJECT(module_filename_obj, 982, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1322], NULL, 3, 0, 0);
    codeobj_8010d6bb762f8675cc559331bfa74efb = MAKE_CODEOBJECT(module_filename_obj, 904, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_f0739fe6a3573ced803d021a46f73484 = MAKE_CODEOBJECT(module_filename_obj, 905, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_a4b91766ab7047a92cbf56396ffc786f = MAKE_CODEOBJECT(module_filename_obj, 906, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_2fdd8ebf8b37a3be4d078f5aa37f6b9b = MAKE_CODEOBJECT(module_filename_obj, 907, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_f779d74eebc1cb8fce27d789ba9c525d = MAKE_CODEOBJECT(module_filename_obj, 908, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_5109c98e1e11618c92a0cf7838547347 = MAKE_CODEOBJECT(module_filename_obj, 909, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_c752f3799ac01c3199ebdaedb36a8142 = MAKE_CODEOBJECT(module_filename_obj, 910, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_14aee79461124a621d76399c7bd182a8 = MAKE_CODEOBJECT(module_filename_obj, 911, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_75e66ccd951a27b683ba1d1964e713da = MAKE_CODEOBJECT(module_filename_obj, 912, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_e475846966cdd11f8ed327620243fb8b = MAKE_CODEOBJECT(module_filename_obj, 913, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_953e8f7210b66734d2427f7b5e46a13a = MAKE_CODEOBJECT(module_filename_obj, 918, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_21fff67716cbe4d4e5d761af0af9f929 = MAKE_CODEOBJECT(module_filename_obj, 921, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_c998dce4ca09801fdb5ec8ec717b3a93 = MAKE_CODEOBJECT(module_filename_obj, 922, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_b1ee6155ec7fb1f6382d3953e9bdb127 = MAKE_CODEOBJECT(module_filename_obj, 981, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_99d1e402b1a6521d7f0cc9b1c4c04626 = MAKE_CODEOBJECT(module_filename_obj, 1006, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_2866f05819f324b0ba31917d05642955 = MAKE_CODEOBJECT(module_filename_obj, 1046, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_29a9574f0ae92bde0e463245ffa82934 = MAKE_CODEOBJECT(module_filename_obj, 1049, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_4fc794cc258db96e0581acd70eed1ee4 = MAKE_CODEOBJECT(module_filename_obj, 1070, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_cddf06f76a61e27687c8d04b467e3434 = MAKE_CODEOBJECT(module_filename_obj, 1075, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1323], NULL, 2, 0, 0);
    codeobj_a4f4a2117ada9bc708f462b4ccb986c5 = MAKE_CODEOBJECT(module_filename_obj, 1012, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1324], NULL, 2, 1, 0);
    codeobj_fa0ab4f5906404aa4b5cbe475e1f2e6e = MAKE_CODEOBJECT(module_filename_obj, 932, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1325], NULL, 2, 0, 0);
    codeobj_475ff1167e42bc5c401e446e79cd286a = MAKE_CODEOBJECT(module_filename_obj, 1064, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1326], NULL, 1, 0, 0);
    codeobj_927f76c467770a5b9e5c981dc56ce84e = MAKE_CODEOBJECT(module_filename_obj, 1045, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1327], NULL, 2, 0, 0);
    codeobj_322264d5c85ad95f9d3757969320c74c = MAKE_CODEOBJECT(module_filename_obj, 1074, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1328], NULL, 2, 0, 0);
    codeobj_66f7ab97d939c3f4f0e95767f2780a7c = MAKE_CODEOBJECT(module_filename_obj, 1044, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1329], NULL, 1, 0, 0);
    codeobj_d2aeb0f6581eea4412c9b79be5fa0530 = MAKE_CODEOBJECT(module_filename_obj, 1047, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1329], NULL, 1, 0, 0);
    codeobj_c71cbdd5c1a73f69916fb9d768b0e3c8 = MAKE_CODEOBJECT(module_filename_obj, 319, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1329], NULL, 2, 0, 0);
    codeobj_cf189704e4014db0ee029373657fd37e = MAKE_CODEOBJECT(module_filename_obj, 1005, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1329], NULL, 2, 0, 0);
    codeobj_74153452be25943b302bd7b3877d82ba = MAKE_CODEOBJECT(module_filename_obj, 1048, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1329], NULL, 2, 0, 0);
    codeobj_a582dbc6e71bdfe5ea1b503092fc52a9 = MAKE_CODEOBJECT(module_filename_obj, 1063, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1329], NULL, 2, 0, 0);
    codeobj_8a9ce251c9fed0565f88fbd0d8da81d0 = MAKE_CODEOBJECT(module_filename_obj, 984, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1330], NULL, 3, 0, 0);
    codeobj_d17db1f017fbc3be9b7f39950b885ab0 = MAKE_CODEOBJECT(module_filename_obj, 985, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1330], NULL, 3, 0, 0);
    codeobj_bca737e899e3ad78f1157591a1e24532 = MAKE_CODEOBJECT(module_filename_obj, 1057, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1331], NULL, 4, 0, 0);
    codeobj_fe1e246f74080f172c5e511c76764f11 = MAKE_CODEOBJECT(module_filename_obj, 1058, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1331], NULL, 4, 0, 0);
    codeobj_979f62d5e23e391e772b06edae72c2dc = MAKE_CODEOBJECT(module_filename_obj, 1051, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1332], NULL, 5, 0, 0);
    codeobj_946438b20fd42ed2d862099a4b118d99 = MAKE_CODEOBJECT(module_filename_obj, 995, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1333], NULL, 3, 0, 0);
    codeobj_2ec674c03dd7fd4126c2ac2ee31b8a05 = MAKE_CODEOBJECT(module_filename_obj, 1040, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1334], NULL, 2, 0, 0);
    codeobj_69a535a32cf2e3762391685dba872750 = MAKE_CODEOBJECT(module_filename_obj, 1021, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1335], NULL, 2, 0, 0);
    codeobj_48310ecd8e8402d535ab59156deb2693 = MAKE_CODEOBJECT(module_filename_obj, 1027, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1336], NULL, 3, 0, 0);
    codeobj_eb0c70f7ca52a5d76aa1c66983c5e750 = MAKE_CODEOBJECT(module_filename_obj, 1008, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1337], NULL, 2, 0, 0);
    codeobj_9f477e055e6d61b408214f9c75869016 = MAKE_CODEOBJECT(module_filename_obj, 1009, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1337], NULL, 2, 0, 0);
    codeobj_619539fdd70ba5b6e36e0d21b51c976d = MAKE_CODEOBJECT(module_filename_obj, 1028, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1338], NULL, 4, 0, 0);
    codeobj_0eed00c2a4d10957613addab994fb2e2 = MAKE_CODEOBJECT(module_filename_obj, 816, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1339], NULL, 5, 0, 0);
    codeobj_8bcfcc928f3f7335c124c74f34429144 = MAKE_CODEOBJECT(module_filename_obj, 486, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1340], NULL, 1, 0, 0);
    codeobj_de09c6c08f1327b2adc32bbc4dc46f13 = MAKE_CODEOBJECT(module_filename_obj, 487, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1340], NULL, 1, 0, 0);
    codeobj_bba29cf04bc3d1b0badf15dbd430adc8 = MAKE_CODEOBJECT(module_filename_obj, 488, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1340], NULL, 1, 0, 0);
    codeobj_a5dcb1ee4f6881a996dd4905c583a6d6 = MAKE_CODEOBJECT(module_filename_obj, 706, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1341], NULL, 2, 0, 0);
    codeobj_d98789f658724e5a85f4af82e1f5c43e = MAKE_CODEOBJECT(module_filename_obj, 835, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1342], NULL, 3, 0, 0);
    codeobj_f71878a4dfa11d4726ae13c2b5baf2d1 = MAKE_CODEOBJECT(module_filename_obj, 836, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1342], NULL, 3, 0, 0);
    codeobj_cca8fd0701c5392dbc7d40521b9b3a08 = MAKE_CODEOBJECT(module_filename_obj, 895, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1342], NULL, 3, 0, 0);
    codeobj_df6e651c101aa95f91564425da2654cd = MAKE_CODEOBJECT(module_filename_obj, 896, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1342], NULL, 3, 0, 0);
    codeobj_1807b6ca922be67e82841e9b47006d62 = MAKE_CODEOBJECT(module_filename_obj, 293, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1343], NULL, 0, 0, 0);
    codeobj_e575def1afe55ee5a201ad8385042e98 = MAKE_CODEOBJECT(module_filename_obj, 294, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1343], NULL, 0, 0, 0);
    codeobj_17eabe4867ea0ae34f6a9c77e36a7b6f = MAKE_CODEOBJECT(module_filename_obj, 295, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1343], NULL, 0, 0, 0);
    codeobj_a79a5208a14db603e6d837b0c34ebb39 = MAKE_CODEOBJECT(module_filename_obj, 316, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1343], NULL, 0, 0, 0);
    codeobj_368bd565df8d1b7bc9a4c039f93ba850 = MAKE_CODEOBJECT(module_filename_obj, 318, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1343], NULL, 0, 0, 0);
    codeobj_4b3fde649e7c4be6197c566dac81a024 = MAKE_CODEOBJECT(module_filename_obj, 321, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_NOFREE, mod_consts[166], mod_consts[1343], NULL, 0, 0, 0);
    codeobj_db73c6e00aec411f2aa7eb9da05c6805 = MAKE_CODEOBJECT(module_filename_obj, 322, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1344], NULL, 3, 0, 0);
    codeobj_e4b372e089fbc7e5fb4d45b16a0c8636 = MAKE_CODEOBJECT(module_filename_obj, 841, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1344], NULL, 3, 0, 0);
    codeobj_5cbf4fab4c2124bb2b36a401dd8e6c5f = MAKE_CODEOBJECT(module_filename_obj, 564, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE, mod_consts[166], mod_consts[1345], NULL, 0, 0, 0);
    codeobj_5ce825167c761b763f62a0cca3170fdc = MAKE_CODEOBJECT(module_filename_obj, 339, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1346], NULL, 2, 0, 0);
    codeobj_4c1db0006441ef38b5ee7e374d4d0804 = MAKE_CODEOBJECT(module_filename_obj, 388, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1346], NULL, 2, 0, 0);
    codeobj_6b20f2bc37602335552e6e16621dd1c4 = MAKE_CODEOBJECT(module_filename_obj, 476, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1346], NULL, 2, 0, 0);
    codeobj_73be685428acc1df92a271369e0bd316 = MAKE_CODEOBJECT(module_filename_obj, 551, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1346], NULL, 2, 0, 0);
    codeobj_931c0a7f3453008c37a1330dd732be96 = MAKE_CODEOBJECT(module_filename_obj, 808, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1346], NULL, 2, 0, 0);
    codeobj_b1f0b52deb44af19d4dec0799359dbc6 = MAKE_CODEOBJECT(module_filename_obj, 901, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1346], NULL, 2, 0, 0);
    codeobj_89195a8737e718a015732554cd8b0ecf = MAKE_CODEOBJECT(module_filename_obj, 272, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1347], NULL, 3, 0, 0);
    codeobj_31699ff386c647c16a59772e9d1185d5 = MAKE_CODEOBJECT(module_filename_obj, 609, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1347], NULL, 3, 0, 0);
    codeobj_064d595c73c8c4974ab0d3debd4311fd = MAKE_CODEOBJECT(module_filename_obj, 739, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1348], NULL, 3, 0, 0);
    codeobj_e8234a88e79846c05388c3368aa40b02 = MAKE_CODEOBJECT(module_filename_obj, 809, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1349], NULL, 3, 0, 0);
    codeobj_36b75efc5cb2644b1e5b2f2b7ac76e2a = MAKE_CODEOBJECT(module_filename_obj, 527, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1350], NULL, 2, 0, 0);
    codeobj_1a8dd72c18c03866f4411799d28c5979 = MAKE_CODEOBJECT(module_filename_obj, 359, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1351], NULL, 4, 0, 0);
    codeobj_e26d0b73897c1062af13835f340e634c = MAKE_CODEOBJECT(module_filename_obj, 323, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1352], NULL, 4, 0, 0);
    codeobj_dbc69801ca75427565e636777011a71a = MAKE_CODEOBJECT(module_filename_obj, 708, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1353], NULL, 5, 0, 0);
    codeobj_bd4819956892029ce6dc625927cdd03b = MAKE_CODEOBJECT(module_filename_obj, 744, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1353], NULL, 5, 0, 0);
    codeobj_ce3d7f1da4108e9ee73751089818154a = MAKE_CODEOBJECT(module_filename_obj, 882, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[166], mod_consts[1354], NULL, 3, 0, 0);
    codeobj_d01e95afa6773609415a5ad3d1bc7378 = MAKE_CODEOBJECT(module_filename_obj, 1260, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[1355], mod_consts[1356], NULL, 1, 0, 0);
    codeobj_c6cff64f5a619567cc90bcd3ff5b41a1 = MAKE_CODEOBJECT(module_filename_obj, 1, CO_NOFREE, mod_consts[1357], NULL, NULL, 0, 0, 0);
    codeobj_2aee0e71fbfb7d70078ef3e5651c5274 = MAKE_CODEOBJECT(module_filename_obj, 1147, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[1000], mod_consts[1358], NULL, 1, 0, 0);
    codeobj_9e53b0661e341a07bfe06ad7b3648d5c = MAKE_CODEOBJECT(module_filename_obj, 1374, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[1030], mod_consts[1359], NULL, 0, 0, 0);
    codeobj_b1e8231baac4ff0fb8a1ee4db14e786e = MAKE_CODEOBJECT(module_filename_obj, 47, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[974], mod_consts[1360], NULL, 0, 0, 0);
    codeobj_08a8341025608895f5cca084a2a73a59 = MAKE_CODEOBJECT(module_filename_obj, 1310, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[1028], mod_consts[1361], NULL, 0, 0, 0);
    codeobj_7ff0ae4604184518803c0a295e81bf4d = MAKE_CODEOBJECT(module_filename_obj, 230, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[1026], mod_consts[1362], NULL, 0, 0, 0);
    codeobj_29fc55b34bb3ce57dc59d6be792503c9 = MAKE_CODEOBJECT(module_filename_obj, 1206, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS | CO_NOFREE, mod_consts[117], mod_consts[1363], NULL, 2, 0, 0);
    codeobj_fc0fb2316499201016d2c11f98c02811 = MAKE_CODEOBJECT(module_filename_obj, 1134, CO_OPTIMIZED | CO_NEWLOCALS, mod_consts[395], mod_consts[1364], mod_consts[1365], 1, 0, 0);
    codeobj_804b72e970ddaba1aaa2ed310122c27c = MAKE_CODEOBJECT(module_filename_obj, 1404, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[1062], mod_consts[1366], NULL, 1, 0, 0);
    codeobj_9d175873b9d319b284c2dd2cd56512fd = MAKE_CODEOBJECT(module_filename_obj, 1380, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[1061], mod_consts[1367], NULL, 1, 0, 0);
    codeobj_db02ea50efb61a8e73a7fefd737c763d = MAKE_CODEOBJECT(module_filename_obj, 1111, CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE, mod_consts[1056], mod_consts[1368], NULL, 1, 0, 0);
    codeobj_bea55e10897cf5b6c5f6dccbe052466a = MAKE_CODEOBJECT(module_filename_obj, 1136, CO_OPTIMIZED | CO_NEWLOCALS | CO_VARARGS | CO_VARKEYWORDS, mod_consts[992], mod_consts[1369], mod_consts[1370], 0, 0, 0);
}

// The module function declarations.
NUITKA_CROSS_MODULE PyObject *impl___main__$$$function__5_complex_call_helper_star_list_star_dict(PyObject **python_pars);


NUITKA_CROSS_MODULE PyObject *impl___main__$$$function__10_complex_call_helper_pos_star_list_star_dict(PyObject **python_pars);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__1_get_ignored_functions(PyObject *annotations);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides(PyObject *annotations);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__100_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__101_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__102_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__103_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__104_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__105_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__106_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__107_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__108_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__109_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__10_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__110_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__111_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__112_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__113_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__114_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__115_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__116_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__117_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__118_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__119_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__11_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__120_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__121_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__122_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__123_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__124_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__125_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__126_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__127_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__128_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__129_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__12_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__130_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__131_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__132_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__133_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__134_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__135_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__136_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__137_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__138_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__139_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__13_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__140_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__141_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__142_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__143_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__144_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__145_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__146_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__147_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__148_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__149_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__14_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__150_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__151_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__152_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__153_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__154_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__155_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__156_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__157_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__158_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__159_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__15_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__160_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__161_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__162_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__163_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__164_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__165_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__166_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__167_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__168_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__169_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__16_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__170_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__171_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__172_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__173_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__174_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__175_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__176_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__177_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__178_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__179_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__17_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__180_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__181_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__182_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__183_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__184_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__185_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__186_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__187_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__188_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__189_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__18_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__190_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__191_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__192_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__193_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__194_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__195_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__196_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__197_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__198_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__199_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__19_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__1_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__200_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__201_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__202_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__203_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__204_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__205_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__206_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__207_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__208_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__209_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__20_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__210_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__211_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__212_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__213_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__214_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__215_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__216_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__217_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__218_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__219_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__21_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__220_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__221_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__222_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__223_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__224_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__225_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__226_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__227_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__228_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__229_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__22_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__230_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__231_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__232_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__233_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__234_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__235_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__236_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__237_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__238_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__239_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__23_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__240_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__241_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__242_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__243_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__244_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__245_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__246_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__247_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__248_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__249_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__24_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__250_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__251_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__252_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__253_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__254_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__255_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__256_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__257_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__258_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__259_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__25_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__260_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__261_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__262_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__263_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__264_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__265_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__266_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__267_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__268_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__269_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__26_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__270_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__271_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__272_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__273_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__274_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__275_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__276_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__277_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__278_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__279_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__27_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__280_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__281_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__282_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__283_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__284_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__285_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__286_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__287_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__288_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__289_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__28_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__290_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__291_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__292_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__293_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__294_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__295_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__296_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__297_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__298_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__299_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__29_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__2_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__300_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__301_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__302_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__303_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__304_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__305_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__306_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__307_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__308_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__309_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__30_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__310_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__311_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__312_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__313_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__314_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__315_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__316_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__317_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__318_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__319_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__31_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__320_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__321_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__322_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__323_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__324_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__325_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__326_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__327_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__328_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__329_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__32_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__330_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__331_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__332_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__333_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__334_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__335_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__336_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__337_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__338_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__339_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__33_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__340_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__341_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__342_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__343_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__344_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__345_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__346_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__347_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__348_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__349_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__34_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__350_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__351_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__352_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__353_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__354_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__355_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__356_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__357_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__358_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__359_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__35_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__360_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__361_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__362_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__363_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__364_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__365_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__366_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__367_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__368_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__369_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__36_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__370_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__371_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__372_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__373_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__374_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__375_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__376_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__377_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__378_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__379_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__37_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__380_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__381_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__382_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__383_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__384_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__385_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__386_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__387_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__388_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__389_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__38_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__390_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__391_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__392_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__393_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__394_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__395_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__396_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__397_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__398_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__399_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__39_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__3_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__400_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__401_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__402_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__403_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__404_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__405_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__406_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__407_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__408_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__409_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__40_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__410_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__411_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__412_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__413_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__414_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__415_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__416_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__417_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__418_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__419_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__41_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__420_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__421_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__422_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__423_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__424_lambda(PyObject *kw_defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__425_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__426_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__427_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__428_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__429_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__42_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__430_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__431_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__432_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__433_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__434_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__435_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__436_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__437_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__438_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__439_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__43_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__440_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__441_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__442_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__443_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__444_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__445_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__446_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__447_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__448_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__449_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__44_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__450_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__451_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__452_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__453_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__454_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__455_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__456_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__457_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__458_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__459_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__45_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__460_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__461_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__462_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__463_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__464_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__465_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__466_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__467_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__468_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__469_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__46_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__470_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__471_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__472_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__473_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__474_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__475_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__476_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__477_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__478_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__479_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__47_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__480_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__481_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__482_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__483_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__484_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__485_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__486_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__487_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__488_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__489_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__48_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__490_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__491_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__492_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__493_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__494_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__495_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__496_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__497_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__498_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__499_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__49_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__4_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__500_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__501_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__502_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__503_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__504_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__505_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__506_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__507_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__508_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__509_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__50_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__510_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__511_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__512_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__513_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__514_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__515_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__516_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__517_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__518_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__519_lambda(PyObject *defaults, PyObject *kw_defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__51_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__520_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__521_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__522_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__523_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__524_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__525_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__526_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__527_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__528_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__529_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__52_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__530_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__531_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__532_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__533_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__534_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__535_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__536_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__537_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__538_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__539_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__53_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__540_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__541_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__542_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__543_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__544_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__545_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__546_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__547_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__548_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__549_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__54_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__550_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__551_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__552_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__553_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__554_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__555_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__556_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__557_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__558_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__559_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__55_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__560_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__561_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__562_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__563_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__564_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__565_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__566_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__567_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__568_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__569_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__56_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__570_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__571_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__572_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__573_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__574_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__575_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__576_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__577_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__578_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__579_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__57_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__580_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__581_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__582_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__583_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__584_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__585_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__586_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__587_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__588_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__589_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__58_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__590_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__591_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__592_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__593_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__594_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__595_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__596_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__597_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__598_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__599_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__59_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__5_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__600_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__601_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__602_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__603_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__604_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__605_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__606_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__607_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__608_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__609_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__60_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__610_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__611_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__612_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__613_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__614_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__615_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__616_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__617_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__618_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__619_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__61_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__620_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__621_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__622_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__623_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__624_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__625_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__626_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__627_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__628_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__629_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__62_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__630_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__631_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__632_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__633_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__634_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__635_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__636_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__637_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__638_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__639_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__63_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__640_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__641_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__642_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__643_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__644_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__645_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__646_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__647_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__648_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__649_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__64_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__650_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__651_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__652_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__653_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__654_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__655_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__656_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__657_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__658_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__659_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__65_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__660_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__661_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__662_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__663_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__664_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__665_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__666_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__667_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__668_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__669_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__66_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__670_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__671_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__672_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__673_lambda(PyObject *defaults, PyObject *kw_defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__674_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__675_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__676_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__677_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__678_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__679_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__67_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__680_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__681_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__682_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__683_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__684_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__685_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__686_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__687_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__688_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__689_lambda(PyObject *defaults, PyObject *kw_defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__68_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__690_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__691_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__692_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__693_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__694_lambda(PyObject *kw_defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__695_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__696_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__697_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__698_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__699_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__69_lambda(PyObject *kw_defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__6_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__700_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__701_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__702_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__703_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__704_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__705_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__706_lambda(PyObject *defaults, PyObject *kw_defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__707_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__708_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__709_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__70_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__710_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__711_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__712_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__713_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__714_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__715_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__716_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__717_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__718_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__719_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__71_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__720_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__721_lambda(PyObject *defaults, PyObject *kw_defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__722_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__723_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__724_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__725_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__726_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__727_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__728_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__729_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__72_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__730_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__731_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__732_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__733_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__734_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__735_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__736_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__737_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__738_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__739_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__73_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__740_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__741_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__742_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__743_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__744_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__745_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__746_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__747_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__748_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__749_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__74_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__750_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__751_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__752_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__753_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__754_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__755_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__756_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__757_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__758_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__759_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__75_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__76_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__77_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__78_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__79_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__7_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__80_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__81_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__82_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__83_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__84_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__85_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__86_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__87_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__88_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__89_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__8_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__90_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__91_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__92_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__93_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__94_lambda();


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__95_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__96_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__97_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__98_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__99_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__9_lambda(PyObject *defaults);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__3_wrap_torch_function(PyObject *annotations);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner(struct Nuitka_CellObject **closure);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner$$$function__1_wrapped(struct Nuitka_CellObject **closure);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__4__get_overloaded_args(PyObject *annotations);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__5_handle_torch_function(PyObject *annotations);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__6_get_overridable_functions(PyObject *annotations);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__7__get_tensor_methods(PyObject *annotations);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__8_is_tensor_method_or_property(PyObject *annotations);


static PyObject *MAKE_FUNCTION_torch$overrides$$$function__9_is_tensor_like();


// The module function definitions.
static PyObject *impl_torch$overrides$$$function__1_get_ignored_functions(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *var_Tensor = NULL;
    struct Nuitka_FrameObject *frame_b1e8231baac4ff0fb8a1ee4db14e786e;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_b1e8231baac4ff0fb8a1ee4db14e786e = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_b1e8231baac4ff0fb8a1ee4db14e786e)) {
        Py_XDECREF(cache_frame_b1e8231baac4ff0fb8a1ee4db14e786e);

#if _DEBUG_REFCOUNTS
        if (cache_frame_b1e8231baac4ff0fb8a1ee4db14e786e == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_b1e8231baac4ff0fb8a1ee4db14e786e = MAKE_FUNCTION_FRAME(codeobj_b1e8231baac4ff0fb8a1ee4db14e786e, module_torch$overrides, sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_b1e8231baac4ff0fb8a1ee4db14e786e->m_type_description == NULL);
    frame_b1e8231baac4ff0fb8a1ee4db14e786e = cache_frame_b1e8231baac4ff0fb8a1ee4db14e786e;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_b1e8231baac4ff0fb8a1ee4db14e786e);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_b1e8231baac4ff0fb8a1ee4db14e786e) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_expression_value_1;
        tmp_expression_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_1 == NULL)) {
            tmp_expression_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[1]);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 65;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        assert(var_Tensor == NULL);
        var_Tensor = tmp_assign_source_1;
    }
    {
        PyObject *tmp_set_element_1;
        PyObject *tmp_expression_value_2;
        PyObject *tmp_expression_value_3;
        PyObject *tmp_expression_value_4;
        PyObject *tmp_expression_value_5;
        PyObject *tmp_expression_value_6;
        PyObject *tmp_expression_value_7;
        PyObject *tmp_expression_value_8;
        PyObject *tmp_expression_value_9;
        PyObject *tmp_expression_value_10;
        PyObject *tmp_expression_value_11;
        PyObject *tmp_expression_value_12;
        PyObject *tmp_expression_value_13;
        PyObject *tmp_expression_value_14;
        PyObject *tmp_expression_value_15;
        PyObject *tmp_expression_value_16;
        PyObject *tmp_expression_value_17;
        PyObject *tmp_expression_value_18;
        PyObject *tmp_expression_value_19;
        PyObject *tmp_expression_value_20;
        PyObject *tmp_expression_value_21;
        PyObject *tmp_expression_value_22;
        PyObject *tmp_expression_value_23;
        PyObject *tmp_expression_value_24;
        PyObject *tmp_expression_value_25;
        PyObject *tmp_expression_value_26;
        PyObject *tmp_expression_value_27;
        PyObject *tmp_expression_value_28;
        PyObject *tmp_expression_value_29;
        PyObject *tmp_expression_value_30;
        PyObject *tmp_expression_value_31;
        PyObject *tmp_expression_value_32;
        PyObject *tmp_expression_value_33;
        PyObject *tmp_expression_value_34;
        PyObject *tmp_expression_value_35;
        PyObject *tmp_expression_value_36;
        PyObject *tmp_expression_value_37;
        PyObject *tmp_expression_value_38;
        PyObject *tmp_expression_value_39;
        PyObject *tmp_expression_value_40;
        PyObject *tmp_expression_value_41;
        PyObject *tmp_expression_value_42;
        PyObject *tmp_expression_value_43;
        PyObject *tmp_expression_value_44;
        PyObject *tmp_expression_value_45;
        PyObject *tmp_expression_value_46;
        PyObject *tmp_expression_value_47;
        PyObject *tmp_expression_value_48;
        PyObject *tmp_expression_value_49;
        PyObject *tmp_expression_value_50;
        PyObject *tmp_expression_value_51;
        PyObject *tmp_expression_value_52;
        PyObject *tmp_expression_value_53;
        PyObject *tmp_expression_value_54;
        PyObject *tmp_expression_value_55;
        PyObject *tmp_expression_value_56;
        PyObject *tmp_expression_value_57;
        PyObject *tmp_expression_value_58;
        PyObject *tmp_expression_value_59;
        PyObject *tmp_expression_value_60;
        PyObject *tmp_expression_value_61;
        PyObject *tmp_expression_value_62;
        PyObject *tmp_expression_value_63;
        PyObject *tmp_expression_value_64;
        PyObject *tmp_expression_value_65;
        PyObject *tmp_expression_value_66;
        PyObject *tmp_expression_value_67;
        PyObject *tmp_expression_value_68;
        PyObject *tmp_expression_value_69;
        PyObject *tmp_expression_value_70;
        PyObject *tmp_expression_value_71;
        PyObject *tmp_expression_value_72;
        PyObject *tmp_expression_value_73;
        PyObject *tmp_expression_value_74;
        PyObject *tmp_expression_value_75;
        PyObject *tmp_expression_value_76;
        PyObject *tmp_expression_value_77;
        PyObject *tmp_expression_value_78;
        PyObject *tmp_expression_value_79;
        PyObject *tmp_expression_value_80;
        PyObject *tmp_expression_value_81;
        PyObject *tmp_expression_value_82;
        PyObject *tmp_expression_value_83;
        PyObject *tmp_expression_value_84;
        PyObject *tmp_expression_value_85;
        PyObject *tmp_expression_value_86;
        PyObject *tmp_expression_value_87;
        PyObject *tmp_expression_value_88;
        PyObject *tmp_expression_value_89;
        PyObject *tmp_expression_value_90;
        PyObject *tmp_expression_value_91;
        PyObject *tmp_expression_value_92;
        PyObject *tmp_expression_value_93;
        PyObject *tmp_expression_value_94;
        PyObject *tmp_expression_value_95;
        PyObject *tmp_expression_value_96;
        PyObject *tmp_expression_value_97;
        PyObject *tmp_expression_value_98;
        PyObject *tmp_expression_value_99;
        PyObject *tmp_expression_value_100;
        PyObject *tmp_expression_value_101;
        PyObject *tmp_expression_value_102;
        PyObject *tmp_expression_value_103;
        PyObject *tmp_expression_value_104;
        PyObject *tmp_expression_value_105;
        PyObject *tmp_expression_value_106;
        PyObject *tmp_expression_value_107;
        PyObject *tmp_expression_value_108;
        PyObject *tmp_expression_value_109;
        PyObject *tmp_expression_value_110;
        PyObject *tmp_expression_value_111;
        PyObject *tmp_expression_value_112;
        PyObject *tmp_expression_value_113;
        PyObject *tmp_expression_value_114;
        PyObject *tmp_expression_value_115;
        PyObject *tmp_expression_value_116;
        PyObject *tmp_expression_value_117;
        PyObject *tmp_expression_value_118;
        PyObject *tmp_expression_value_119;
        PyObject *tmp_expression_value_120;
        PyObject *tmp_expression_value_121;
        PyObject *tmp_expression_value_122;
        PyObject *tmp_expression_value_123;
        PyObject *tmp_expression_value_124;
        PyObject *tmp_expression_value_125;
        PyObject *tmp_expression_value_126;
        PyObject *tmp_expression_value_127;
        PyObject *tmp_expression_value_128;
        PyObject *tmp_expression_value_129;
        PyObject *tmp_expression_value_130;
        PyObject *tmp_expression_value_131;
        PyObject *tmp_expression_value_132;
        PyObject *tmp_expression_value_133;
        PyObject *tmp_expression_value_134;
        PyObject *tmp_expression_value_135;
        PyObject *tmp_expression_value_136;
        PyObject *tmp_expression_value_137;
        PyObject *tmp_expression_value_138;
        PyObject *tmp_expression_value_139;
        PyObject *tmp_expression_value_140;
        PyObject *tmp_expression_value_141;
        PyObject *tmp_expression_value_142;
        PyObject *tmp_expression_value_143;
        PyObject *tmp_expression_value_144;
        PyObject *tmp_expression_value_145;
        PyObject *tmp_expression_value_146;
        PyObject *tmp_expression_value_147;
        PyObject *tmp_expression_value_148;
        PyObject *tmp_expression_value_149;
        PyObject *tmp_expression_value_150;
        PyObject *tmp_expression_value_151;
        PyObject *tmp_expression_value_152;
        PyObject *tmp_expression_value_153;
        PyObject *tmp_expression_value_154;
        PyObject *tmp_expression_value_155;
        PyObject *tmp_expression_value_156;
        PyObject *tmp_expression_value_157;
        PyObject *tmp_expression_value_158;
        PyObject *tmp_expression_value_159;
        PyObject *tmp_expression_value_160;
        PyObject *tmp_expression_value_161;
        PyObject *tmp_expression_value_162;
        PyObject *tmp_expression_value_163;
        PyObject *tmp_expression_value_164;
        PyObject *tmp_expression_value_165;
        PyObject *tmp_expression_value_166;
        PyObject *tmp_expression_value_167;
        PyObject *tmp_expression_value_168;
        PyObject *tmp_expression_value_169;
        PyObject *tmp_expression_value_170;
        PyObject *tmp_expression_value_171;
        PyObject *tmp_expression_value_172;
        PyObject *tmp_expression_value_173;
        PyObject *tmp_expression_value_174;
        PyObject *tmp_expression_value_175;
        PyObject *tmp_expression_value_176;
        PyObject *tmp_expression_value_177;
        PyObject *tmp_expression_value_178;
        PyObject *tmp_expression_value_179;
        PyObject *tmp_expression_value_180;
        PyObject *tmp_expression_value_181;
        PyObject *tmp_expression_value_182;
        PyObject *tmp_expression_value_183;
        PyObject *tmp_expression_value_184;
        PyObject *tmp_expression_value_185;
        tmp_expression_value_2 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_2 == NULL)) {
            tmp_expression_value_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 67;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_2, mod_consts[2]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 67;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_return_value = PySet_New(NULL);
        assert(tmp_return_value);
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_set_element_1);
            Py_DECREF(tmp_return_value);

            exception_lineno = 67;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_3 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_3 == NULL)) {
            tmp_expression_value_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 68;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_3, mod_consts[3]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 68;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 68;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_4 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_4 == NULL)) {
            tmp_expression_value_4 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 69;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_4, mod_consts[4]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 69;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 69;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_5 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_5 == NULL)) {
            tmp_expression_value_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 70;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_5, mod_consts[5]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 70;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 70;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_6 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_6 == NULL)) {
            tmp_expression_value_6 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 71;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_6, mod_consts[6]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 71;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 71;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_7 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_7 == NULL)) {
            tmp_expression_value_7 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 72;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_7, mod_consts[7]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 72;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 72;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_8 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_8 == NULL)) {
            tmp_expression_value_8 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 73;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_8, mod_consts[8]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 73;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 73;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_9 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_9 == NULL)) {
            tmp_expression_value_9 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 74;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_9, mod_consts[9]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 74;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 74;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_10 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_10 == NULL)) {
            tmp_expression_value_10 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 75;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_10, mod_consts[10]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 75;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 75;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_11 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_11 == NULL)) {
            tmp_expression_value_11 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 76;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_11, mod_consts[11]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 76;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 76;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_12 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_12 == NULL)) {
            tmp_expression_value_12 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 77;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_12, mod_consts[12]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 77;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 77;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_13 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_13 == NULL)) {
            tmp_expression_value_13 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 78;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_13, mod_consts[13]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 78;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 78;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_14 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_14 == NULL)) {
            tmp_expression_value_14 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 79;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_14, mod_consts[14]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 79;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 79;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_15 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_15 == NULL)) {
            tmp_expression_value_15 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 80;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_15, mod_consts[15]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 80;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 80;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_16 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_16 == NULL)) {
            tmp_expression_value_16 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 81;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_16, mod_consts[16]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 81;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 81;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_17 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_17 == NULL)) {
            tmp_expression_value_17 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 82;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_17, mod_consts[17]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 82;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 82;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_18 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_18 == NULL)) {
            tmp_expression_value_18 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 83;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_18, mod_consts[18]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 83;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 83;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_19 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_19 == NULL)) {
            tmp_expression_value_19 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 84;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_19, mod_consts[19]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 84;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 84;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_20 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_20 == NULL)) {
            tmp_expression_value_20 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 85;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_20, mod_consts[20]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 85;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 85;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_21 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_21 == NULL)) {
            tmp_expression_value_21 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 86;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_21, mod_consts[21]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 86;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 86;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_22 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_22 == NULL)) {
            tmp_expression_value_22 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 87;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_22, mod_consts[22]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 87;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 87;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_23 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_23 == NULL)) {
            tmp_expression_value_23 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 88;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_23, mod_consts[23]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 88;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 88;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_24 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_24 == NULL)) {
            tmp_expression_value_24 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 89;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_24, mod_consts[24]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 89;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 89;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_25 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_25 == NULL)) {
            tmp_expression_value_25 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_25, mod_consts[25]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 90;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_26 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_26 == NULL)) {
            tmp_expression_value_26 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 91;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_26, mod_consts[26]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 91;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 91;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_27 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_27 == NULL)) {
            tmp_expression_value_27 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_27 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 92;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_27, mod_consts[27]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 92;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 92;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_28 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_28 == NULL)) {
            tmp_expression_value_28 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 93;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_28, mod_consts[28]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 93;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 93;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_29 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_29 == NULL)) {
            tmp_expression_value_29 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 94;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_29, mod_consts[29]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 94;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 94;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_30 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_30 == NULL)) {
            tmp_expression_value_30 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 95;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_30, mod_consts[30]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 95;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 95;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_31 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_31 == NULL)) {
            tmp_expression_value_31 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 96;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_31, mod_consts[31]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 96;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 96;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_32 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_32 == NULL)) {
            tmp_expression_value_32 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 97;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_32, mod_consts[32]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 97;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 97;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_33 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_33 == NULL)) {
            tmp_expression_value_33 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_33 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 98;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_33, mod_consts[33]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 98;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 98;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_34 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_34 == NULL)) {
            tmp_expression_value_34 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_34 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 99;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_34, mod_consts[34]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 99;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 99;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_35 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_35 == NULL)) {
            tmp_expression_value_35 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_35 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 100;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_35, mod_consts[35]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 100;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 100;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_36 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_36 == NULL)) {
            tmp_expression_value_36 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_36 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 101;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_36, mod_consts[36]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 101;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 101;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_37 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_37 == NULL)) {
            tmp_expression_value_37 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_37 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 102;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_37, mod_consts[37]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 102;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 102;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_38 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_38 == NULL)) {
            tmp_expression_value_38 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_38 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 103;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_38, mod_consts[38]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 103;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 103;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_39 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_39 == NULL)) {
            tmp_expression_value_39 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_39 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 104;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_39, mod_consts[39]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 104;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 104;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_40 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_40 == NULL)) {
            tmp_expression_value_40 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_40 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 105;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_40, mod_consts[40]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 105;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 105;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_41 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_41 == NULL)) {
            tmp_expression_value_41 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_41 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 106;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_41, mod_consts[41]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 106;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 106;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_42 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_42 == NULL)) {
            tmp_expression_value_42 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_42 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 107;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_42, mod_consts[42]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 107;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 107;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_43 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_43 == NULL)) {
            tmp_expression_value_43 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_43 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 108;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_43, mod_consts[43]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 108;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 108;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_44 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_44 == NULL)) {
            tmp_expression_value_44 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_44 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 109;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_44, mod_consts[44]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 109;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 109;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_45 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_45 == NULL)) {
            tmp_expression_value_45 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_45 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 110;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_45, mod_consts[45]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 110;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 110;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_46 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_46 == NULL)) {
            tmp_expression_value_46 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_46 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 111;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_46, mod_consts[46]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 111;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 111;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_47 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_47 == NULL)) {
            tmp_expression_value_47 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_47 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 112;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_47, mod_consts[47]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 112;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 112;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_48 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_48 == NULL)) {
            tmp_expression_value_48 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_48 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 113;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_48, mod_consts[48]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 113;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 113;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_49 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_49 == NULL)) {
            tmp_expression_value_49 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_49 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 114;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_49, mod_consts[49]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 114;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 114;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_50 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_50 == NULL)) {
            tmp_expression_value_50 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_50 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 115;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_50, mod_consts[50]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 115;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 115;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_51 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_51 == NULL)) {
            tmp_expression_value_51 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_51 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 116;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_51, mod_consts[51]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 116;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 116;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_52 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_52 == NULL)) {
            tmp_expression_value_52 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_52 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 117;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_52, mod_consts[52]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 117;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 117;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_53 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_53 == NULL)) {
            tmp_expression_value_53 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_53 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 118;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_53, mod_consts[53]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 118;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 118;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_54 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_54 == NULL)) {
            tmp_expression_value_54 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_54 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 119;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_54, mod_consts[54]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 119;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 119;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_55 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_55 == NULL)) {
            tmp_expression_value_55 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_55 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 120;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_55, mod_consts[55]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 120;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 120;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_56 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_56 == NULL)) {
            tmp_expression_value_56 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_56 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 121;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_56, mod_consts[56]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 121;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 121;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_57 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_57 == NULL)) {
            tmp_expression_value_57 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_57 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 122;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_57, mod_consts[57]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 122;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 122;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_58 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_58 == NULL)) {
            tmp_expression_value_58 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_58 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 123;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_58, mod_consts[58]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 123;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 123;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_59 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_59 == NULL)) {
            tmp_expression_value_59 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_59 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 124;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_59, mod_consts[59]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 124;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 124;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_60 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_60 == NULL)) {
            tmp_expression_value_60 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_60 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 125;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_60, mod_consts[60]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 125;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 125;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_61 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_61 == NULL)) {
            tmp_expression_value_61 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_61 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 126;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_61, mod_consts[61]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 126;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 126;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_62 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_62 == NULL)) {
            tmp_expression_value_62 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_62 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 127;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_62, mod_consts[62]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 127;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 127;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_63 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_63 == NULL)) {
            tmp_expression_value_63 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_63 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 128;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_63, mod_consts[63]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 128;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 128;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_64 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_64 == NULL)) {
            tmp_expression_value_64 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_64 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 129;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_64, mod_consts[64]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 129;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 129;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_65 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_65 == NULL)) {
            tmp_expression_value_65 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_65 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 130;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_65, mod_consts[65]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 130;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 130;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_66 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_66 == NULL)) {
            tmp_expression_value_66 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_66 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 131;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_66, mod_consts[66]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 131;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 131;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_67 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_67 == NULL)) {
            tmp_expression_value_67 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_67 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 132;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_67, mod_consts[67]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 132;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 132;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_68 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_68 == NULL)) {
            tmp_expression_value_68 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_68 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 133;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_68, mod_consts[68]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 133;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 133;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_69 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_69 == NULL)) {
            tmp_expression_value_69 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_69 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 134;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_69, mod_consts[69]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 134;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 134;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_70 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_70 == NULL)) {
            tmp_expression_value_70 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_70 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 135;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_70, mod_consts[70]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 135;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 135;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_71 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_71 == NULL)) {
            tmp_expression_value_71 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_71 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 136;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_71, mod_consts[71]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 136;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 136;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_72 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_72 == NULL)) {
            tmp_expression_value_72 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_72 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 137;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_72, mod_consts[72]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 137;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 137;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_73 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_73 == NULL)) {
            tmp_expression_value_73 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_73 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 138;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_73, mod_consts[73]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 138;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 138;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_75 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_75 == NULL)) {
            tmp_expression_value_75 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_75 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 139;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_74 = LOOKUP_ATTRIBUTE(tmp_expression_value_75, mod_consts[74]);
        if (tmp_expression_value_74 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 139;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_74, mod_consts[75]);
        Py_DECREF(tmp_expression_value_74);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 139;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 139;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_77 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_77 == NULL)) {
            tmp_expression_value_77 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_77 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 140;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_76 = LOOKUP_ATTRIBUTE(tmp_expression_value_77, mod_consts[74]);
        if (tmp_expression_value_76 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 140;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_76, mod_consts[76]);
        Py_DECREF(tmp_expression_value_76);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 140;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 140;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_78 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_78 == NULL)) {
            tmp_expression_value_78 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_78 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 141;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_78, mod_consts[77]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 141;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 141;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_79 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_79 == NULL)) {
            tmp_expression_value_79 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_79 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 142;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_79, mod_consts[78]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 142;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 142;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_80 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_80 == NULL)) {
            tmp_expression_value_80 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_80 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 143;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_80, mod_consts[79]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 143;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 143;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_81 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_81 == NULL)) {
            tmp_expression_value_81 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_81 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 144;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_81, mod_consts[80]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 144;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 144;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_82 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_82 == NULL)) {
            tmp_expression_value_82 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_82 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 145;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_82, mod_consts[81]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 145;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 145;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_83 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_83 == NULL)) {
            tmp_expression_value_83 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_83 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 146;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_83, mod_consts[82]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 146;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 146;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_84 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_84 == NULL)) {
            tmp_expression_value_84 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_84 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 147;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_84, mod_consts[83]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 147;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 147;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_85 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_85 == NULL)) {
            tmp_expression_value_85 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_85 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 148;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_85, mod_consts[84]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 148;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 148;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_86 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_86 == NULL)) {
            tmp_expression_value_86 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_86 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 149;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_86, mod_consts[85]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 149;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 149;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_87 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_87 == NULL)) {
            tmp_expression_value_87 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_87 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 150;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_87, mod_consts[86]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 150;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 150;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_88 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_88 == NULL)) {
            tmp_expression_value_88 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_88 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 151;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_88, mod_consts[87]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 151;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 151;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_89 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_89 == NULL)) {
            tmp_expression_value_89 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_89 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 152;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_89, mod_consts[88]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 152;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 152;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_90 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_90 == NULL)) {
            tmp_expression_value_90 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_90 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 153;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_90, mod_consts[89]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 153;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 153;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_91 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_91 == NULL)) {
            tmp_expression_value_91 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_91 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 154;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_91, mod_consts[90]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 154;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 154;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_92 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_92 == NULL)) {
            tmp_expression_value_92 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_92 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 155;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_92, mod_consts[91]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 155;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 155;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_93 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_93 == NULL)) {
            tmp_expression_value_93 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_93 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 156;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_93, mod_consts[92]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 156;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 156;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_94 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_94 == NULL)) {
            tmp_expression_value_94 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_94 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 157;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_94, mod_consts[93]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 157;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 157;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_95 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_95 == NULL)) {
            tmp_expression_value_95 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_95 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 158;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_95, mod_consts[94]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 158;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 158;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_96 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_96 == NULL)) {
            tmp_expression_value_96 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_96 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 159;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_96, mod_consts[95]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 159;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 159;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_97 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_97 == NULL)) {
            tmp_expression_value_97 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_97 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 160;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_97, mod_consts[96]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 160;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 160;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_98 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_98 == NULL)) {
            tmp_expression_value_98 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_98 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 161;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_98, mod_consts[97]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 161;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 161;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_99 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_99 == NULL)) {
            tmp_expression_value_99 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_99 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 162;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_99, mod_consts[98]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 162;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 162;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_100 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_100 == NULL)) {
            tmp_expression_value_100 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_100 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 163;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_100, mod_consts[99]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 163;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 163;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_101 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_101 == NULL)) {
            tmp_expression_value_101 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_101 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 164;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_101, mod_consts[100]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 164;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 164;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_102 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_102 == NULL)) {
            tmp_expression_value_102 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_102 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 165;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_102, mod_consts[101]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 165;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 165;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_103 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_103 == NULL)) {
            tmp_expression_value_103 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_103 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 166;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_103, mod_consts[102]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 166;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 166;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_104 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_104 == NULL)) {
            tmp_expression_value_104 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_104 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 167;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_104, mod_consts[103]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 167;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 167;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_105 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_105 == NULL)) {
            tmp_expression_value_105 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_105 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 168;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_105, mod_consts[104]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 168;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 168;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_106 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_106 == NULL)) {
            tmp_expression_value_106 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_106 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 169;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_106, mod_consts[105]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 169;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 169;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_108 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_108 == NULL)) {
            tmp_expression_value_108 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_108 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 170;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_107 = LOOKUP_ATTRIBUTE(tmp_expression_value_108, mod_consts[106]);
        if (tmp_expression_value_107 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 170;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_107, mod_consts[107]);
        Py_DECREF(tmp_expression_value_107);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 170;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 170;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_111 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_111 == NULL)) {
            tmp_expression_value_111 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_111 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 171;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_110 = LOOKUP_ATTRIBUTE(tmp_expression_value_111, mod_consts[108]);
        if (tmp_expression_value_110 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 171;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_109 = LOOKUP_ATTRIBUTE(tmp_expression_value_110, mod_consts[109]);
        Py_DECREF(tmp_expression_value_110);
        if (tmp_expression_value_109 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 171;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_109, mod_consts[110]);
        Py_DECREF(tmp_expression_value_109);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 171;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 171;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_114 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_114 == NULL)) {
            tmp_expression_value_114 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_114 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 172;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_113 = LOOKUP_ATTRIBUTE(tmp_expression_value_114, mod_consts[108]);
        if (tmp_expression_value_113 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 172;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_112 = LOOKUP_ATTRIBUTE(tmp_expression_value_113, mod_consts[109]);
        Py_DECREF(tmp_expression_value_113);
        if (tmp_expression_value_112 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 172;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_112, mod_consts[111]);
        Py_DECREF(tmp_expression_value_112);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 172;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 172;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_117 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_117 == NULL)) {
            tmp_expression_value_117 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_117 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 173;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_116 = LOOKUP_ATTRIBUTE(tmp_expression_value_117, mod_consts[108]);
        if (tmp_expression_value_116 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 173;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_115 = LOOKUP_ATTRIBUTE(tmp_expression_value_116, mod_consts[109]);
        Py_DECREF(tmp_expression_value_116);
        if (tmp_expression_value_115 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 173;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_115, mod_consts[112]);
        Py_DECREF(tmp_expression_value_115);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 173;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 173;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_120 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_120 == NULL)) {
            tmp_expression_value_120 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_120 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 174;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_119 = LOOKUP_ATTRIBUTE(tmp_expression_value_120, mod_consts[108]);
        if (tmp_expression_value_119 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 174;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_118 = LOOKUP_ATTRIBUTE(tmp_expression_value_119, mod_consts[109]);
        Py_DECREF(tmp_expression_value_119);
        if (tmp_expression_value_118 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 174;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_118, mod_consts[113]);
        Py_DECREF(tmp_expression_value_118);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 174;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 174;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_123 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_123 == NULL)) {
            tmp_expression_value_123 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_123 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 175;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_122 = LOOKUP_ATTRIBUTE(tmp_expression_value_123, mod_consts[108]);
        if (tmp_expression_value_122 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 175;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_121 = LOOKUP_ATTRIBUTE(tmp_expression_value_122, mod_consts[109]);
        Py_DECREF(tmp_expression_value_122);
        if (tmp_expression_value_121 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 175;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_121, mod_consts[114]);
        Py_DECREF(tmp_expression_value_121);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 175;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 175;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_126 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_126 == NULL)) {
            tmp_expression_value_126 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_126 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 176;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_125 = LOOKUP_ATTRIBUTE(tmp_expression_value_126, mod_consts[108]);
        if (tmp_expression_value_125 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 176;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_124 = LOOKUP_ATTRIBUTE(tmp_expression_value_125, mod_consts[109]);
        Py_DECREF(tmp_expression_value_125);
        if (tmp_expression_value_124 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 176;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_124, mod_consts[115]);
        Py_DECREF(tmp_expression_value_124);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 176;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 176;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_129 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_129 == NULL)) {
            tmp_expression_value_129 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_129 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 177;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_128 = LOOKUP_ATTRIBUTE(tmp_expression_value_129, mod_consts[108]);
        if (tmp_expression_value_128 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 177;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_127 = LOOKUP_ATTRIBUTE(tmp_expression_value_128, mod_consts[109]);
        Py_DECREF(tmp_expression_value_128);
        if (tmp_expression_value_127 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 177;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_127, mod_consts[116]);
        Py_DECREF(tmp_expression_value_127);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 177;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 177;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_132 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_132 == NULL)) {
            tmp_expression_value_132 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_132 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 178;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_131 = LOOKUP_ATTRIBUTE(tmp_expression_value_132, mod_consts[108]);
        if (tmp_expression_value_131 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 178;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_130 = LOOKUP_ATTRIBUTE(tmp_expression_value_131, mod_consts[109]);
        Py_DECREF(tmp_expression_value_131);
        if (tmp_expression_value_130 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 178;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_130, mod_consts[117]);
        Py_DECREF(tmp_expression_value_130);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 178;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 178;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_135 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_135 == NULL)) {
            tmp_expression_value_135 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_135 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 179;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_134 = LOOKUP_ATTRIBUTE(tmp_expression_value_135, mod_consts[108]);
        if (tmp_expression_value_134 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 179;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_133 = LOOKUP_ATTRIBUTE(tmp_expression_value_134, mod_consts[109]);
        Py_DECREF(tmp_expression_value_134);
        if (tmp_expression_value_133 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 179;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_133, mod_consts[118]);
        Py_DECREF(tmp_expression_value_133);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 179;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 179;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_138 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_138 == NULL)) {
            tmp_expression_value_138 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_138 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 180;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_137 = LOOKUP_ATTRIBUTE(tmp_expression_value_138, mod_consts[108]);
        if (tmp_expression_value_137 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 180;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_136 = LOOKUP_ATTRIBUTE(tmp_expression_value_137, mod_consts[109]);
        Py_DECREF(tmp_expression_value_137);
        if (tmp_expression_value_136 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 180;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_136, mod_consts[119]);
        Py_DECREF(tmp_expression_value_136);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 180;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 180;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_141 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_141 == NULL)) {
            tmp_expression_value_141 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_141 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 181;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_140 = LOOKUP_ATTRIBUTE(tmp_expression_value_141, mod_consts[108]);
        if (tmp_expression_value_140 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 181;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_139 = LOOKUP_ATTRIBUTE(tmp_expression_value_140, mod_consts[109]);
        Py_DECREF(tmp_expression_value_140);
        if (tmp_expression_value_139 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 181;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_139, mod_consts[120]);
        Py_DECREF(tmp_expression_value_139);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 181;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 181;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_set_element_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[114]);

        if (unlikely(tmp_set_element_1 == NULL)) {
            tmp_set_element_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[114]);
        }

        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 182;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 182;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[117]);

        if (unlikely(tmp_set_element_1 == NULL)) {
            tmp_set_element_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[117]);
        }

        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 183;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 183;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_142 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_142 == NULL)) {
            tmp_expression_value_142 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_142 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 184;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_142, mod_consts[121]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 184;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 184;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_143 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_143 == NULL)) {
            tmp_expression_value_143 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_143 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 185;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_143, mod_consts[122]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 185;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 185;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_144 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_144 == NULL)) {
            tmp_expression_value_144 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_144 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 186;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_144, mod_consts[123]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 186;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 186;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_145 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_145 == NULL)) {
            tmp_expression_value_145 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_145 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 187;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_145, mod_consts[124]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 187;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 187;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_146 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_146 == NULL)) {
            tmp_expression_value_146 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_146 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 188;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_146, mod_consts[125]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 188;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 188;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_149 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_149 == NULL)) {
            tmp_expression_value_149 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_149 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 189;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_148 = LOOKUP_ATTRIBUTE(tmp_expression_value_149, mod_consts[108]);
        if (tmp_expression_value_148 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 189;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_expression_value_147 = LOOKUP_ATTRIBUTE(tmp_expression_value_148, mod_consts[109]);
        Py_DECREF(tmp_expression_value_148);
        if (tmp_expression_value_147 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 189;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_147, mod_consts[126]);
        Py_DECREF(tmp_expression_value_147);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 189;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 189;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_150 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_150 == NULL)) {
            tmp_expression_value_150 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_150 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 190;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_150, mod_consts[127]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 190;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 190;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_151 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_151 == NULL)) {
            tmp_expression_value_151 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_151 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 191;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_151, mod_consts[128]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 191;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 191;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_152 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_152 == NULL)) {
            tmp_expression_value_152 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_152 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 192;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_152, mod_consts[129]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 192;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 192;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_153 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_153 == NULL)) {
            tmp_expression_value_153 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_153 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 193;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_153, mod_consts[130]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 193;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 193;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_154 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_154 == NULL)) {
            tmp_expression_value_154 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_154 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 194;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_154, mod_consts[131]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 194;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 194;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_155 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_155 == NULL)) {
            tmp_expression_value_155 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_155 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 195;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_155, mod_consts[132]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 195;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 195;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_156 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_156 == NULL)) {
            tmp_expression_value_156 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_156 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 196;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_156, mod_consts[133]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 196;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 196;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_157 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_157 == NULL)) {
            tmp_expression_value_157 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_157 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 197;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_157, mod_consts[134]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 197;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 197;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_158 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_158 == NULL)) {
            tmp_expression_value_158 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_158 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 198;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_158, mod_consts[135]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 198;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 198;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        tmp_expression_value_159 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_159 == NULL)) {
            tmp_expression_value_159 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_159 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 199;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_159, mod_consts[136]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 199;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 199;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_160 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_160, mod_consts[137]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 200;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 200;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_161 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_161, mod_consts[138]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 201;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 201;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_162 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_162, mod_consts[139]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 202;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 202;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_163 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_163, mod_consts[140]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 203;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 203;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_164 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_164, mod_consts[141]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 204;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 204;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_165 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_165, mod_consts[142]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 205;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 205;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_166 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_166, mod_consts[143]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 206;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 206;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_167 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_167, mod_consts[144]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 207;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 207;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_168 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_168, mod_consts[145]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 208;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 208;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_169 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_169, mod_consts[146]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 209;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 209;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_170 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE_CLASS_SLOT(tmp_expression_value_170);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 210;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 210;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_171 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_171, mod_consts[147]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 211;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 211;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_172 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_172, mod_consts[148]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 212;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 212;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_173 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_173, mod_consts[149]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 213;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 213;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_174 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_174, mod_consts[150]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 214;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 214;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_175 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_175, mod_consts[151]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 215;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 215;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_176 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_176, mod_consts[152]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 216;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 216;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_177 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_177, mod_consts[153]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 217;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 217;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_178 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_178, mod_consts[154]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 218;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 218;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_179 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_179, mod_consts[155]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 219;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 219;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_180 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_180, mod_consts[156]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 220;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 220;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_181 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_181, mod_consts[157]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 221;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 221;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_182 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_182, mod_consts[158]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 222;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 222;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_183 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_183, mod_consts[159]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 223;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 223;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_184 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_184, mod_consts[160]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 224;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 224;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        CHECK_OBJECT(var_Tensor);
        tmp_expression_value_185 = var_Tensor;
        tmp_set_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_185, mod_consts[161]);
        if (tmp_set_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);

            exception_lineno = 225;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySet_Add(tmp_return_value, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_return_value);
            Py_DECREF(tmp_set_element_1);

            exception_lineno = 225;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        Py_DECREF(tmp_set_element_1);
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_b1e8231baac4ff0fb8a1ee4db14e786e);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_b1e8231baac4ff0fb8a1ee4db14e786e);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_b1e8231baac4ff0fb8a1ee4db14e786e);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_b1e8231baac4ff0fb8a1ee4db14e786e, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_b1e8231baac4ff0fb8a1ee4db14e786e->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_b1e8231baac4ff0fb8a1ee4db14e786e, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_b1e8231baac4ff0fb8a1ee4db14e786e,
        type_description_1,
        var_Tensor
    );


    // Release cached frame if used for exception.
    if (frame_b1e8231baac4ff0fb8a1ee4db14e786e == cache_frame_b1e8231baac4ff0fb8a1ee4db14e786e) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_b1e8231baac4ff0fb8a1ee4db14e786e);
        cache_frame_b1e8231baac4ff0fb8a1ee4db14e786e = NULL;
    }

    assertFrameObject(frame_b1e8231baac4ff0fb8a1ee4db14e786e);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_Tensor);
    Py_DECREF(var_Tensor);
    var_Tensor = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_Tensor);
    var_Tensor = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.


   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_torch$overrides$$$function__2_get_testing_overrides(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *var_ret = NULL;
    PyObject *var_Tensor = NULL;
    PyObject *var_ret2 = NULL;
    PyObject *var_ignored = NULL;
    PyObject *var_k = NULL;
    PyObject *var_v = NULL;
    PyObject *var_names = NULL;
    PyObject *var_subname = NULL;
    PyObject *var_name = NULL;
    PyObject *var_func = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_tuple_unpack_1__element_1 = NULL;
    PyObject *tmp_tuple_unpack_1__element_2 = NULL;
    PyObject *tmp_tuple_unpack_1__source_iter = NULL;
    struct Nuitka_FrameObject *frame_7ff0ae4604184518803c0a295e81bf4d;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    PyObject *tmp_iterator_attempt;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    bool tmp_result;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    static struct Nuitka_FrameObject *cache_frame_7ff0ae4604184518803c0a295e81bf4d = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_7ff0ae4604184518803c0a295e81bf4d)) {
        Py_XDECREF(cache_frame_7ff0ae4604184518803c0a295e81bf4d);

#if _DEBUG_REFCOUNTS
        if (cache_frame_7ff0ae4604184518803c0a295e81bf4d == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_7ff0ae4604184518803c0a295e81bf4d = MAKE_FUNCTION_FRAME(codeobj_7ff0ae4604184518803c0a295e81bf4d, module_torch$overrides, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_7ff0ae4604184518803c0a295e81bf4d->m_type_description == NULL);
    frame_7ff0ae4604184518803c0a295e81bf4d = cache_frame_7ff0ae4604184518803c0a295e81bf4d;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_7ff0ae4604184518803c0a295e81bf4d);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_7ff0ae4604184518803c0a295e81bf4d) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_expression_value_1;
        tmp_expression_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_1 == NULL)) {
            tmp_expression_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 255;
            type_description_1 = "oooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[1]);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 255;
            type_description_1 = "oooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_Tensor == NULL);
        var_Tensor = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_expression_value_2;
        PyObject *tmp_defaults_1;
        tmp_expression_value_2 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_2 == NULL)) {
            tmp_expression_value_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;
            type_description_1 = "oooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_2, mod_consts[163]);
        if (tmp_dict_key_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 257;
            type_description_1 = "oooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_defaults_1 = mod_consts[164];
        Py_INCREF(tmp_defaults_1);


        tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__1_lambda(tmp_defaults_1);

        tmp_assign_source_2 = _PyDict_NewPresized( 759 );
        {
            PyObject *tmp_expression_value_3;
            PyObject *tmp_defaults_2;
            PyObject *tmp_expression_value_4;
            PyObject *tmp_expression_value_5;
            PyObject *tmp_expression_value_6;
            PyObject *tmp_defaults_3;
            PyObject *tmp_expression_value_7;
            PyObject *tmp_defaults_4;
            PyObject *tmp_expression_value_8;
            PyObject *tmp_defaults_5;
            PyObject *tmp_expression_value_9;
            PyObject *tmp_defaults_6;
            PyObject *tmp_expression_value_10;
            PyObject *tmp_defaults_7;
            PyObject *tmp_expression_value_11;
            PyObject *tmp_defaults_8;
            PyObject *tmp_expression_value_12;
            PyObject *tmp_defaults_9;
            PyObject *tmp_expression_value_13;
            PyObject *tmp_defaults_10;
            PyObject *tmp_expression_value_14;
            PyObject *tmp_defaults_11;
            PyObject *tmp_expression_value_15;
            PyObject *tmp_defaults_12;
            PyObject *tmp_expression_value_16;
            PyObject *tmp_defaults_13;
            PyObject *tmp_expression_value_17;
            PyObject *tmp_expression_value_18;
            PyObject *tmp_defaults_14;
            PyObject *tmp_expression_value_19;
            PyObject *tmp_defaults_15;
            PyObject *tmp_expression_value_20;
            PyObject *tmp_defaults_16;
            PyObject *tmp_expression_value_21;
            PyObject *tmp_defaults_17;
            PyObject *tmp_expression_value_22;
            PyObject *tmp_defaults_18;
            PyObject *tmp_expression_value_23;
            PyObject *tmp_defaults_19;
            PyObject *tmp_expression_value_24;
            PyObject *tmp_defaults_20;
            PyObject *tmp_expression_value_25;
            PyObject *tmp_expression_value_26;
            PyObject *tmp_expression_value_27;
            PyObject *tmp_defaults_21;
            PyObject *tmp_expression_value_28;
            PyObject *tmp_defaults_22;
            PyObject *tmp_expression_value_29;
            PyObject *tmp_expression_value_30;
            PyObject *tmp_defaults_23;
            PyObject *tmp_expression_value_31;
            PyObject *tmp_defaults_24;
            PyObject *tmp_expression_value_32;
            PyObject *tmp_defaults_25;
            PyObject *tmp_expression_value_33;
            PyObject *tmp_defaults_26;
            PyObject *tmp_expression_value_34;
            PyObject *tmp_defaults_27;
            PyObject *tmp_expression_value_35;
            PyObject *tmp_defaults_28;
            PyObject *tmp_expression_value_36;
            PyObject *tmp_defaults_29;
            PyObject *tmp_expression_value_37;
            PyObject *tmp_defaults_30;
            PyObject *tmp_expression_value_38;
            PyObject *tmp_expression_value_39;
            PyObject *tmp_expression_value_40;
            PyObject *tmp_expression_value_41;
            PyObject *tmp_defaults_31;
            PyObject *tmp_expression_value_42;
            PyObject *tmp_defaults_32;
            PyObject *tmp_expression_value_43;
            PyObject *tmp_expression_value_44;
            PyObject *tmp_expression_value_45;
            PyObject *tmp_expression_value_46;
            PyObject *tmp_expression_value_47;
            PyObject *tmp_expression_value_48;
            PyObject *tmp_expression_value_49;
            PyObject *tmp_expression_value_50;
            PyObject *tmp_expression_value_51;
            PyObject *tmp_defaults_33;
            PyObject *tmp_expression_value_52;
            PyObject *tmp_expression_value_53;
            PyObject *tmp_defaults_34;
            PyObject *tmp_expression_value_54;
            PyObject *tmp_defaults_35;
            PyObject *tmp_expression_value_55;
            PyObject *tmp_defaults_36;
            PyObject *tmp_expression_value_56;
            PyObject *tmp_defaults_37;
            PyObject *tmp_expression_value_57;
            PyObject *tmp_defaults_38;
            PyObject *tmp_expression_value_58;
            PyObject *tmp_defaults_39;
            PyObject *tmp_expression_value_59;
            PyObject *tmp_defaults_40;
            PyObject *tmp_expression_value_60;
            PyObject *tmp_expression_value_61;
            PyObject *tmp_defaults_41;
            PyObject *tmp_expression_value_62;
            PyObject *tmp_expression_value_63;
            PyObject *tmp_expression_value_64;
            PyObject *tmp_defaults_42;
            PyObject *tmp_expression_value_65;
            PyObject *tmp_expression_value_66;
            PyObject *tmp_defaults_43;
            PyObject *tmp_expression_value_67;
            PyObject *tmp_defaults_44;
            PyObject *tmp_expression_value_68;
            PyObject *tmp_defaults_45;
            PyObject *tmp_expression_value_69;
            PyObject *tmp_defaults_46;
            PyObject *tmp_expression_value_70;
            PyObject *tmp_kw_defaults_1;
            PyObject *tmp_expression_value_71;
            PyObject *tmp_expression_value_72;
            PyObject *tmp_defaults_47;
            PyObject *tmp_expression_value_73;
            PyObject *tmp_expression_value_74;
            PyObject *tmp_defaults_48;
            PyObject *tmp_expression_value_75;
            PyObject *tmp_expression_value_76;
            PyObject *tmp_defaults_49;
            PyObject *tmp_expression_value_77;
            PyObject *tmp_defaults_50;
            PyObject *tmp_expression_value_78;
            PyObject *tmp_defaults_51;
            PyObject *tmp_expression_value_79;
            PyObject *tmp_expression_value_80;
            PyObject *tmp_defaults_52;
            PyObject *tmp_expression_value_81;
            PyObject *tmp_defaults_53;
            PyObject *tmp_expression_value_82;
            PyObject *tmp_defaults_54;
            PyObject *tmp_expression_value_83;
            PyObject *tmp_defaults_55;
            PyObject *tmp_expression_value_84;
            PyObject *tmp_defaults_56;
            PyObject *tmp_expression_value_85;
            PyObject *tmp_defaults_57;
            PyObject *tmp_expression_value_86;
            PyObject *tmp_expression_value_87;
            PyObject *tmp_defaults_58;
            PyObject *tmp_expression_value_88;
            PyObject *tmp_expression_value_89;
            PyObject *tmp_defaults_59;
            PyObject *tmp_expression_value_90;
            PyObject *tmp_expression_value_91;
            PyObject *tmp_expression_value_92;
            PyObject *tmp_defaults_60;
            PyObject *tmp_expression_value_93;
            PyObject *tmp_defaults_61;
            PyObject *tmp_expression_value_94;
            PyObject *tmp_defaults_62;
            PyObject *tmp_expression_value_95;
            PyObject *tmp_defaults_63;
            PyObject *tmp_expression_value_96;
            PyObject *tmp_defaults_64;
            PyObject *tmp_expression_value_97;
            PyObject *tmp_defaults_65;
            PyObject *tmp_expression_value_98;
            PyObject *tmp_expression_value_99;
            PyObject *tmp_defaults_66;
            PyObject *tmp_expression_value_100;
            PyObject *tmp_defaults_67;
            PyObject *tmp_expression_value_101;
            PyObject *tmp_defaults_68;
            PyObject *tmp_expression_value_102;
            PyObject *tmp_defaults_69;
            PyObject *tmp_expression_value_103;
            PyObject *tmp_defaults_70;
            PyObject *tmp_expression_value_104;
            PyObject *tmp_defaults_71;
            PyObject *tmp_expression_value_105;
            PyObject *tmp_defaults_72;
            PyObject *tmp_expression_value_106;
            PyObject *tmp_defaults_73;
            PyObject *tmp_expression_value_107;
            PyObject *tmp_expression_value_108;
            PyObject *tmp_defaults_74;
            PyObject *tmp_expression_value_109;
            PyObject *tmp_defaults_75;
            PyObject *tmp_expression_value_110;
            PyObject *tmp_defaults_76;
            PyObject *tmp_expression_value_111;
            PyObject *tmp_defaults_77;
            PyObject *tmp_expression_value_112;
            PyObject *tmp_defaults_78;
            PyObject *tmp_expression_value_113;
            PyObject *tmp_defaults_79;
            PyObject *tmp_expression_value_114;
            PyObject *tmp_defaults_80;
            PyObject *tmp_expression_value_115;
            PyObject *tmp_defaults_81;
            PyObject *tmp_expression_value_116;
            PyObject *tmp_expression_value_117;
            PyObject *tmp_expression_value_118;
            PyObject *tmp_expression_value_119;
            PyObject *tmp_expression_value_120;
            PyObject *tmp_expression_value_121;
            PyObject *tmp_defaults_82;
            PyObject *tmp_expression_value_122;
            PyObject *tmp_defaults_83;
            PyObject *tmp_expression_value_123;
            PyObject *tmp_defaults_84;
            PyObject *tmp_expression_value_124;
            PyObject *tmp_defaults_85;
            PyObject *tmp_expression_value_125;
            PyObject *tmp_defaults_86;
            PyObject *tmp_expression_value_126;
            PyObject *tmp_defaults_87;
            PyObject *tmp_expression_value_127;
            PyObject *tmp_defaults_88;
            PyObject *tmp_expression_value_128;
            PyObject *tmp_defaults_89;
            PyObject *tmp_expression_value_129;
            PyObject *tmp_defaults_90;
            PyObject *tmp_expression_value_130;
            PyObject *tmp_defaults_91;
            PyObject *tmp_expression_value_131;
            PyObject *tmp_defaults_92;
            PyObject *tmp_expression_value_132;
            PyObject *tmp_expression_value_133;
            PyObject *tmp_expression_value_134;
            PyObject *tmp_expression_value_135;
            PyObject *tmp_defaults_93;
            PyObject *tmp_expression_value_136;
            PyObject *tmp_defaults_94;
            PyObject *tmp_expression_value_137;
            PyObject *tmp_expression_value_138;
            PyObject *tmp_defaults_95;
            PyObject *tmp_expression_value_139;
            PyObject *tmp_expression_value_140;
            PyObject *tmp_defaults_96;
            PyObject *tmp_expression_value_141;
            PyObject *tmp_expression_value_142;
            PyObject *tmp_defaults_97;
            PyObject *tmp_expression_value_143;
            PyObject *tmp_expression_value_144;
            PyObject *tmp_defaults_98;
            PyObject *tmp_expression_value_145;
            PyObject *tmp_expression_value_146;
            PyObject *tmp_defaults_99;
            PyObject *tmp_expression_value_147;
            PyObject *tmp_defaults_100;
            PyObject *tmp_expression_value_148;
            PyObject *tmp_defaults_101;
            PyObject *tmp_expression_value_149;
            PyObject *tmp_defaults_102;
            PyObject *tmp_expression_value_150;
            PyObject *tmp_expression_value_151;
            PyObject *tmp_defaults_103;
            PyObject *tmp_expression_value_152;
            PyObject *tmp_defaults_104;
            PyObject *tmp_expression_value_153;
            PyObject *tmp_defaults_105;
            PyObject *tmp_expression_value_154;
            PyObject *tmp_defaults_106;
            PyObject *tmp_expression_value_155;
            PyObject *tmp_defaults_107;
            PyObject *tmp_expression_value_156;
            PyObject *tmp_defaults_108;
            PyObject *tmp_expression_value_157;
            PyObject *tmp_expression_value_158;
            PyObject *tmp_expression_value_159;
            PyObject *tmp_expression_value_160;
            PyObject *tmp_expression_value_161;
            PyObject *tmp_expression_value_162;
            PyObject *tmp_expression_value_163;
            PyObject *tmp_expression_value_164;
            PyObject *tmp_expression_value_165;
            PyObject *tmp_expression_value_166;
            PyObject *tmp_expression_value_167;
            PyObject *tmp_expression_value_168;
            PyObject *tmp_expression_value_169;
            PyObject *tmp_defaults_109;
            PyObject *tmp_expression_value_170;
            PyObject *tmp_expression_value_171;
            PyObject *tmp_defaults_110;
            PyObject *tmp_expression_value_172;
            PyObject *tmp_expression_value_173;
            PyObject *tmp_defaults_111;
            PyObject *tmp_expression_value_174;
            PyObject *tmp_expression_value_175;
            PyObject *tmp_defaults_112;
            PyObject *tmp_expression_value_176;
            PyObject *tmp_expression_value_177;
            PyObject *tmp_defaults_113;
            PyObject *tmp_expression_value_178;
            PyObject *tmp_expression_value_179;
            PyObject *tmp_defaults_114;
            PyObject *tmp_expression_value_180;
            PyObject *tmp_expression_value_181;
            PyObject *tmp_defaults_115;
            PyObject *tmp_expression_value_182;
            PyObject *tmp_expression_value_183;
            PyObject *tmp_defaults_116;
            PyObject *tmp_expression_value_184;
            PyObject *tmp_expression_value_185;
            PyObject *tmp_defaults_117;
            PyObject *tmp_expression_value_186;
            PyObject *tmp_expression_value_187;
            PyObject *tmp_defaults_118;
            PyObject *tmp_expression_value_188;
            PyObject *tmp_expression_value_189;
            PyObject *tmp_defaults_119;
            PyObject *tmp_expression_value_190;
            PyObject *tmp_expression_value_191;
            PyObject *tmp_defaults_120;
            PyObject *tmp_expression_value_192;
            PyObject *tmp_expression_value_193;
            PyObject *tmp_defaults_121;
            PyObject *tmp_expression_value_194;
            PyObject *tmp_expression_value_195;
            PyObject *tmp_defaults_122;
            PyObject *tmp_expression_value_196;
            PyObject *tmp_expression_value_197;
            PyObject *tmp_defaults_123;
            PyObject *tmp_expression_value_198;
            PyObject *tmp_expression_value_199;
            PyObject *tmp_defaults_124;
            PyObject *tmp_expression_value_200;
            PyObject *tmp_expression_value_201;
            PyObject *tmp_defaults_125;
            PyObject *tmp_expression_value_202;
            PyObject *tmp_defaults_126;
            PyObject *tmp_expression_value_203;
            PyObject *tmp_defaults_127;
            PyObject *tmp_expression_value_204;
            PyObject *tmp_expression_value_205;
            PyObject *tmp_expression_value_206;
            PyObject *tmp_expression_value_207;
            PyObject *tmp_defaults_128;
            PyObject *tmp_expression_value_208;
            PyObject *tmp_defaults_129;
            PyObject *tmp_expression_value_209;
            PyObject *tmp_expression_value_210;
            PyObject *tmp_defaults_130;
            PyObject *tmp_expression_value_211;
            PyObject *tmp_defaults_131;
            PyObject *tmp_expression_value_212;
            PyObject *tmp_defaults_132;
            PyObject *tmp_expression_value_213;
            PyObject *tmp_defaults_133;
            PyObject *tmp_expression_value_214;
            PyObject *tmp_defaults_134;
            PyObject *tmp_tuple_element_1;
            PyObject *tmp_expression_value_216;
            PyObject *tmp_defaults_135;
            PyObject *tmp_expression_value_217;
            PyObject *tmp_defaults_136;
            PyObject *tmp_expression_value_218;
            PyObject *tmp_defaults_137;
            PyObject *tmp_expression_value_219;
            PyObject *tmp_defaults_138;
            PyObject *tmp_expression_value_220;
            PyObject *tmp_defaults_139;
            PyObject *tmp_expression_value_221;
            PyObject *tmp_defaults_140;
            PyObject *tmp_expression_value_222;
            PyObject *tmp_defaults_141;
            PyObject *tmp_expression_value_223;
            PyObject *tmp_defaults_142;
            PyObject *tmp_expression_value_224;
            PyObject *tmp_defaults_143;
            PyObject *tmp_expression_value_225;
            PyObject *tmp_defaults_144;
            PyObject *tmp_expression_value_226;
            PyObject *tmp_defaults_145;
            PyObject *tmp_expression_value_227;
            PyObject *tmp_expression_value_228;
            PyObject *tmp_expression_value_229;
            PyObject *tmp_expression_value_230;
            PyObject *tmp_defaults_146;
            PyObject *tmp_expression_value_231;
            PyObject *tmp_expression_value_232;
            PyObject *tmp_defaults_147;
            PyObject *tmp_expression_value_233;
            PyObject *tmp_defaults_148;
            PyObject *tmp_expression_value_234;
            PyObject *tmp_defaults_149;
            PyObject *tmp_expression_value_235;
            PyObject *tmp_defaults_150;
            PyObject *tmp_expression_value_236;
            PyObject *tmp_defaults_151;
            PyObject *tmp_expression_value_237;
            PyObject *tmp_defaults_152;
            PyObject *tmp_expression_value_238;
            PyObject *tmp_defaults_153;
            PyObject *tmp_expression_value_239;
            PyObject *tmp_expression_value_240;
            PyObject *tmp_expression_value_241;
            PyObject *tmp_defaults_154;
            PyObject *tmp_expression_value_242;
            PyObject *tmp_expression_value_243;
            PyObject *tmp_defaults_155;
            PyObject *tmp_expression_value_244;
            PyObject *tmp_defaults_156;
            PyObject *tmp_expression_value_245;
            PyObject *tmp_defaults_157;
            PyObject *tmp_expression_value_246;
            PyObject *tmp_defaults_158;
            PyObject *tmp_expression_value_247;
            PyObject *tmp_defaults_159;
            PyObject *tmp_expression_value_248;
            PyObject *tmp_expression_value_249;
            PyObject *tmp_expression_value_250;
            PyObject *tmp_defaults_160;
            PyObject *tmp_expression_value_251;
            PyObject *tmp_defaults_161;
            PyObject *tmp_expression_value_252;
            PyObject *tmp_expression_value_253;
            PyObject *tmp_expression_value_254;
            PyObject *tmp_expression_value_255;
            PyObject *tmp_expression_value_256;
            PyObject *tmp_defaults_162;
            PyObject *tmp_expression_value_257;
            PyObject *tmp_defaults_163;
            PyObject *tmp_expression_value_258;
            PyObject *tmp_expression_value_259;
            PyObject *tmp_expression_value_260;
            PyObject *tmp_defaults_164;
            PyObject *tmp_expression_value_261;
            PyObject *tmp_expression_value_262;
            PyObject *tmp_defaults_165;
            PyObject *tmp_expression_value_263;
            PyObject *tmp_expression_value_264;
            PyObject *tmp_defaults_166;
            PyObject *tmp_expression_value_265;
            PyObject *tmp_expression_value_266;
            PyObject *tmp_expression_value_267;
            PyObject *tmp_expression_value_268;
            PyObject *tmp_expression_value_269;
            PyObject *tmp_expression_value_270;
            PyObject *tmp_expression_value_271;
            PyObject *tmp_defaults_167;
            PyObject *tmp_expression_value_272;
            PyObject *tmp_expression_value_273;
            PyObject *tmp_defaults_168;
            PyObject *tmp_expression_value_274;
            PyObject *tmp_defaults_169;
            PyObject *tmp_expression_value_275;
            PyObject *tmp_expression_value_276;
            PyObject *tmp_defaults_170;
            PyObject *tmp_expression_value_277;
            PyObject *tmp_defaults_171;
            PyObject *tmp_expression_value_278;
            PyObject *tmp_defaults_172;
            PyObject *tmp_expression_value_279;
            PyObject *tmp_defaults_173;
            PyObject *tmp_expression_value_280;
            PyObject *tmp_defaults_174;
            PyObject *tmp_expression_value_281;
            PyObject *tmp_defaults_175;
            PyObject *tmp_expression_value_282;
            PyObject *tmp_defaults_176;
            PyObject *tmp_expression_value_283;
            PyObject *tmp_defaults_177;
            PyObject *tmp_expression_value_284;
            PyObject *tmp_defaults_178;
            PyObject *tmp_expression_value_285;
            PyObject *tmp_defaults_179;
            PyObject *tmp_expression_value_286;
            PyObject *tmp_defaults_180;
            PyObject *tmp_expression_value_287;
            PyObject *tmp_defaults_181;
            PyObject *tmp_expression_value_288;
            PyObject *tmp_defaults_182;
            PyObject *tmp_expression_value_289;
            PyObject *tmp_defaults_183;
            PyObject *tmp_expression_value_290;
            PyObject *tmp_defaults_184;
            PyObject *tmp_expression_value_291;
            PyObject *tmp_defaults_185;
            PyObject *tmp_expression_value_292;
            PyObject *tmp_expression_value_293;
            PyObject *tmp_expression_value_294;
            PyObject *tmp_defaults_186;
            PyObject *tmp_expression_value_295;
            PyObject *tmp_defaults_187;
            PyObject *tmp_expression_value_296;
            PyObject *tmp_defaults_188;
            PyObject *tmp_expression_value_297;
            PyObject *tmp_defaults_189;
            PyObject *tmp_expression_value_298;
            PyObject *tmp_defaults_190;
            PyObject *tmp_expression_value_299;
            PyObject *tmp_defaults_191;
            PyObject *tmp_expression_value_300;
            PyObject *tmp_defaults_192;
            PyObject *tmp_expression_value_301;
            PyObject *tmp_expression_value_302;
            PyObject *tmp_defaults_193;
            PyObject *tmp_expression_value_303;
            PyObject *tmp_defaults_194;
            PyObject *tmp_expression_value_304;
            PyObject *tmp_defaults_195;
            PyObject *tmp_expression_value_305;
            PyObject *tmp_defaults_196;
            PyObject *tmp_expression_value_306;
            PyObject *tmp_defaults_197;
            PyObject *tmp_expression_value_307;
            PyObject *tmp_defaults_198;
            PyObject *tmp_expression_value_308;
            PyObject *tmp_defaults_199;
            PyObject *tmp_expression_value_309;
            PyObject *tmp_expression_value_310;
            PyObject *tmp_expression_value_311;
            PyObject *tmp_defaults_200;
            PyObject *tmp_expression_value_312;
            PyObject *tmp_defaults_201;
            PyObject *tmp_expression_value_313;
            PyObject *tmp_expression_value_314;
            PyObject *tmp_expression_value_315;
            PyObject *tmp_defaults_202;
            PyObject *tmp_expression_value_316;
            PyObject *tmp_defaults_203;
            PyObject *tmp_expression_value_317;
            PyObject *tmp_expression_value_318;
            PyObject *tmp_defaults_204;
            PyObject *tmp_expression_value_319;
            PyObject *tmp_expression_value_320;
            PyObject *tmp_defaults_205;
            PyObject *tmp_expression_value_321;
            PyObject *tmp_expression_value_322;
            PyObject *tmp_defaults_206;
            PyObject *tmp_expression_value_323;
            PyObject *tmp_defaults_207;
            PyObject *tmp_expression_value_324;
            PyObject *tmp_defaults_208;
            PyObject *tmp_expression_value_325;
            PyObject *tmp_defaults_209;
            PyObject *tmp_expression_value_326;
            PyObject *tmp_defaults_210;
            PyObject *tmp_expression_value_327;
            PyObject *tmp_defaults_211;
            PyObject *tmp_expression_value_328;
            PyObject *tmp_defaults_212;
            PyObject *tmp_expression_value_329;
            PyObject *tmp_defaults_213;
            PyObject *tmp_expression_value_330;
            PyObject *tmp_defaults_214;
            PyObject *tmp_expression_value_331;
            PyObject *tmp_defaults_215;
            PyObject *tmp_expression_value_332;
            PyObject *tmp_expression_value_333;
            PyObject *tmp_defaults_216;
            PyObject *tmp_expression_value_334;
            PyObject *tmp_defaults_217;
            PyObject *tmp_expression_value_335;
            PyObject *tmp_defaults_218;
            PyObject *tmp_expression_value_336;
            PyObject *tmp_expression_value_337;
            PyObject *tmp_expression_value_338;
            PyObject *tmp_expression_value_339;
            PyObject *tmp_expression_value_340;
            PyObject *tmp_expression_value_341;
            PyObject *tmp_defaults_219;
            PyObject *tmp_expression_value_342;
            PyObject *tmp_defaults_220;
            PyObject *tmp_expression_value_343;
            PyObject *tmp_expression_value_344;
            PyObject *tmp_expression_value_345;
            PyObject *tmp_defaults_221;
            PyObject *tmp_expression_value_346;
            PyObject *tmp_defaults_222;
            PyObject *tmp_expression_value_347;
            PyObject *tmp_defaults_223;
            PyObject *tmp_expression_value_348;
            PyObject *tmp_defaults_224;
            PyObject *tmp_expression_value_349;
            PyObject *tmp_defaults_225;
            PyObject *tmp_expression_value_350;
            PyObject *tmp_expression_value_351;
            PyObject *tmp_expression_value_352;
            PyObject *tmp_expression_value_353;
            PyObject *tmp_defaults_226;
            PyObject *tmp_expression_value_354;
            PyObject *tmp_expression_value_355;
            PyObject *tmp_defaults_227;
            PyObject *tmp_expression_value_356;
            PyObject *tmp_expression_value_357;
            PyObject *tmp_defaults_228;
            PyObject *tmp_expression_value_358;
            PyObject *tmp_defaults_229;
            PyObject *tmp_expression_value_359;
            PyObject *tmp_defaults_230;
            PyObject *tmp_expression_value_360;
            PyObject *tmp_defaults_231;
            PyObject *tmp_expression_value_361;
            PyObject *tmp_defaults_232;
            PyObject *tmp_expression_value_362;
            PyObject *tmp_defaults_233;
            PyObject *tmp_expression_value_363;
            PyObject *tmp_defaults_234;
            PyObject *tmp_expression_value_364;
            PyObject *tmp_defaults_235;
            PyObject *tmp_expression_value_365;
            PyObject *tmp_expression_value_366;
            PyObject *tmp_expression_value_367;
            PyObject *tmp_expression_value_368;
            PyObject *tmp_expression_value_369;
            PyObject *tmp_expression_value_370;
            PyObject *tmp_expression_value_371;
            PyObject *tmp_expression_value_372;
            PyObject *tmp_expression_value_373;
            PyObject *tmp_defaults_236;
            PyObject *tmp_expression_value_374;
            PyObject *tmp_expression_value_375;
            PyObject *tmp_expression_value_376;
            PyObject *tmp_defaults_237;
            PyObject *tmp_expression_value_377;
            PyObject *tmp_expression_value_378;
            PyObject *tmp_expression_value_379;
            PyObject *tmp_defaults_238;
            PyObject *tmp_expression_value_380;
            PyObject *tmp_expression_value_381;
            PyObject *tmp_expression_value_382;
            PyObject *tmp_defaults_239;
            PyObject *tmp_expression_value_383;
            PyObject *tmp_expression_value_384;
            PyObject *tmp_expression_value_385;
            PyObject *tmp_defaults_240;
            PyObject *tmp_expression_value_386;
            PyObject *tmp_expression_value_387;
            PyObject *tmp_expression_value_388;
            PyObject *tmp_defaults_241;
            PyObject *tmp_expression_value_389;
            PyObject *tmp_expression_value_390;
            PyObject *tmp_expression_value_391;
            PyObject *tmp_defaults_242;
            PyObject *tmp_expression_value_392;
            PyObject *tmp_expression_value_393;
            PyObject *tmp_expression_value_394;
            PyObject *tmp_defaults_243;
            PyObject *tmp_expression_value_395;
            PyObject *tmp_expression_value_396;
            PyObject *tmp_expression_value_397;
            PyObject *tmp_defaults_244;
            PyObject *tmp_expression_value_398;
            PyObject *tmp_expression_value_399;
            PyObject *tmp_expression_value_400;
            PyObject *tmp_defaults_245;
            PyObject *tmp_expression_value_401;
            PyObject *tmp_expression_value_402;
            PyObject *tmp_expression_value_403;
            PyObject *tmp_defaults_246;
            PyObject *tmp_expression_value_404;
            PyObject *tmp_expression_value_405;
            PyObject *tmp_expression_value_406;
            PyObject *tmp_defaults_247;
            PyObject *tmp_expression_value_407;
            PyObject *tmp_expression_value_408;
            PyObject *tmp_expression_value_409;
            PyObject *tmp_defaults_248;
            PyObject *tmp_expression_value_410;
            PyObject *tmp_expression_value_411;
            PyObject *tmp_expression_value_412;
            PyObject *tmp_defaults_249;
            PyObject *tmp_expression_value_413;
            PyObject *tmp_expression_value_414;
            PyObject *tmp_expression_value_415;
            PyObject *tmp_defaults_250;
            PyObject *tmp_expression_value_416;
            PyObject *tmp_expression_value_417;
            PyObject *tmp_expression_value_418;
            PyObject *tmp_defaults_251;
            PyObject *tmp_expression_value_419;
            PyObject *tmp_expression_value_420;
            PyObject *tmp_expression_value_421;
            PyObject *tmp_defaults_252;
            PyObject *tmp_expression_value_422;
            PyObject *tmp_expression_value_423;
            PyObject *tmp_expression_value_424;
            PyObject *tmp_defaults_253;
            PyObject *tmp_expression_value_425;
            PyObject *tmp_expression_value_426;
            PyObject *tmp_expression_value_427;
            PyObject *tmp_defaults_254;
            PyObject *tmp_expression_value_428;
            PyObject *tmp_expression_value_429;
            PyObject *tmp_expression_value_430;
            PyObject *tmp_defaults_255;
            PyObject *tmp_expression_value_431;
            PyObject *tmp_expression_value_432;
            PyObject *tmp_expression_value_433;
            PyObject *tmp_defaults_256;
            PyObject *tmp_expression_value_434;
            PyObject *tmp_expression_value_435;
            PyObject *tmp_expression_value_436;
            PyObject *tmp_defaults_257;
            PyObject *tmp_expression_value_437;
            PyObject *tmp_expression_value_438;
            PyObject *tmp_expression_value_439;
            PyObject *tmp_defaults_258;
            PyObject *tmp_expression_value_440;
            PyObject *tmp_expression_value_441;
            PyObject *tmp_expression_value_442;
            PyObject *tmp_defaults_259;
            PyObject *tmp_expression_value_443;
            PyObject *tmp_expression_value_444;
            PyObject *tmp_expression_value_445;
            PyObject *tmp_defaults_260;
            PyObject *tmp_expression_value_446;
            PyObject *tmp_expression_value_447;
            PyObject *tmp_expression_value_448;
            PyObject *tmp_defaults_261;
            PyObject *tmp_expression_value_449;
            PyObject *tmp_expression_value_450;
            PyObject *tmp_expression_value_451;
            PyObject *tmp_defaults_262;
            PyObject *tmp_expression_value_452;
            PyObject *tmp_expression_value_453;
            PyObject *tmp_expression_value_454;
            PyObject *tmp_defaults_263;
            PyObject *tmp_expression_value_455;
            PyObject *tmp_expression_value_456;
            PyObject *tmp_expression_value_457;
            PyObject *tmp_defaults_264;
            PyObject *tmp_expression_value_458;
            PyObject *tmp_expression_value_459;
            PyObject *tmp_expression_value_460;
            PyObject *tmp_defaults_265;
            PyObject *tmp_expression_value_461;
            PyObject *tmp_expression_value_462;
            PyObject *tmp_expression_value_463;
            PyObject *tmp_defaults_266;
            PyObject *tmp_expression_value_464;
            PyObject *tmp_expression_value_465;
            PyObject *tmp_expression_value_466;
            PyObject *tmp_expression_value_467;
            PyObject *tmp_expression_value_468;
            PyObject *tmp_expression_value_469;
            PyObject *tmp_defaults_267;
            PyObject *tmp_expression_value_470;
            PyObject *tmp_expression_value_471;
            PyObject *tmp_expression_value_472;
            PyObject *tmp_defaults_268;
            PyObject *tmp_expression_value_473;
            PyObject *tmp_expression_value_474;
            PyObject *tmp_expression_value_475;
            PyObject *tmp_defaults_269;
            PyObject *tmp_expression_value_476;
            PyObject *tmp_expression_value_477;
            PyObject *tmp_expression_value_478;
            PyObject *tmp_defaults_270;
            PyObject *tmp_expression_value_479;
            PyObject *tmp_expression_value_480;
            PyObject *tmp_expression_value_481;
            PyObject *tmp_defaults_271;
            PyObject *tmp_expression_value_482;
            PyObject *tmp_expression_value_483;
            PyObject *tmp_expression_value_484;
            PyObject *tmp_defaults_272;
            PyObject *tmp_expression_value_485;
            PyObject *tmp_expression_value_486;
            PyObject *tmp_expression_value_487;
            PyObject *tmp_defaults_273;
            PyObject *tmp_expression_value_488;
            PyObject *tmp_expression_value_489;
            PyObject *tmp_expression_value_490;
            PyObject *tmp_defaults_274;
            PyObject *tmp_expression_value_491;
            PyObject *tmp_expression_value_492;
            PyObject *tmp_expression_value_493;
            PyObject *tmp_defaults_275;
            PyObject *tmp_expression_value_494;
            PyObject *tmp_expression_value_495;
            PyObject *tmp_expression_value_496;
            PyObject *tmp_defaults_276;
            PyObject *tmp_expression_value_497;
            PyObject *tmp_expression_value_498;
            PyObject *tmp_expression_value_499;
            PyObject *tmp_defaults_277;
            PyObject *tmp_expression_value_500;
            PyObject *tmp_expression_value_501;
            PyObject *tmp_expression_value_502;
            PyObject *tmp_defaults_278;
            PyObject *tmp_expression_value_503;
            PyObject *tmp_expression_value_504;
            PyObject *tmp_expression_value_505;
            PyObject *tmp_defaults_279;
            PyObject *tmp_expression_value_506;
            PyObject *tmp_expression_value_507;
            PyObject *tmp_expression_value_508;
            PyObject *tmp_defaults_280;
            PyObject *tmp_expression_value_509;
            PyObject *tmp_expression_value_510;
            PyObject *tmp_expression_value_511;
            PyObject *tmp_defaults_281;
            PyObject *tmp_expression_value_512;
            PyObject *tmp_expression_value_513;
            PyObject *tmp_expression_value_514;
            PyObject *tmp_defaults_282;
            PyObject *tmp_expression_value_515;
            PyObject *tmp_expression_value_516;
            PyObject *tmp_expression_value_517;
            PyObject *tmp_expression_value_518;
            PyObject *tmp_expression_value_519;
            PyObject *tmp_expression_value_520;
            PyObject *tmp_defaults_283;
            PyObject *tmp_expression_value_521;
            PyObject *tmp_expression_value_522;
            PyObject *tmp_expression_value_523;
            PyObject *tmp_defaults_284;
            PyObject *tmp_expression_value_524;
            PyObject *tmp_expression_value_525;
            PyObject *tmp_expression_value_526;
            PyObject *tmp_defaults_285;
            PyObject *tmp_expression_value_527;
            PyObject *tmp_expression_value_528;
            PyObject *tmp_expression_value_529;
            PyObject *tmp_defaults_286;
            PyObject *tmp_expression_value_530;
            PyObject *tmp_expression_value_531;
            PyObject *tmp_expression_value_532;
            PyObject *tmp_defaults_287;
            PyObject *tmp_expression_value_533;
            PyObject *tmp_expression_value_534;
            PyObject *tmp_expression_value_535;
            PyObject *tmp_defaults_288;
            PyObject *tmp_expression_value_536;
            PyObject *tmp_expression_value_537;
            PyObject *tmp_expression_value_538;
            PyObject *tmp_defaults_289;
            PyObject *tmp_expression_value_539;
            PyObject *tmp_expression_value_540;
            PyObject *tmp_expression_value_541;
            PyObject *tmp_defaults_290;
            PyObject *tmp_expression_value_542;
            PyObject *tmp_expression_value_543;
            PyObject *tmp_expression_value_544;
            PyObject *tmp_defaults_291;
            PyObject *tmp_expression_value_545;
            PyObject *tmp_expression_value_546;
            PyObject *tmp_expression_value_547;
            PyObject *tmp_defaults_292;
            PyObject *tmp_expression_value_548;
            PyObject *tmp_expression_value_549;
            PyObject *tmp_expression_value_550;
            PyObject *tmp_defaults_293;
            PyObject *tmp_expression_value_551;
            PyObject *tmp_expression_value_552;
            PyObject *tmp_expression_value_553;
            PyObject *tmp_defaults_294;
            PyObject *tmp_expression_value_554;
            PyObject *tmp_expression_value_555;
            PyObject *tmp_expression_value_556;
            PyObject *tmp_defaults_295;
            PyObject *tmp_expression_value_557;
            PyObject *tmp_expression_value_558;
            PyObject *tmp_expression_value_559;
            PyObject *tmp_defaults_296;
            PyObject *tmp_expression_value_560;
            PyObject *tmp_expression_value_561;
            PyObject *tmp_expression_value_562;
            PyObject *tmp_defaults_297;
            PyObject *tmp_expression_value_563;
            PyObject *tmp_expression_value_564;
            PyObject *tmp_expression_value_565;
            PyObject *tmp_defaults_298;
            PyObject *tmp_expression_value_566;
            PyObject *tmp_expression_value_567;
            PyObject *tmp_expression_value_568;
            PyObject *tmp_defaults_299;
            PyObject *tmp_expression_value_569;
            PyObject *tmp_expression_value_570;
            PyObject *tmp_expression_value_571;
            PyObject *tmp_defaults_300;
            PyObject *tmp_expression_value_572;
            PyObject *tmp_expression_value_573;
            PyObject *tmp_expression_value_574;
            PyObject *tmp_defaults_301;
            PyObject *tmp_expression_value_575;
            PyObject *tmp_expression_value_576;
            PyObject *tmp_expression_value_577;
            PyObject *tmp_defaults_302;
            PyObject *tmp_expression_value_578;
            PyObject *tmp_expression_value_579;
            PyObject *tmp_expression_value_580;
            PyObject *tmp_defaults_303;
            PyObject *tmp_expression_value_581;
            PyObject *tmp_expression_value_582;
            PyObject *tmp_expression_value_583;
            PyObject *tmp_defaults_304;
            PyObject *tmp_expression_value_584;
            PyObject *tmp_expression_value_585;
            PyObject *tmp_expression_value_586;
            PyObject *tmp_defaults_305;
            PyObject *tmp_expression_value_587;
            PyObject *tmp_expression_value_588;
            PyObject *tmp_expression_value_589;
            PyObject *tmp_expression_value_590;
            PyObject *tmp_expression_value_591;
            PyObject *tmp_expression_value_592;
            PyObject *tmp_defaults_306;
            PyObject *tmp_expression_value_593;
            PyObject *tmp_expression_value_594;
            PyObject *tmp_expression_value_595;
            PyObject *tmp_defaults_307;
            PyObject *tmp_expression_value_596;
            PyObject *tmp_expression_value_597;
            PyObject *tmp_expression_value_598;
            PyObject *tmp_defaults_308;
            PyObject *tmp_expression_value_599;
            PyObject *tmp_expression_value_600;
            PyObject *tmp_expression_value_601;
            PyObject *tmp_defaults_309;
            PyObject *tmp_expression_value_602;
            PyObject *tmp_expression_value_603;
            PyObject *tmp_expression_value_604;
            PyObject *tmp_defaults_310;
            PyObject *tmp_expression_value_605;
            PyObject *tmp_expression_value_606;
            PyObject *tmp_expression_value_607;
            PyObject *tmp_defaults_311;
            PyObject *tmp_expression_value_608;
            PyObject *tmp_expression_value_609;
            PyObject *tmp_expression_value_610;
            PyObject *tmp_defaults_312;
            PyObject *tmp_expression_value_611;
            PyObject *tmp_expression_value_612;
            PyObject *tmp_expression_value_613;
            PyObject *tmp_defaults_313;
            PyObject *tmp_expression_value_614;
            PyObject *tmp_expression_value_615;
            PyObject *tmp_expression_value_616;
            PyObject *tmp_defaults_314;
            PyObject *tmp_expression_value_617;
            PyObject *tmp_expression_value_618;
            PyObject *tmp_expression_value_619;
            PyObject *tmp_defaults_315;
            PyObject *tmp_expression_value_620;
            PyObject *tmp_expression_value_621;
            PyObject *tmp_expression_value_622;
            PyObject *tmp_defaults_316;
            PyObject *tmp_expression_value_623;
            PyObject *tmp_expression_value_624;
            PyObject *tmp_expression_value_625;
            PyObject *tmp_defaults_317;
            PyObject *tmp_expression_value_626;
            PyObject *tmp_expression_value_627;
            PyObject *tmp_expression_value_628;
            PyObject *tmp_defaults_318;
            PyObject *tmp_expression_value_629;
            PyObject *tmp_expression_value_630;
            PyObject *tmp_expression_value_631;
            PyObject *tmp_expression_value_632;
            PyObject *tmp_expression_value_633;
            PyObject *tmp_expression_value_634;
            PyObject *tmp_expression_value_635;
            PyObject *tmp_expression_value_636;
            PyObject *tmp_expression_value_637;
            PyObject *tmp_defaults_319;
            PyObject *tmp_expression_value_638;
            PyObject *tmp_expression_value_639;
            PyObject *tmp_expression_value_640;
            PyObject *tmp_defaults_320;
            PyObject *tmp_expression_value_641;
            PyObject *tmp_expression_value_642;
            PyObject *tmp_expression_value_643;
            PyObject *tmp_kw_defaults_2;
            PyObject *tmp_expression_value_644;
            PyObject *tmp_expression_value_645;
            PyObject *tmp_expression_value_646;
            PyObject *tmp_defaults_321;
            PyObject *tmp_expression_value_647;
            PyObject *tmp_defaults_322;
            PyObject *tmp_expression_value_648;
            PyObject *tmp_defaults_323;
            PyObject *tmp_expression_value_649;
            PyObject *tmp_expression_value_650;
            PyObject *tmp_defaults_324;
            PyObject *tmp_expression_value_651;
            PyObject *tmp_expression_value_652;
            PyObject *tmp_defaults_325;
            PyObject *tmp_expression_value_653;
            PyObject *tmp_expression_value_654;
            PyObject *tmp_defaults_326;
            PyObject *tmp_expression_value_655;
            PyObject *tmp_defaults_327;
            PyObject *tmp_expression_value_656;
            PyObject *tmp_defaults_328;
            PyObject *tmp_expression_value_657;
            PyObject *tmp_expression_value_658;
            PyObject *tmp_expression_value_659;
            PyObject *tmp_defaults_329;
            PyObject *tmp_expression_value_660;
            PyObject *tmp_defaults_330;
            PyObject *tmp_expression_value_661;
            PyObject *tmp_expression_value_662;
            PyObject *tmp_defaults_331;
            PyObject *tmp_expression_value_663;
            PyObject *tmp_defaults_332;
            PyObject *tmp_expression_value_664;
            PyObject *tmp_defaults_333;
            PyObject *tmp_expression_value_665;
            PyObject *tmp_expression_value_666;
            PyObject *tmp_defaults_334;
            PyObject *tmp_expression_value_667;
            PyObject *tmp_expression_value_668;
            PyObject *tmp_expression_value_669;
            PyObject *tmp_defaults_335;
            PyObject *tmp_expression_value_670;
            PyObject *tmp_expression_value_671;
            PyObject *tmp_defaults_336;
            PyObject *tmp_expression_value_672;
            PyObject *tmp_defaults_337;
            PyObject *tmp_expression_value_673;
            PyObject *tmp_expression_value_674;
            PyObject *tmp_defaults_338;
            PyObject *tmp_expression_value_675;
            PyObject *tmp_defaults_339;
            PyObject *tmp_expression_value_676;
            PyObject *tmp_defaults_340;
            PyObject *tmp_expression_value_677;
            PyObject *tmp_defaults_341;
            PyObject *tmp_expression_value_678;
            PyObject *tmp_expression_value_679;
            PyObject *tmp_expression_value_680;
            PyObject *tmp_expression_value_681;
            PyObject *tmp_expression_value_682;
            PyObject *tmp_expression_value_683;
            PyObject *tmp_defaults_342;
            PyObject *tmp_expression_value_684;
            PyObject *tmp_expression_value_685;
            PyObject *tmp_defaults_343;
            PyObject *tmp_expression_value_686;
            PyObject *tmp_defaults_344;
            PyObject *tmp_expression_value_687;
            PyObject *tmp_defaults_345;
            PyObject *tmp_expression_value_688;
            PyObject *tmp_expression_value_689;
            PyObject *tmp_expression_value_690;
            PyObject *tmp_expression_value_691;
            PyObject *tmp_expression_value_692;
            PyObject *tmp_expression_value_693;
            PyObject *tmp_defaults_346;
            PyObject *tmp_expression_value_694;
            PyObject *tmp_defaults_347;
            PyObject *tmp_expression_value_695;
            PyObject *tmp_expression_value_696;
            PyObject *tmp_expression_value_697;
            PyObject *tmp_defaults_348;
            PyObject *tmp_expression_value_698;
            PyObject *tmp_defaults_349;
            PyObject *tmp_expression_value_699;
            PyObject *tmp_defaults_350;
            PyObject *tmp_tuple_element_2;
            PyObject *tmp_expression_value_701;
            PyObject *tmp_defaults_351;
            PyObject *tmp_expression_value_702;
            PyObject *tmp_expression_value_703;
            PyObject *tmp_defaults_352;
            PyObject *tmp_expression_value_704;
            PyObject *tmp_defaults_353;
            PyObject *tmp_expression_value_705;
            PyObject *tmp_expression_value_706;
            PyObject *tmp_expression_value_707;
            PyObject *tmp_defaults_354;
            PyObject *tmp_expression_value_708;
            PyObject *tmp_defaults_355;
            PyObject *tmp_expression_value_709;
            PyObject *tmp_defaults_356;
            PyObject *tmp_expression_value_710;
            PyObject *tmp_defaults_357;
            PyObject *tmp_expression_value_711;
            PyObject *tmp_defaults_358;
            PyObject *tmp_expression_value_712;
            PyObject *tmp_expression_value_713;
            PyObject *tmp_expression_value_714;
            PyObject *tmp_defaults_359;
            PyObject *tmp_expression_value_715;
            PyObject *tmp_expression_value_716;
            PyObject *tmp_defaults_360;
            PyObject *tmp_expression_value_717;
            PyObject *tmp_defaults_361;
            PyObject *tmp_expression_value_718;
            PyObject *tmp_defaults_362;
            PyObject *tmp_expression_value_719;
            PyObject *tmp_defaults_363;
            PyObject *tmp_expression_value_720;
            PyObject *tmp_defaults_364;
            PyObject *tmp_expression_value_721;
            PyObject *tmp_expression_value_722;
            PyObject *tmp_defaults_365;
            PyObject *tmp_expression_value_723;
            PyObject *tmp_defaults_366;
            PyObject *tmp_expression_value_724;
            PyObject *tmp_defaults_367;
            PyObject *tmp_expression_value_725;
            PyObject *tmp_defaults_368;
            PyObject *tmp_expression_value_726;
            PyObject *tmp_expression_value_727;
            PyObject *tmp_expression_value_728;
            PyObject *tmp_defaults_369;
            PyObject *tmp_expression_value_729;
            PyObject *tmp_defaults_370;
            PyObject *tmp_expression_value_730;
            PyObject *tmp_expression_value_731;
            PyObject *tmp_defaults_371;
            PyObject *tmp_expression_value_732;
            PyObject *tmp_defaults_372;
            PyObject *tmp_expression_value_733;
            PyObject *tmp_defaults_373;
            PyObject *tmp_expression_value_734;
            PyObject *tmp_defaults_374;
            PyObject *tmp_expression_value_735;
            PyObject *tmp_defaults_375;
            PyObject *tmp_expression_value_736;
            PyObject *tmp_defaults_376;
            PyObject *tmp_expression_value_737;
            PyObject *tmp_defaults_377;
            PyObject *tmp_expression_value_738;
            PyObject *tmp_defaults_378;
            PyObject *tmp_expression_value_739;
            PyObject *tmp_expression_value_740;
            PyObject *tmp_expression_value_741;
            PyObject *tmp_expression_value_742;
            PyObject *tmp_expression_value_743;
            PyObject *tmp_expression_value_744;
            PyObject *tmp_defaults_379;
            PyObject *tmp_expression_value_745;
            PyObject *tmp_defaults_380;
            PyObject *tmp_expression_value_746;
            PyObject *tmp_expression_value_747;
            PyObject *tmp_defaults_381;
            PyObject *tmp_expression_value_748;
            PyObject *tmp_defaults_382;
            PyObject *tmp_kw_defaults_3;
            PyObject *tmp_expression_value_749;
            PyObject *tmp_defaults_383;
            PyObject *tmp_expression_value_750;
            PyObject *tmp_defaults_384;
            PyObject *tmp_expression_value_751;
            PyObject *tmp_defaults_385;
            PyObject *tmp_expression_value_752;
            PyObject *tmp_defaults_386;
            PyObject *tmp_expression_value_753;
            PyObject *tmp_defaults_387;
            PyObject *tmp_expression_value_754;
            PyObject *tmp_defaults_388;
            PyObject *tmp_expression_value_755;
            PyObject *tmp_defaults_389;
            PyObject *tmp_expression_value_756;
            PyObject *tmp_defaults_390;
            PyObject *tmp_expression_value_757;
            PyObject *tmp_defaults_391;
            PyObject *tmp_expression_value_758;
            PyObject *tmp_defaults_392;
            PyObject *tmp_expression_value_759;
            PyObject *tmp_defaults_393;
            PyObject *tmp_expression_value_760;
            PyObject *tmp_defaults_394;
            PyObject *tmp_expression_value_761;
            PyObject *tmp_defaults_395;
            PyObject *tmp_expression_value_762;
            PyObject *tmp_defaults_396;
            PyObject *tmp_expression_value_763;
            PyObject *tmp_defaults_397;
            PyObject *tmp_expression_value_764;
            PyObject *tmp_defaults_398;
            PyObject *tmp_expression_value_765;
            PyObject *tmp_expression_value_766;
            PyObject *tmp_defaults_399;
            PyObject *tmp_expression_value_767;
            PyObject *tmp_expression_value_768;
            PyObject *tmp_defaults_400;
            PyObject *tmp_expression_value_769;
            PyObject *tmp_defaults_401;
            PyObject *tmp_expression_value_770;
            PyObject *tmp_expression_value_771;
            PyObject *tmp_expression_value_772;
            PyObject *tmp_expression_value_773;
            PyObject *tmp_expression_value_774;
            PyObject *tmp_expression_value_775;
            PyObject *tmp_expression_value_776;
            PyObject *tmp_expression_value_777;
            PyObject *tmp_expression_value_778;
            PyObject *tmp_expression_value_779;
            PyObject *tmp_expression_value_780;
            PyObject *tmp_expression_value_781;
            PyObject *tmp_expression_value_782;
            PyObject *tmp_expression_value_783;
            PyObject *tmp_expression_value_784;
            PyObject *tmp_expression_value_785;
            PyObject *tmp_expression_value_786;
            PyObject *tmp_expression_value_787;
            PyObject *tmp_expression_value_788;
            PyObject *tmp_expression_value_789;
            PyObject *tmp_expression_value_790;
            PyObject *tmp_expression_value_791;
            PyObject *tmp_expression_value_792;
            PyObject *tmp_expression_value_793;
            PyObject *tmp_defaults_402;
            PyObject *tmp_expression_value_794;
            PyObject *tmp_expression_value_795;
            PyObject *tmp_expression_value_796;
            PyObject *tmp_defaults_403;
            PyObject *tmp_expression_value_797;
            PyObject *tmp_defaults_404;
            PyObject *tmp_expression_value_798;
            PyObject *tmp_defaults_405;
            PyObject *tmp_expression_value_799;
            PyObject *tmp_expression_value_800;
            PyObject *tmp_defaults_406;
            PyObject *tmp_expression_value_801;
            PyObject *tmp_expression_value_802;
            PyObject *tmp_defaults_407;
            PyObject *tmp_expression_value_803;
            PyObject *tmp_defaults_408;
            PyObject *tmp_expression_value_804;
            PyObject *tmp_defaults_409;
            PyObject *tmp_expression_value_805;
            PyObject *tmp_defaults_410;
            PyObject *tmp_expression_value_806;
            PyObject *tmp_expression_value_807;
            PyObject *tmp_defaults_411;
            PyObject *tmp_expression_value_808;
            PyObject *tmp_expression_value_809;
            PyObject *tmp_expression_value_810;
            PyObject *tmp_defaults_412;
            PyObject *tmp_expression_value_811;
            PyObject *tmp_defaults_413;
            PyObject *tmp_expression_value_812;
            PyObject *tmp_defaults_414;
            PyObject *tmp_expression_value_813;
            PyObject *tmp_defaults_415;
            PyObject *tmp_expression_value_814;
            PyObject *tmp_defaults_416;
            PyObject *tmp_expression_value_815;
            PyObject *tmp_expression_value_816;
            PyObject *tmp_defaults_417;
            PyObject *tmp_expression_value_817;
            PyObject *tmp_defaults_418;
            PyObject *tmp_expression_value_818;
            PyObject *tmp_defaults_419;
            PyObject *tmp_expression_value_819;
            PyObject *tmp_defaults_420;
            PyObject *tmp_expression_value_820;
            PyObject *tmp_defaults_421;
            PyObject *tmp_expression_value_821;
            PyObject *tmp_defaults_422;
            PyObject *tmp_expression_value_822;
            PyObject *tmp_defaults_423;
            PyObject *tmp_expression_value_823;
            PyObject *tmp_defaults_424;
            PyObject *tmp_expression_value_824;
            PyObject *tmp_defaults_425;
            PyObject *tmp_expression_value_825;
            PyObject *tmp_defaults_426;
            PyObject *tmp_expression_value_826;
            PyObject *tmp_expression_value_827;
            PyObject *tmp_defaults_427;
            PyObject *tmp_expression_value_828;
            PyObject *tmp_defaults_428;
            PyObject *tmp_expression_value_829;
            PyObject *tmp_defaults_429;
            PyObject *tmp_expression_value_830;
            PyObject *tmp_expression_value_831;
            PyObject *tmp_expression_value_832;
            PyObject *tmp_expression_value_833;
            PyObject *tmp_expression_value_834;
            PyObject *tmp_expression_value_835;
            PyObject *tmp_expression_value_836;
            PyObject *tmp_expression_value_837;
            PyObject *tmp_expression_value_838;
            PyObject *tmp_expression_value_839;
            PyObject *tmp_expression_value_840;
            PyObject *tmp_expression_value_841;
            PyObject *tmp_expression_value_842;
            PyObject *tmp_expression_value_843;
            PyObject *tmp_expression_value_844;
            PyObject *tmp_expression_value_845;
            PyObject *tmp_expression_value_846;
            PyObject *tmp_expression_value_847;
            PyObject *tmp_expression_value_848;
            PyObject *tmp_expression_value_849;
            PyObject *tmp_expression_value_850;
            PyObject *tmp_expression_value_851;
            PyObject *tmp_expression_value_852;
            PyObject *tmp_expression_value_853;
            PyObject *tmp_expression_value_854;
            PyObject *tmp_expression_value_855;
            PyObject *tmp_expression_value_856;
            PyObject *tmp_expression_value_857;
            PyObject *tmp_expression_value_858;
            PyObject *tmp_expression_value_859;
            PyObject *tmp_expression_value_860;
            PyObject *tmp_expression_value_861;
            PyObject *tmp_expression_value_862;
            PyObject *tmp_expression_value_863;
            PyObject *tmp_expression_value_864;
            PyObject *tmp_expression_value_865;
            PyObject *tmp_expression_value_866;
            PyObject *tmp_expression_value_867;
            PyObject *tmp_expression_value_868;
            PyObject *tmp_expression_value_869;
            PyObject *tmp_expression_value_870;
            PyObject *tmp_expression_value_871;
            PyObject *tmp_expression_value_872;
            PyObject *tmp_expression_value_873;
            PyObject *tmp_expression_value_874;
            PyObject *tmp_expression_value_875;
            PyObject *tmp_expression_value_876;
            PyObject *tmp_expression_value_877;
            PyObject *tmp_expression_value_878;
            PyObject *tmp_expression_value_879;
            PyObject *tmp_expression_value_880;
            PyObject *tmp_expression_value_881;
            PyObject *tmp_expression_value_882;
            PyObject *tmp_expression_value_883;
            PyObject *tmp_expression_value_884;
            PyObject *tmp_expression_value_885;
            PyObject *tmp_expression_value_886;
            PyObject *tmp_expression_value_887;
            PyObject *tmp_expression_value_888;
            PyObject *tmp_expression_value_889;
            PyObject *tmp_expression_value_890;
            PyObject *tmp_expression_value_891;
            PyObject *tmp_expression_value_892;
            PyObject *tmp_expression_value_893;
            PyObject *tmp_expression_value_894;
            PyObject *tmp_expression_value_895;
            PyObject *tmp_expression_value_896;
            PyObject *tmp_expression_value_897;
            PyObject *tmp_expression_value_898;
            PyObject *tmp_expression_value_899;
            PyObject *tmp_expression_value_900;
            PyObject *tmp_expression_value_901;
            PyObject *tmp_expression_value_902;
            PyObject *tmp_expression_value_903;
            PyObject *tmp_expression_value_904;
            PyObject *tmp_expression_value_905;
            PyObject *tmp_expression_value_906;
            PyObject *tmp_expression_value_907;
            PyObject *tmp_expression_value_908;
            PyObject *tmp_expression_value_909;
            PyObject *tmp_expression_value_910;
            PyObject *tmp_expression_value_911;
            PyObject *tmp_expression_value_912;
            PyObject *tmp_expression_value_913;
            PyObject *tmp_expression_value_914;
            PyObject *tmp_expression_value_915;
            PyObject *tmp_expression_value_916;
            PyObject *tmp_expression_value_917;
            PyObject *tmp_expression_value_918;
            PyObject *tmp_expression_value_919;
            PyObject *tmp_expression_value_920;
            PyObject *tmp_expression_value_921;
            PyObject *tmp_expression_value_922;
            PyObject *tmp_expression_value_923;
            PyObject *tmp_expression_value_924;
            PyObject *tmp_expression_value_925;
            PyObject *tmp_expression_value_926;
            PyObject *tmp_expression_value_927;
            PyObject *tmp_expression_value_928;
            PyObject *tmp_expression_value_929;
            PyObject *tmp_defaults_430;
            PyObject *tmp_expression_value_930;
            PyObject *tmp_expression_value_931;
            PyObject *tmp_expression_value_932;
            PyObject *tmp_expression_value_933;
            PyObject *tmp_expression_value_934;
            PyObject *tmp_expression_value_935;
            PyObject *tmp_expression_value_936;
            PyObject *tmp_expression_value_937;
            PyObject *tmp_expression_value_938;
            PyObject *tmp_expression_value_939;
            PyObject *tmp_expression_value_940;
            PyObject *tmp_expression_value_941;
            PyObject *tmp_expression_value_942;
            PyObject *tmp_expression_value_943;
            PyObject *tmp_expression_value_944;
            PyObject *tmp_expression_value_945;
            PyObject *tmp_defaults_431;
            PyObject *tmp_expression_value_946;
            PyObject *tmp_defaults_432;
            PyObject *tmp_tuple_element_3;
            PyObject *tmp_expression_value_947;
            PyObject *tmp_expression_value_948;
            PyObject *tmp_defaults_433;
            PyObject *tmp_tuple_element_4;
            PyObject *tmp_expression_value_949;
            PyObject *tmp_expression_value_950;
            PyObject *tmp_defaults_434;
            PyObject *tmp_tuple_element_5;
            PyObject *tmp_expression_value_951;
            PyObject *tmp_expression_value_952;
            PyObject *tmp_defaults_435;
            PyObject *tmp_tuple_element_6;
            PyObject *tmp_expression_value_953;
            PyObject *tmp_expression_value_954;
            PyObject *tmp_defaults_436;
            PyObject *tmp_kw_defaults_4;
            PyObject *tmp_expression_value_955;
            PyObject *tmp_expression_value_956;
            PyObject *tmp_expression_value_957;
            PyObject *tmp_defaults_437;
            PyObject *tmp_tuple_element_7;
            PyObject *tmp_expression_value_958;
            PyObject *tmp_expression_value_959;
            PyObject *tmp_defaults_438;
            PyObject *tmp_expression_value_960;
            PyObject *tmp_defaults_439;
            PyObject *tmp_tuple_element_8;
            PyObject *tmp_expression_value_961;
            PyObject *tmp_expression_value_962;
            PyObject *tmp_defaults_440;
            PyObject *tmp_tuple_element_9;
            PyObject *tmp_expression_value_963;
            PyObject *tmp_expression_value_964;
            PyObject *tmp_defaults_441;
            PyObject *tmp_tuple_element_10;
            PyObject *tmp_expression_value_965;
            PyObject *tmp_expression_value_966;
            PyObject *tmp_expression_value_967;
            PyObject *tmp_expression_value_968;
            PyObject *tmp_expression_value_969;
            PyObject *tmp_defaults_442;
            PyObject *tmp_tuple_element_11;
            PyObject *tmp_expression_value_970;
            PyObject *tmp_expression_value_971;
            PyObject *tmp_defaults_443;
            PyObject *tmp_tuple_element_12;
            PyObject *tmp_expression_value_972;
            PyObject *tmp_expression_value_973;
            PyObject *tmp_expression_value_974;
            PyObject *tmp_expression_value_975;
            PyObject *tmp_expression_value_976;
            PyObject *tmp_defaults_444;
            PyObject *tmp_kw_defaults_5;
            PyObject *tmp_expression_value_977;
            PyObject *tmp_expression_value_978;
            PyObject *tmp_expression_value_979;
            PyObject *tmp_defaults_445;
            PyObject *tmp_tuple_element_13;
            PyObject *tmp_expression_value_980;
            PyObject *tmp_expression_value_981;
            PyObject *tmp_defaults_446;
            PyObject *tmp_tuple_element_14;
            PyObject *tmp_expression_value_982;
            PyObject *tmp_expression_value_983;
            PyObject *tmp_kw_defaults_6;
            PyObject *tmp_expression_value_984;
            PyObject *tmp_expression_value_985;
            PyObject *tmp_defaults_447;
            PyObject *tmp_tuple_element_15;
            PyObject *tmp_expression_value_986;
            PyObject *tmp_expression_value_987;
            PyObject *tmp_expression_value_988;
            PyObject *tmp_expression_value_989;
            PyObject *tmp_defaults_448;
            PyObject *tmp_tuple_element_16;
            PyObject *tmp_expression_value_990;
            PyObject *tmp_expression_value_991;
            PyObject *tmp_expression_value_992;
            PyObject *tmp_expression_value_993;
            PyObject *tmp_expression_value_994;
            PyObject *tmp_expression_value_995;
            PyObject *tmp_expression_value_996;
            PyObject *tmp_expression_value_997;
            PyObject *tmp_defaults_449;
            PyObject *tmp_kw_defaults_7;
            PyObject *tmp_expression_value_998;
            PyObject *tmp_expression_value_999;
            PyObject *tmp_defaults_450;
            PyObject *tmp_tuple_element_17;
            PyObject *tmp_expression_value_1000;
            PyObject *tmp_expression_value_1001;
            PyObject *tmp_expression_value_1002;
            PyObject *tmp_expression_value_1003;
            PyObject *tmp_expression_value_1004;
            PyObject *tmp_expression_value_1005;
            PyObject *tmp_expression_value_1006;
            PyObject *tmp_expression_value_1007;
            PyObject *tmp_expression_value_1008;
            PyObject *tmp_expression_value_1009;
            PyObject *tmp_expression_value_1010;
            PyObject *tmp_expression_value_1011;
            PyObject *tmp_defaults_451;
            PyObject *tmp_expression_value_1012;
            PyObject *tmp_expression_value_1013;
            PyObject *tmp_defaults_452;
            PyObject *tmp_kw_defaults_8;
            PyObject *tmp_expression_value_1014;
            PyObject *tmp_expression_value_1015;
            PyObject *tmp_expression_value_1016;
            PyObject *tmp_expression_value_1017;
            PyObject *tmp_expression_value_1018;
            PyObject *tmp_expression_value_1019;
            PyObject *tmp_defaults_453;
            PyObject *tmp_expression_value_1020;
            PyObject *tmp_expression_value_1021;
            PyObject *tmp_expression_value_1022;
            PyObject *tmp_expression_value_1023;
            PyObject *tmp_expression_value_1024;
            PyObject *tmp_expression_value_1025;
            PyObject *tmp_defaults_454;
            PyObject *tmp_expression_value_1026;
            PyObject *tmp_expression_value_1027;
            PyObject *tmp_defaults_455;
            PyObject *tmp_tuple_element_18;
            PyObject *tmp_expression_value_1028;
            PyObject *tmp_expression_value_1029;
            PyObject *tmp_expression_value_1030;
            PyObject *tmp_expression_value_1031;
            PyObject *tmp_expression_value_1032;
            PyObject *tmp_expression_value_1033;
            PyObject *tmp_expression_value_1034;
            PyObject *tmp_defaults_456;
            PyObject *tmp_expression_value_1035;
            PyObject *tmp_expression_value_1036;
            PyObject *tmp_expression_value_1037;
            PyObject *tmp_expression_value_1038;
            PyObject *tmp_expression_value_1039;
            PyObject *tmp_expression_value_1040;
            PyObject *tmp_defaults_457;
            PyObject *tmp_tuple_element_19;
            PyObject *tmp_expression_value_1042;
            PyObject *tmp_expression_value_1043;
            PyObject *tmp_expression_value_1044;
            PyObject *tmp_expression_value_1045;
            PyObject *tmp_expression_value_1046;
            PyObject *tmp_expression_value_1047;
            PyObject *tmp_expression_value_1048;
            PyObject *tmp_defaults_458;
            PyObject *tmp_expression_value_1049;
            PyObject *tmp_expression_value_1050;
            PyObject *tmp_expression_value_1051;
            PyObject *tmp_expression_value_1052;
            PyObject *tmp_expression_value_1053;
            PyObject *tmp_expression_value_1054;
            PyObject *tmp_defaults_459;
            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 257;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_3 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_3 == NULL)) {
                tmp_expression_value_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 258;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_3, mod_consts[168]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 258;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_2 = mod_consts[164];
            Py_INCREF(tmp_defaults_2);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__2_lambda(tmp_defaults_2);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 258;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_4 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_4 == NULL)) {
                tmp_expression_value_4 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 259;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_4, mod_consts[169]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 259;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__3_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 259;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_5 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_5 == NULL)) {
                tmp_expression_value_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 260;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_5, mod_consts[170]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 260;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__4_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 260;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_6 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_6 == NULL)) {
                tmp_expression_value_6 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 261;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_6, mod_consts[171]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 261;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_3 = mod_consts[164];
            Py_INCREF(tmp_defaults_3);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__5_lambda(tmp_defaults_3);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 261;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_7 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_7 == NULL)) {
                tmp_expression_value_7 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 262;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_7, mod_consts[172]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 262;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_4 = mod_consts[164];
            Py_INCREF(tmp_defaults_4);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__6_lambda(tmp_defaults_4);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 262;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_8 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_8 == NULL)) {
                tmp_expression_value_8 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 263;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_8, mod_consts[173]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 263;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_5 = mod_consts[164];
            Py_INCREF(tmp_defaults_5);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__7_lambda(tmp_defaults_5);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 263;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_9 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_9 == NULL)) {
                tmp_expression_value_9 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 264;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_9, mod_consts[174]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 264;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_6 = mod_consts[164];
            Py_INCREF(tmp_defaults_6);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__8_lambda(tmp_defaults_6);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 264;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_10 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_10 == NULL)) {
                tmp_expression_value_10 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 265;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_10, mod_consts[175]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 265;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_7 = mod_consts[164];
            Py_INCREF(tmp_defaults_7);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__9_lambda(tmp_defaults_7);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 265;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_11 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_11 == NULL)) {
                tmp_expression_value_11 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 266;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_11, mod_consts[176]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 266;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_8 = mod_consts[177];
            Py_INCREF(tmp_defaults_8);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__10_lambda(tmp_defaults_8);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 266;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_12 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_12 == NULL)) {
                tmp_expression_value_12 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 267;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_12, mod_consts[178]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 267;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_9 = mod_consts[179];
            Py_INCREF(tmp_defaults_9);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__11_lambda(tmp_defaults_9);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 267;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_13 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_13 == NULL)) {
                tmp_expression_value_13 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 268;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_13, mod_consts[180]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 268;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_10 = mod_consts[179];
            Py_INCREF(tmp_defaults_10);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__12_lambda(tmp_defaults_10);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 268;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_14 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_14 == NULL)) {
                tmp_expression_value_14 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 269;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_14, mod_consts[181]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 269;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_11 = mod_consts[177];
            Py_INCREF(tmp_defaults_11);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__13_lambda(tmp_defaults_11);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 269;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_15 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_15 == NULL)) {
                tmp_expression_value_15 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_15, mod_consts[182]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_12 = mod_consts[177];
            Py_INCREF(tmp_defaults_12);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__14_lambda(tmp_defaults_12);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 270;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_16 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_16 == NULL)) {
                tmp_expression_value_16 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_16, mod_consts[183]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_13 = mod_consts[177];
            Py_INCREF(tmp_defaults_13);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__15_lambda(tmp_defaults_13);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 271;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_17 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_17 == NULL)) {
                tmp_expression_value_17 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_17 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_17, mod_consts[184]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__16_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 272;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_18 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_18 == NULL)) {
                tmp_expression_value_18 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_18 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 273;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_18, mod_consts[185]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 273;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_14 = mod_consts[164];
            Py_INCREF(tmp_defaults_14);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__17_lambda(tmp_defaults_14);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 273;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_19 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_19 == NULL)) {
                tmp_expression_value_19 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_19 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_19, mod_consts[186]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_15 = mod_consts[187];
            Py_INCREF(tmp_defaults_15);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__18_lambda(tmp_defaults_15);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 274;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_20 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_20 == NULL)) {
                tmp_expression_value_20 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_20 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_20, mod_consts[188]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_16 = mod_consts[189];
            Py_INCREF(tmp_defaults_16);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__19_lambda(tmp_defaults_16);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 275;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_21 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_21 == NULL)) {
                tmp_expression_value_21 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_21 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_21, mod_consts[190]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_17 = mod_consts[164];
            Py_INCREF(tmp_defaults_17);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__20_lambda(tmp_defaults_17);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 276;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_22 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_22 == NULL)) {
                tmp_expression_value_22 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_22 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_22, mod_consts[191]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_18 = mod_consts[164];
            Py_INCREF(tmp_defaults_18);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__21_lambda(tmp_defaults_18);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 277;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_23 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_23 == NULL)) {
                tmp_expression_value_23 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_23 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_23, mod_consts[192]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_19 = mod_consts[164];
            Py_INCREF(tmp_defaults_19);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__22_lambda(tmp_defaults_19);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 278;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_24 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_24 == NULL)) {
                tmp_expression_value_24 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_24 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_24, mod_consts[193]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_20 = mod_consts[194];
            Py_INCREF(tmp_defaults_20);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__23_lambda(tmp_defaults_20);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 279;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_25 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_25 == NULL)) {
                tmp_expression_value_25 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_25 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_25, mod_consts[195]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__24_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 280;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_26 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_26 == NULL)) {
                tmp_expression_value_26 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_26 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 281;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_26, mod_consts[196]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 281;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__25_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 281;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_27 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_27 == NULL)) {
                tmp_expression_value_27 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_27 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 282;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_27, mod_consts[197]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 282;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_21 = mod_consts[164];
            Py_INCREF(tmp_defaults_21);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__26_lambda(tmp_defaults_21);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 282;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_28 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_28 == NULL)) {
                tmp_expression_value_28 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_28 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 283;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_28, mod_consts[198]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 283;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_22 = mod_consts[164];
            Py_INCREF(tmp_defaults_22);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__27_lambda(tmp_defaults_22);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 283;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_29 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_29 == NULL)) {
                tmp_expression_value_29 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_29 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 284;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_29, mod_consts[199]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 284;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__28_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 284;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_30 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_30 == NULL)) {
                tmp_expression_value_30 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_30 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 285;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_30, mod_consts[200]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 285;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_23 = mod_consts[164];
            Py_INCREF(tmp_defaults_23);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__29_lambda(tmp_defaults_23);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 285;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_31 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_31 == NULL)) {
                tmp_expression_value_31 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_31 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 286;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_31, mod_consts[201]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 286;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_24 = mod_consts[164];
            Py_INCREF(tmp_defaults_24);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__30_lambda(tmp_defaults_24);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 286;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_32 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_32 == NULL)) {
                tmp_expression_value_32 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_32 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 287;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_32, mod_consts[202]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 287;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_25 = mod_consts[164];
            Py_INCREF(tmp_defaults_25);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__31_lambda(tmp_defaults_25);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 287;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_33 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_33 == NULL)) {
                tmp_expression_value_33 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_33 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 288;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_33, mod_consts[203]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 288;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_26 = mod_consts[164];
            Py_INCREF(tmp_defaults_26);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__32_lambda(tmp_defaults_26);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 288;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_34 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_34 == NULL)) {
                tmp_expression_value_34 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_34 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_34, mod_consts[204]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_27 = mod_consts[164];
            Py_INCREF(tmp_defaults_27);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__33_lambda(tmp_defaults_27);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 289;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_35 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_35 == NULL)) {
                tmp_expression_value_35 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_35 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 290;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_35, mod_consts[205]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 290;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_28 = mod_consts[164];
            Py_INCREF(tmp_defaults_28);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__34_lambda(tmp_defaults_28);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 290;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_36 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_36 == NULL)) {
                tmp_expression_value_36 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_36 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 291;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_36, mod_consts[206]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 291;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_29 = mod_consts[164];
            Py_INCREF(tmp_defaults_29);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__35_lambda(tmp_defaults_29);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 291;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_37 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_37 == NULL)) {
                tmp_expression_value_37 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_37 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 292;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_37, mod_consts[207]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 292;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_30 = mod_consts[164];
            Py_INCREF(tmp_defaults_30);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__36_lambda(tmp_defaults_30);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 292;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_38 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_38 == NULL)) {
                tmp_expression_value_38 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_38 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 293;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_38, mod_consts[208]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 293;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__37_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 293;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_39 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_39 == NULL)) {
                tmp_expression_value_39 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_39 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_39, mod_consts[209]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__38_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 294;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_40 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_40 == NULL)) {
                tmp_expression_value_40 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_40 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_40, mod_consts[210]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__39_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 295;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_41 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_41 == NULL)) {
                tmp_expression_value_41 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_41 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 296;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_41, mod_consts[211]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 296;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_31 = mod_consts[212];
            Py_INCREF(tmp_defaults_31);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__40_lambda(tmp_defaults_31);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 296;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_42 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_42 == NULL)) {
                tmp_expression_value_42 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_42 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 297;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_42, mod_consts[213]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 297;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_32 = mod_consts[177];
            Py_INCREF(tmp_defaults_32);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__41_lambda(tmp_defaults_32);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 297;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_43 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_43 == NULL)) {
                tmp_expression_value_43 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_43 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 298;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_43, mod_consts[214]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 298;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__42_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 298;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_44 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_44 == NULL)) {
                tmp_expression_value_44 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_44 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_44, mod_consts[215]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__43_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 299;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_45 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_45 == NULL)) {
                tmp_expression_value_45 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_45 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_45, mod_consts[216]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__44_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 300;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_46 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_46 == NULL)) {
                tmp_expression_value_46 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_46 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_46, mod_consts[217]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__45_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 301;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_47 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_47 == NULL)) {
                tmp_expression_value_47 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_47 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_47, mod_consts[218]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__46_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 302;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_48 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_48 == NULL)) {
                tmp_expression_value_48 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_48 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_48, mod_consts[219]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__47_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 303;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_49 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_49 == NULL)) {
                tmp_expression_value_49 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_49 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_49, mod_consts[220]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__48_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 304;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_50 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_50 == NULL)) {
                tmp_expression_value_50 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_50 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_50, mod_consts[221]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__49_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 305;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_51 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_51 == NULL)) {
                tmp_expression_value_51 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_51 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_51, mod_consts[222]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_33 = mod_consts[223];
            Py_INCREF(tmp_defaults_33);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__50_lambda(tmp_defaults_33);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 306;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_52 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_52 == NULL)) {
                tmp_expression_value_52 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_52 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_52, mod_consts[224]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__51_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 307;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_53 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_53 == NULL)) {
                tmp_expression_value_53 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_53 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 308;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_53, mod_consts[225]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 308;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_34 = mod_consts[226];
            Py_INCREF(tmp_defaults_34);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__52_lambda(tmp_defaults_34);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 308;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_54 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_54 == NULL)) {
                tmp_expression_value_54 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_54 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 310;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_54, mod_consts[227]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 310;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_35 = mod_consts[228];
            Py_INCREF(tmp_defaults_35);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__53_lambda(tmp_defaults_35);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 310;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_55 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_55 == NULL)) {
                tmp_expression_value_55 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_55 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 311;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_55, mod_consts[229]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 311;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_36 = mod_consts[164];
            Py_INCREF(tmp_defaults_36);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__54_lambda(tmp_defaults_36);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 311;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_56 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_56 == NULL)) {
                tmp_expression_value_56 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_56 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 312;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_56, mod_consts[230]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 312;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_37 = mod_consts[164];
            Py_INCREF(tmp_defaults_37);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__55_lambda(tmp_defaults_37);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 312;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_57 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_57 == NULL)) {
                tmp_expression_value_57 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_57 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 313;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_57, mod_consts[231]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 313;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_38 = mod_consts[164];
            Py_INCREF(tmp_defaults_38);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__56_lambda(tmp_defaults_38);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 313;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_58 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_58 == NULL)) {
                tmp_expression_value_58 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_58 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 314;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_58, mod_consts[232]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 314;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_39 = mod_consts[164];
            Py_INCREF(tmp_defaults_39);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__57_lambda(tmp_defaults_39);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 314;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_59 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_59 == NULL)) {
                tmp_expression_value_59 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_59 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 315;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_59, mod_consts[233]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 315;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_40 = mod_consts[164];
            Py_INCREF(tmp_defaults_40);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__58_lambda(tmp_defaults_40);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 315;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_60 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_60 == NULL)) {
                tmp_expression_value_60 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_60 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 316;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_60, mod_consts[234]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 316;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__59_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 316;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_61 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_61 == NULL)) {
                tmp_expression_value_61 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_61 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 317;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_61, mod_consts[235]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 317;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_41 = mod_consts[164];
            Py_INCREF(tmp_defaults_41);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__60_lambda(tmp_defaults_41);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 317;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_62 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_62 == NULL)) {
                tmp_expression_value_62 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_62 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 318;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_62, mod_consts[236]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 318;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__61_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 318;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_63 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_63 == NULL)) {
                tmp_expression_value_63 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_63 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 319;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_63, mod_consts[237]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 319;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__62_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 319;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_64 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_64 == NULL)) {
                tmp_expression_value_64 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_64 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 320;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_64, mod_consts[238]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 320;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_42 = mod_consts[239];
            Py_INCREF(tmp_defaults_42);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__63_lambda(tmp_defaults_42);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 320;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_65 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_65 == NULL)) {
                tmp_expression_value_65 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_65 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_65, mod_consts[240]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__64_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 321;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_66 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_66 == NULL)) {
                tmp_expression_value_66 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_66 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_66, mod_consts[241]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_43 = mod_consts[242];
            Py_INCREF(tmp_defaults_43);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__65_lambda(tmp_defaults_43);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 322;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_67 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_67 == NULL)) {
                tmp_expression_value_67 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_67 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_67, mod_consts[243]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_44 = mod_consts[244];
            Py_INCREF(tmp_defaults_44);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__66_lambda(tmp_defaults_44);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 323;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_68 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_68 == NULL)) {
                tmp_expression_value_68 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_68 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_68, mod_consts[245]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_45 = mod_consts[164];
            Py_INCREF(tmp_defaults_45);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__67_lambda(tmp_defaults_45);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 324;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_69 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_69 == NULL)) {
                tmp_expression_value_69 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_69 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_69, mod_consts[246]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_46 = mod_consts[247];
            Py_INCREF(tmp_defaults_46);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__68_lambda(tmp_defaults_46);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 325;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_70 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_70 == NULL)) {
                tmp_expression_value_70 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_70 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_70, mod_consts[248]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_kw_defaults_1 = PyDict_Copy(mod_consts[249]);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__69_lambda(tmp_kw_defaults_1);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 326;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_71 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_71 == NULL)) {
                tmp_expression_value_71 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_71 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_71, mod_consts[250]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__70_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 327;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_72 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_72 == NULL)) {
                tmp_expression_value_72 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_72 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 328;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_72, mod_consts[251]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 328;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_47 = mod_consts[252];
            Py_INCREF(tmp_defaults_47);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__71_lambda(tmp_defaults_47);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 328;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_74 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_74 == NULL)) {
                tmp_expression_value_74 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_74 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_73 = LOOKUP_ATTRIBUTE(tmp_expression_value_74, mod_consts[253]);
            if (tmp_expression_value_73 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_73, mod_consts[251]);
            Py_DECREF(tmp_expression_value_73);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_48 = mod_consts[164];
            Py_INCREF(tmp_defaults_48);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__72_lambda(tmp_defaults_48);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 329;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_76 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_76 == NULL)) {
                tmp_expression_value_76 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_76 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_75 = LOOKUP_ATTRIBUTE(tmp_expression_value_76, mod_consts[253]);
            if (tmp_expression_value_75 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_75, mod_consts[254]);
            Py_DECREF(tmp_expression_value_75);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_49 = mod_consts[252];
            Py_INCREF(tmp_defaults_49);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__73_lambda(tmp_defaults_49);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 330;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_77 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_77 == NULL)) {
                tmp_expression_value_77 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_77 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_77, mod_consts[255]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_50 = mod_consts[252];
            Py_INCREF(tmp_defaults_50);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__74_lambda(tmp_defaults_50);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 331;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_78 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_78 == NULL)) {
                tmp_expression_value_78 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_78 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_78, mod_consts[256]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_51 = mod_consts[252];
            Py_INCREF(tmp_defaults_51);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__75_lambda(tmp_defaults_51);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 332;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_79 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_79 == NULL)) {
                tmp_expression_value_79 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_79 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 333;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_79, mod_consts[257]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 333;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__76_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 333;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_80 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_80 == NULL)) {
                tmp_expression_value_80 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_80 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_80, mod_consts[258]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_52 = mod_consts[259];
            Py_INCREF(tmp_defaults_52);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__77_lambda(tmp_defaults_52);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 334;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_81 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_81 == NULL)) {
                tmp_expression_value_81 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_81 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 335;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_81, mod_consts[260]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 335;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_53 = mod_consts[261];
            Py_INCREF(tmp_defaults_53);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__78_lambda(tmp_defaults_53);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 335;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_82 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_82 == NULL)) {
                tmp_expression_value_82 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_82 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 336;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_82, mod_consts[262]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 336;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_54 = mod_consts[261];
            Py_INCREF(tmp_defaults_54);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__79_lambda(tmp_defaults_54);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 336;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_83 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_83 == NULL)) {
                tmp_expression_value_83 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_83 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 337;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_83, mod_consts[263]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 337;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_55 = mod_consts[164];
            Py_INCREF(tmp_defaults_55);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__80_lambda(tmp_defaults_55);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 337;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_84 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_84 == NULL)) {
                tmp_expression_value_84 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_84 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_84, mod_consts[264]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_56 = mod_consts[164];
            Py_INCREF(tmp_defaults_56);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__81_lambda(tmp_defaults_56);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 338;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_85 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_85 == NULL)) {
                tmp_expression_value_85 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_85 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 339;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_85, mod_consts[265]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 339;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_57 = mod_consts[164];
            Py_INCREF(tmp_defaults_57);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__82_lambda(tmp_defaults_57);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 339;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_86 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_86 == NULL)) {
                tmp_expression_value_86 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_86 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 340;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_86, mod_consts[266]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 340;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__83_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 340;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_87 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_87 == NULL)) {
                tmp_expression_value_87 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_87 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 341;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_87, mod_consts[267]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 341;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_58 = mod_consts[268];
            Py_INCREF(tmp_defaults_58);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__84_lambda(tmp_defaults_58);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 341;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_88 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_88 == NULL)) {
                tmp_expression_value_88 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_88 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 342;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_88, mod_consts[269]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 342;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__85_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 342;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_89 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_89 == NULL)) {
                tmp_expression_value_89 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_89 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 343;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_89, mod_consts[270]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 343;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_59 = mod_consts[164];
            Py_INCREF(tmp_defaults_59);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__86_lambda(tmp_defaults_59);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 343;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_90 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_90 == NULL)) {
                tmp_expression_value_90 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_90 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 344;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_90, mod_consts[271]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 344;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__87_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 344;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_92 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_92 == NULL)) {
                tmp_expression_value_92 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_92 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 345;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_91 = LOOKUP_ATTRIBUTE(tmp_expression_value_92, mod_consts[253]);
            if (tmp_expression_value_91 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 345;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_91, mod_consts[272]);
            Py_DECREF(tmp_expression_value_91);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 345;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_60 = mod_consts[164];
            Py_INCREF(tmp_defaults_60);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__88_lambda(tmp_defaults_60);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 345;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_93 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_93 == NULL)) {
                tmp_expression_value_93 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_93 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 346;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_93, mod_consts[273]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 346;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_61 = mod_consts[164];
            Py_INCREF(tmp_defaults_61);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__89_lambda(tmp_defaults_61);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 346;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_94 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_94 == NULL)) {
                tmp_expression_value_94 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_94 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 347;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_94, mod_consts[274]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 347;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_62 = mod_consts[259];
            Py_INCREF(tmp_defaults_62);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__90_lambda(tmp_defaults_62);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 347;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_95 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_95 == NULL)) {
                tmp_expression_value_95 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_95 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 348;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_95, mod_consts[275]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 348;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_63 = mod_consts[276];
            Py_INCREF(tmp_defaults_63);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__91_lambda(tmp_defaults_63);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 348;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_96 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_96 == NULL)) {
                tmp_expression_value_96 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_96 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 349;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_96, mod_consts[277]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 349;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_64 = mod_consts[276];
            Py_INCREF(tmp_defaults_64);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__92_lambda(tmp_defaults_64);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 349;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_97 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_97 == NULL)) {
                tmp_expression_value_97 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_97 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 350;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_97, mod_consts[278]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 350;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_65 = mod_consts[276];
            Py_INCREF(tmp_defaults_65);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__93_lambda(tmp_defaults_65);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 350;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_98 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_98 == NULL)) {
                tmp_expression_value_98 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_98 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 351;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_98, mod_consts[279]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 351;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__94_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 351;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_99 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_99 == NULL)) {
                tmp_expression_value_99 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_99 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_99, mod_consts[280]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_66 = mod_consts[259];
            Py_INCREF(tmp_defaults_66);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__95_lambda(tmp_defaults_66);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 352;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_100 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_100 == NULL)) {
                tmp_expression_value_100 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_100 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_100, mod_consts[281]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_67 = mod_consts[282];
            Py_INCREF(tmp_defaults_67);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__96_lambda(tmp_defaults_67);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 353;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_101 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_101 == NULL)) {
                tmp_expression_value_101 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_101 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 354;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_101, mod_consts[283]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 354;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_68 = mod_consts[282];
            Py_INCREF(tmp_defaults_68);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__97_lambda(tmp_defaults_68);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 354;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_102 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_102 == NULL)) {
                tmp_expression_value_102 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_102 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_102, mod_consts[284]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_69 = mod_consts[282];
            Py_INCREF(tmp_defaults_69);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__98_lambda(tmp_defaults_69);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 355;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_103 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_103 == NULL)) {
                tmp_expression_value_103 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_103 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_103, mod_consts[285]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_70 = mod_consts[164];
            Py_INCREF(tmp_defaults_70);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__99_lambda(tmp_defaults_70);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 356;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_104 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_104 == NULL)) {
                tmp_expression_value_104 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_104 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_104, mod_consts[286]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_71 = mod_consts[287];
            Py_INCREF(tmp_defaults_71);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__100_lambda(tmp_defaults_71);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 357;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_105 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_105 == NULL)) {
                tmp_expression_value_105 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_105 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 358;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_105, mod_consts[288]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 358;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_72 = mod_consts[164];
            Py_INCREF(tmp_defaults_72);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__101_lambda(tmp_defaults_72);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 358;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_106 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_106 == NULL)) {
                tmp_expression_value_106 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_106 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_106, mod_consts[289]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_73 = mod_consts[290];
            Py_INCREF(tmp_defaults_73);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__102_lambda(tmp_defaults_73);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 359;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_107 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_107 == NULL)) {
                tmp_expression_value_107 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_107 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_107, mod_consts[291]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__103_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 360;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_108 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_108 == NULL)) {
                tmp_expression_value_108 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_108 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_108, mod_consts[292]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_74 = mod_consts[293];
            Py_INCREF(tmp_defaults_74);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__104_lambda(tmp_defaults_74);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 361;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_109 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_109 == NULL)) {
                tmp_expression_value_109 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_109 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 362;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_109, mod_consts[294]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 362;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_75 = mod_consts[295];
            Py_INCREF(tmp_defaults_75);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__105_lambda(tmp_defaults_75);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 362;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_110 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_110 == NULL)) {
                tmp_expression_value_110 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_110 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_110, mod_consts[296]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_76 = mod_consts[164];
            Py_INCREF(tmp_defaults_76);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__106_lambda(tmp_defaults_76);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 364;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_111 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_111 == NULL)) {
                tmp_expression_value_111 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_111 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_111, mod_consts[297]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_77 = mod_consts[164];
            Py_INCREF(tmp_defaults_77);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__107_lambda(tmp_defaults_77);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 365;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_112 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_112 == NULL)) {
                tmp_expression_value_112 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_112 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_112, mod_consts[298]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_78 = mod_consts[223];
            Py_INCREF(tmp_defaults_78);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__108_lambda(tmp_defaults_78);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 366;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_113 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_113 == NULL)) {
                tmp_expression_value_113 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_113 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_113, mod_consts[299]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_79 = mod_consts[223];
            Py_INCREF(tmp_defaults_79);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__109_lambda(tmp_defaults_79);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 367;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_114 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_114 == NULL)) {
                tmp_expression_value_114 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_114 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 368;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_114, mod_consts[300]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 368;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_80 = mod_consts[164];
            Py_INCREF(tmp_defaults_80);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__110_lambda(tmp_defaults_80);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 368;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_115 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_115 == NULL)) {
                tmp_expression_value_115 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_115 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_115, mod_consts[301]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_81 = mod_consts[164];
            Py_INCREF(tmp_defaults_81);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__111_lambda(tmp_defaults_81);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 369;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_116 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_116 == NULL)) {
                tmp_expression_value_116 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_116 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 370;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_116, mod_consts[302]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 370;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__112_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 370;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_117 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_117 == NULL)) {
                tmp_expression_value_117 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_117 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 371;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_117, mod_consts[303]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 371;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__113_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 371;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_119 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_119 == NULL)) {
                tmp_expression_value_119 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_119 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 372;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_118 = LOOKUP_ATTRIBUTE(tmp_expression_value_119, mod_consts[253]);
            if (tmp_expression_value_118 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 372;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_118, mod_consts[303]);
            Py_DECREF(tmp_expression_value_118);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 372;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__114_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 372;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_120 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_120 == NULL)) {
                tmp_expression_value_120 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_120 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 373;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_120, mod_consts[304]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 373;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__115_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 373;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_121 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_121 == NULL)) {
                tmp_expression_value_121 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_121 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 374;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_121, mod_consts[305]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 374;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_82 = mod_consts[242];
            Py_INCREF(tmp_defaults_82);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__116_lambda(tmp_defaults_82);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 374;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_122 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_122 == NULL)) {
                tmp_expression_value_122 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_122 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 375;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_122, mod_consts[306]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 375;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_83 = mod_consts[242];
            Py_INCREF(tmp_defaults_83);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__117_lambda(tmp_defaults_83);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 375;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_123 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_123 == NULL)) {
                tmp_expression_value_123 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_123 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 376;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_123, mod_consts[307]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 376;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_84 = mod_consts[259];
            Py_INCREF(tmp_defaults_84);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__118_lambda(tmp_defaults_84);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 376;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_124 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_124 == NULL)) {
                tmp_expression_value_124 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_124 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 377;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_124, mod_consts[308]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 377;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_85 = mod_consts[309];
            Py_INCREF(tmp_defaults_85);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__119_lambda(tmp_defaults_85);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 377;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_125 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_125 == NULL)) {
                tmp_expression_value_125 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_125 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 378;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_125, mod_consts[310]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 378;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_86 = mod_consts[311];
            Py_INCREF(tmp_defaults_86);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__120_lambda(tmp_defaults_86);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 378;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_126 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_126 == NULL)) {
                tmp_expression_value_126 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_126 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 379;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_126, mod_consts[312]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 379;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_87 = mod_consts[164];
            Py_INCREF(tmp_defaults_87);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__121_lambda(tmp_defaults_87);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 379;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_127 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_127 == NULL)) {
                tmp_expression_value_127 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_127 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 380;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_127, mod_consts[313]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 380;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_88 = mod_consts[314];
            Py_INCREF(tmp_defaults_88);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__122_lambda(tmp_defaults_88);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 380;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_128 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_128 == NULL)) {
                tmp_expression_value_128 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_128 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 381;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_128, mod_consts[315]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 381;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_89 = mod_consts[223];
            Py_INCREF(tmp_defaults_89);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__123_lambda(tmp_defaults_89);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 381;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_129 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_129 == NULL)) {
                tmp_expression_value_129 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_129 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 382;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_129, mod_consts[316]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 382;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_90 = mod_consts[223];
            Py_INCREF(tmp_defaults_90);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__124_lambda(tmp_defaults_90);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 382;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_130 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_130 == NULL)) {
                tmp_expression_value_130 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_130 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 383;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_130, mod_consts[317]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 383;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_91 = mod_consts[164];
            Py_INCREF(tmp_defaults_91);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__125_lambda(tmp_defaults_91);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 383;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_131 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_131 == NULL)) {
                tmp_expression_value_131 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_131 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 384;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_131, mod_consts[318]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 384;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_92 = mod_consts[189];
            Py_INCREF(tmp_defaults_92);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__126_lambda(tmp_defaults_92);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 384;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_132 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_132 == NULL)) {
                tmp_expression_value_132 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_132 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 385;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_132, mod_consts[319]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 385;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__127_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 385;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_133 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_133 == NULL)) {
                tmp_expression_value_133 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_133 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 386;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_133, mod_consts[320]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 386;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__128_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 386;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_134 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_134 == NULL)) {
                tmp_expression_value_134 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_134 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_134, mod_consts[321]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__129_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 387;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_135 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_135 == NULL)) {
                tmp_expression_value_135 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_135 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 388;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_135, mod_consts[322]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 388;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_93 = mod_consts[164];
            Py_INCREF(tmp_defaults_93);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__130_lambda(tmp_defaults_93);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 388;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_136 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_136 == NULL)) {
                tmp_expression_value_136 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_136 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 389;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_136, mod_consts[323]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 389;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_94 = mod_consts[252];
            Py_INCREF(tmp_defaults_94);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__131_lambda(tmp_defaults_94);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 389;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_138 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_138 == NULL)) {
                tmp_expression_value_138 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_138 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 390;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_137 = LOOKUP_ATTRIBUTE(tmp_expression_value_138, mod_consts[253]);
            if (tmp_expression_value_137 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 390;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_137, mod_consts[323]);
            Py_DECREF(tmp_expression_value_137);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 390;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_95 = mod_consts[164];
            Py_INCREF(tmp_defaults_95);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__132_lambda(tmp_defaults_95);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 390;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_140 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_140 == NULL)) {
                tmp_expression_value_140 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_140 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 391;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_139 = LOOKUP_ATTRIBUTE(tmp_expression_value_140, mod_consts[253]);
            if (tmp_expression_value_139 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 391;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_139, mod_consts[324]);
            Py_DECREF(tmp_expression_value_139);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 391;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_96 = mod_consts[164];
            Py_INCREF(tmp_defaults_96);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__133_lambda(tmp_defaults_96);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 391;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_142 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_142 == NULL)) {
                tmp_expression_value_142 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_142 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_141 = LOOKUP_ATTRIBUTE(tmp_expression_value_142, mod_consts[253]);
            if (tmp_expression_value_141 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_141, mod_consts[325]);
            Py_DECREF(tmp_expression_value_141);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_97 = mod_consts[326];
            Py_INCREF(tmp_defaults_97);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__134_lambda(tmp_defaults_97);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 392;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_144 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_144 == NULL)) {
                tmp_expression_value_144 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_144 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_143 = LOOKUP_ATTRIBUTE(tmp_expression_value_144, mod_consts[253]);
            if (tmp_expression_value_143 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_143, mod_consts[327]);
            Py_DECREF(tmp_expression_value_143);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_98 = mod_consts[326];
            Py_INCREF(tmp_defaults_98);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__135_lambda(tmp_defaults_98);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 393;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_145 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_145 == NULL)) {
                tmp_expression_value_145 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_145 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_145, mod_consts[328]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__136_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 394;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_146 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_146 == NULL)) {
                tmp_expression_value_146 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_146 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_146, mod_consts[329]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_99 = mod_consts[330];
            Py_INCREF(tmp_defaults_99);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__137_lambda(tmp_defaults_99);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 395;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_147 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_147 == NULL)) {
                tmp_expression_value_147 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_147 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_147, mod_consts[331]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_100 = mod_consts[332];
            Py_INCREF(tmp_defaults_100);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__138_lambda(tmp_defaults_100);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 397;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_148 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_148 == NULL)) {
                tmp_expression_value_148 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_148 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 399;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_148, mod_consts[333]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 399;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_101 = mod_consts[334];
            Py_INCREF(tmp_defaults_101);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__139_lambda(tmp_defaults_101);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 399;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_149 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_149 == NULL)) {
                tmp_expression_value_149 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_149 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_149, mod_consts[335]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_102 = mod_consts[164];
            Py_INCREF(tmp_defaults_102);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__140_lambda(tmp_defaults_102);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 400;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_150 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_150 == NULL)) {
                tmp_expression_value_150 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_150 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_150, mod_consts[336]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__141_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 401;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_151 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_151 == NULL)) {
                tmp_expression_value_151 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_151 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_151, mod_consts[337]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_103 = mod_consts[164];
            Py_INCREF(tmp_defaults_103);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__142_lambda(tmp_defaults_103);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 402;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_152 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_152 == NULL)) {
                tmp_expression_value_152 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_152 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_152, mod_consts[338]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_104 = mod_consts[164];
            Py_INCREF(tmp_defaults_104);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__143_lambda(tmp_defaults_104);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 403;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_153 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_153 == NULL)) {
                tmp_expression_value_153 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_153 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 404;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_153, mod_consts[339]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 404;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_105 = mod_consts[164];
            Py_INCREF(tmp_defaults_105);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__144_lambda(tmp_defaults_105);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 404;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_154 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_154 == NULL)) {
                tmp_expression_value_154 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_154 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_154, mod_consts[340]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_106 = mod_consts[164];
            Py_INCREF(tmp_defaults_106);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__145_lambda(tmp_defaults_106);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 405;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_155 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_155 == NULL)) {
                tmp_expression_value_155 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_155 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 406;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_155, mod_consts[341]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 406;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_107 = mod_consts[164];
            Py_INCREF(tmp_defaults_107);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__146_lambda(tmp_defaults_107);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 406;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_156 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_156 == NULL)) {
                tmp_expression_value_156 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_156 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 407;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_156, mod_consts[342]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 407;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_108 = mod_consts[164];
            Py_INCREF(tmp_defaults_108);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__147_lambda(tmp_defaults_108);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 407;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_157 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_157 == NULL)) {
                tmp_expression_value_157 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_157 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 408;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_157, mod_consts[343]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 408;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__148_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 408;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_158 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_158 == NULL)) {
                tmp_expression_value_158 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_158 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 409;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_158, mod_consts[344]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 409;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__149_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 409;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_159 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_159 == NULL)) {
                tmp_expression_value_159 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_159 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 410;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_159, mod_consts[345]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 410;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__150_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 410;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_160 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_160 == NULL)) {
                tmp_expression_value_160 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_160 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 411;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_160, mod_consts[346]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 411;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__151_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 411;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_161 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_161 == NULL)) {
                tmp_expression_value_161 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_161 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 412;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_161, mod_consts[347]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 412;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__152_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 412;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_162 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_162 == NULL)) {
                tmp_expression_value_162 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_162 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 413;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_162, mod_consts[348]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 413;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__153_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 413;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_163 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_163 == NULL)) {
                tmp_expression_value_163 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_163 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 415;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_163, mod_consts[349]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 415;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__154_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 415;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_164 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_164 == NULL)) {
                tmp_expression_value_164 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_164 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 416;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_164, mod_consts[350]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 416;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__155_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 416;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_165 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_165 == NULL)) {
                tmp_expression_value_165 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_165 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 417;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_165, mod_consts[351]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 417;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__156_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 417;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_166 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_166 == NULL)) {
                tmp_expression_value_166 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_166 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 418;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_166, mod_consts[352]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 418;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__157_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 418;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_167 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_167 == NULL)) {
                tmp_expression_value_167 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_167 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_167, mod_consts[353]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__158_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 419;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_169 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_169 == NULL)) {
                tmp_expression_value_169 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_169 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 420;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_168 = LOOKUP_ATTRIBUTE(tmp_expression_value_169, mod_consts[74]);
            if (tmp_expression_value_168 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 420;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_168, mod_consts[74]);
            Py_DECREF(tmp_expression_value_168);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 420;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_109 = mod_consts[354];
            Py_INCREF(tmp_defaults_109);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__159_lambda(tmp_defaults_109);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 420;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_171 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_171 == NULL)) {
                tmp_expression_value_171 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_171 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_170 = LOOKUP_ATTRIBUTE(tmp_expression_value_171, mod_consts[74]);
            if (tmp_expression_value_170 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_170, mod_consts[355]);
            Py_DECREF(tmp_expression_value_170);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_110 = mod_consts[354];
            Py_INCREF(tmp_defaults_110);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__160_lambda(tmp_defaults_110);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 421;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_173 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_173 == NULL)) {
                tmp_expression_value_173 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_173 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 422;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_172 = LOOKUP_ATTRIBUTE(tmp_expression_value_173, mod_consts[74]);
            if (tmp_expression_value_172 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 422;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_172, mod_consts[356]);
            Py_DECREF(tmp_expression_value_172);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 422;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_111 = mod_consts[354];
            Py_INCREF(tmp_defaults_111);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__161_lambda(tmp_defaults_111);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 422;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_175 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_175 == NULL)) {
                tmp_expression_value_175 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_175 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 423;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_174 = LOOKUP_ATTRIBUTE(tmp_expression_value_175, mod_consts[74]);
            if (tmp_expression_value_174 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 423;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_174, mod_consts[357]);
            Py_DECREF(tmp_expression_value_174);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 423;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_112 = mod_consts[354];
            Py_INCREF(tmp_defaults_112);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__162_lambda(tmp_defaults_112);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 423;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_177 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_177 == NULL)) {
                tmp_expression_value_177 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_177 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 424;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_176 = LOOKUP_ATTRIBUTE(tmp_expression_value_177, mod_consts[74]);
            if (tmp_expression_value_176 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 424;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_176, mod_consts[358]);
            Py_DECREF(tmp_expression_value_176);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 424;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_113 = mod_consts[354];
            Py_INCREF(tmp_defaults_113);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__163_lambda(tmp_defaults_113);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 424;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_179 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_179 == NULL)) {
                tmp_expression_value_179 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_179 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 425;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_178 = LOOKUP_ATTRIBUTE(tmp_expression_value_179, mod_consts[74]);
            if (tmp_expression_value_178 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 425;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_178, mod_consts[359]);
            Py_DECREF(tmp_expression_value_178);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 425;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_114 = mod_consts[354];
            Py_INCREF(tmp_defaults_114);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__164_lambda(tmp_defaults_114);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 425;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_181 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_181 == NULL)) {
                tmp_expression_value_181 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_181 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_180 = LOOKUP_ATTRIBUTE(tmp_expression_value_181, mod_consts[74]);
            if (tmp_expression_value_180 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_180, mod_consts[360]);
            Py_DECREF(tmp_expression_value_180);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_115 = mod_consts[261];
            Py_INCREF(tmp_defaults_115);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__165_lambda(tmp_defaults_115);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 426;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_183 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_183 == NULL)) {
                tmp_expression_value_183 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_183 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 427;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_182 = LOOKUP_ATTRIBUTE(tmp_expression_value_183, mod_consts[74]);
            if (tmp_expression_value_182 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 427;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_182, mod_consts[361]);
            Py_DECREF(tmp_expression_value_182);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 427;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_116 = mod_consts[261];
            Py_INCREF(tmp_defaults_116);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__166_lambda(tmp_defaults_116);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 427;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_185 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_185 == NULL)) {
                tmp_expression_value_185 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_185 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_184 = LOOKUP_ATTRIBUTE(tmp_expression_value_185, mod_consts[74]);
            if (tmp_expression_value_184 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_184, mod_consts[362]);
            Py_DECREF(tmp_expression_value_184);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_117 = mod_consts[261];
            Py_INCREF(tmp_defaults_117);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__167_lambda(tmp_defaults_117);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 428;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_187 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_187 == NULL)) {
                tmp_expression_value_187 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_187 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 429;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_186 = LOOKUP_ATTRIBUTE(tmp_expression_value_187, mod_consts[74]);
            if (tmp_expression_value_186 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 429;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_186, mod_consts[363]);
            Py_DECREF(tmp_expression_value_186);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 429;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_118 = mod_consts[261];
            Py_INCREF(tmp_defaults_118);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__168_lambda(tmp_defaults_118);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 429;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_189 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_189 == NULL)) {
                tmp_expression_value_189 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_189 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 430;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_188 = LOOKUP_ATTRIBUTE(tmp_expression_value_189, mod_consts[74]);
            if (tmp_expression_value_188 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 430;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_188, mod_consts[364]);
            Py_DECREF(tmp_expression_value_188);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 430;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_119 = mod_consts[365];
            Py_INCREF(tmp_defaults_119);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__169_lambda(tmp_defaults_119);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 430;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_191 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_191 == NULL)) {
                tmp_expression_value_191 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_191 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 431;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_190 = LOOKUP_ATTRIBUTE(tmp_expression_value_191, mod_consts[74]);
            if (tmp_expression_value_190 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 431;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_190, mod_consts[366]);
            Py_DECREF(tmp_expression_value_190);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 431;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_120 = mod_consts[365];
            Py_INCREF(tmp_defaults_120);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__170_lambda(tmp_defaults_120);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 431;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_193 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_193 == NULL)) {
                tmp_expression_value_193 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_193 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 432;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_192 = LOOKUP_ATTRIBUTE(tmp_expression_value_193, mod_consts[74]);
            if (tmp_expression_value_192 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 432;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_192, mod_consts[367]);
            Py_DECREF(tmp_expression_value_192);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 432;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_121 = mod_consts[365];
            Py_INCREF(tmp_defaults_121);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__171_lambda(tmp_defaults_121);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 432;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_195 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_195 == NULL)) {
                tmp_expression_value_195 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_195 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 433;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_194 = LOOKUP_ATTRIBUTE(tmp_expression_value_195, mod_consts[74]);
            if (tmp_expression_value_194 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 433;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_194, mod_consts[368]);
            Py_DECREF(tmp_expression_value_194);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 433;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_122 = mod_consts[365];
            Py_INCREF(tmp_defaults_122);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__172_lambda(tmp_defaults_122);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 433;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_197 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_197 == NULL)) {
                tmp_expression_value_197 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_197 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 434;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_196 = LOOKUP_ATTRIBUTE(tmp_expression_value_197, mod_consts[74]);
            if (tmp_expression_value_196 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 434;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_196, mod_consts[369]);
            Py_DECREF(tmp_expression_value_196);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 434;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_123 = mod_consts[164];
            Py_INCREF(tmp_defaults_123);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__173_lambda(tmp_defaults_123);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 434;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_199 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_199 == NULL)) {
                tmp_expression_value_199 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_199 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_198 = LOOKUP_ATTRIBUTE(tmp_expression_value_199, mod_consts[74]);
            if (tmp_expression_value_198 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_198, mod_consts[370]);
            Py_DECREF(tmp_expression_value_198);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_124 = mod_consts[164];
            Py_INCREF(tmp_defaults_124);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__174_lambda(tmp_defaults_124);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 435;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_201 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_201 == NULL)) {
                tmp_expression_value_201 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_201 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 436;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_200 = LOOKUP_ATTRIBUTE(tmp_expression_value_201, mod_consts[74]);
            if (tmp_expression_value_200 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 436;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_200, mod_consts[74]);
            Py_DECREF(tmp_expression_value_200);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 436;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_125 = mod_consts[354];
            Py_INCREF(tmp_defaults_125);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__175_lambda(tmp_defaults_125);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 436;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_202 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_202 == NULL)) {
                tmp_expression_value_202 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_202 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 437;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_202, mod_consts[371]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 437;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_126 = mod_consts[164];
            Py_INCREF(tmp_defaults_126);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__176_lambda(tmp_defaults_126);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 437;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_203 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_203 == NULL)) {
                tmp_expression_value_203 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_203 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 438;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_203, mod_consts[372]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 438;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_127 = mod_consts[373];
            Py_INCREF(tmp_defaults_127);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__177_lambda(tmp_defaults_127);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 438;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_204 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_204 == NULL)) {
                tmp_expression_value_204 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_204 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 439;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_204, mod_consts[374]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 439;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__178_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 439;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_205 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_205 == NULL)) {
                tmp_expression_value_205 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_205 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_205, mod_consts[375]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__179_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 440;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_206 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_206 == NULL)) {
                tmp_expression_value_206 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_206 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 441;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_206, mod_consts[376]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 441;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__180_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 441;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_207 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_207 == NULL)) {
                tmp_expression_value_207 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_207 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 442;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_207, mod_consts[377]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 442;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_128 = mod_consts[194];
            Py_INCREF(tmp_defaults_128);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__181_lambda(tmp_defaults_128);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 442;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_208 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_208 == NULL)) {
                tmp_expression_value_208 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_208 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 443;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_208, mod_consts[378]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 443;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_129 = mod_consts[164];
            Py_INCREF(tmp_defaults_129);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__182_lambda(tmp_defaults_129);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 443;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_209 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_209 == NULL)) {
                tmp_expression_value_209 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_209 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 444;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_209, mod_consts[379]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 444;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__183_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 444;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_210 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_210 == NULL)) {
                tmp_expression_value_210 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_210 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 445;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_210, mod_consts[380]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 445;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_130 = mod_consts[164];
            Py_INCREF(tmp_defaults_130);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__184_lambda(tmp_defaults_130);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 445;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_211 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_211 == NULL)) {
                tmp_expression_value_211 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_211 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 446;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_211, mod_consts[381]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 446;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_131 = mod_consts[164];
            Py_INCREF(tmp_defaults_131);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__185_lambda(tmp_defaults_131);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 446;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_212 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_212 == NULL)) {
                tmp_expression_value_212 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_212 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 447;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_212, mod_consts[382]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 447;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_132 = mod_consts[164];
            Py_INCREF(tmp_defaults_132);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__186_lambda(tmp_defaults_132);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 447;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_213 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_213 == NULL)) {
                tmp_expression_value_213 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_213 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 448;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_213, mod_consts[383]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 448;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_133 = mod_consts[164];
            Py_INCREF(tmp_defaults_133);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__187_lambda(tmp_defaults_133);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 448;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_214 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_214 == NULL)) {
                tmp_expression_value_214 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_214 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 449;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_214, mod_consts[384]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 449;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_1 = Py_None;
            tmp_defaults_134 = PyTuple_New(5);
            {
                PyObject *tmp_expression_value_215;
                PyTuple_SET_ITEM0(tmp_defaults_134, 0, tmp_tuple_element_1);
                tmp_tuple_element_1 = Py_None;
                PyTuple_SET_ITEM0(tmp_defaults_134, 1, tmp_tuple_element_1);
                tmp_expression_value_215 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

                if (unlikely(tmp_expression_value_215 == NULL)) {
                    tmp_expression_value_215 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
                }

                if (tmp_expression_value_215 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 449;
                    type_description_1 = "oooooooooo";
                    goto tuple_build_exception_1;
                }
                tmp_tuple_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_215, mod_consts[385]);
                if (tmp_tuple_element_1 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 449;
                    type_description_1 = "oooooooooo";
                    goto tuple_build_exception_1;
                }
                PyTuple_SET_ITEM(tmp_defaults_134, 2, tmp_tuple_element_1);
                tmp_tuple_element_1 = Py_None;
                PyTuple_SET_ITEM0(tmp_defaults_134, 3, tmp_tuple_element_1);
                tmp_tuple_element_1 = Py_False;
                PyTuple_SET_ITEM0(tmp_defaults_134, 4, tmp_tuple_element_1);
            }
            goto tuple_build_noexception_1;
            // Exception handling pass through code for tuple_build:
            tuple_build_exception_1:;
            Py_DECREF(tmp_dict_key_1);
            Py_DECREF(tmp_defaults_134);
            goto dict_build_exception_1;
            // Finished with no exception for tuple_build:
            tuple_build_noexception_1:;


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__188_lambda(tmp_defaults_134);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 449;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_216 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_216 == NULL)) {
                tmp_expression_value_216 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_216 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 450;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_216, mod_consts[386]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 450;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_135 = mod_consts[387];
            Py_INCREF(tmp_defaults_135);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__189_lambda(tmp_defaults_135);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 450;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_217 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_217 == NULL)) {
                tmp_expression_value_217 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_217 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 451;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_217, mod_consts[388]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 451;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_136 = mod_consts[389];
            Py_INCREF(tmp_defaults_136);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__190_lambda(tmp_defaults_136);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 451;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_218 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_218 == NULL)) {
                tmp_expression_value_218 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_218 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_218, mod_consts[390]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_137 = mod_consts[164];
            Py_INCREF(tmp_defaults_137);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__191_lambda(tmp_defaults_137);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 452;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_219 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_219 == NULL)) {
                tmp_expression_value_219 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_219 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_219, mod_consts[391]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_138 = mod_consts[164];
            Py_INCREF(tmp_defaults_138);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__192_lambda(tmp_defaults_138);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 453;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_220 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_220 == NULL)) {
                tmp_expression_value_220 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_220 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_220, mod_consts[392]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_139 = mod_consts[164];
            Py_INCREF(tmp_defaults_139);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__193_lambda(tmp_defaults_139);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 454;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_221 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_221 == NULL)) {
                tmp_expression_value_221 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_221 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_221, mod_consts[393]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_140 = mod_consts[164];
            Py_INCREF(tmp_defaults_140);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__194_lambda(tmp_defaults_140);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 455;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_222 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_222 == NULL)) {
                tmp_expression_value_222 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_222 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 456;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_222, mod_consts[394]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 456;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_141 = mod_consts[164];
            Py_INCREF(tmp_defaults_141);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__195_lambda(tmp_defaults_141);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 456;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_223 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_223 == NULL)) {
                tmp_expression_value_223 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_223 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_223, mod_consts[395]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_142 = mod_consts[164];
            Py_INCREF(tmp_defaults_142);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__196_lambda(tmp_defaults_142);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 457;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_224 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_224 == NULL)) {
                tmp_expression_value_224 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_224 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_224, mod_consts[396]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_143 = mod_consts[164];
            Py_INCREF(tmp_defaults_143);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__197_lambda(tmp_defaults_143);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 458;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_225 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_225 == NULL)) {
                tmp_expression_value_225 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_225 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_225, mod_consts[397]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_144 = mod_consts[164];
            Py_INCREF(tmp_defaults_144);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__198_lambda(tmp_defaults_144);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 459;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_226 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_226 == NULL)) {
                tmp_expression_value_226 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_226 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 460;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_226, mod_consts[398]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 460;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_145 = mod_consts[399];
            Py_INCREF(tmp_defaults_145);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__199_lambda(tmp_defaults_145);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 460;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_227 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_227 == NULL)) {
                tmp_expression_value_227 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_227 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 461;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_227, mod_consts[400]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 461;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__200_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 461;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_228 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_228 == NULL)) {
                tmp_expression_value_228 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_228 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 462;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_228, mod_consts[401]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 462;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__201_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 462;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_229 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_229 == NULL)) {
                tmp_expression_value_229 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_229 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 463;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_229, mod_consts[402]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 463;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__202_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 463;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_230 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_230 == NULL)) {
                tmp_expression_value_230 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_230 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 464;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_230, mod_consts[403]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 464;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_146 = mod_consts[404];
            Py_INCREF(tmp_defaults_146);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__203_lambda(tmp_defaults_146);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 464;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_231 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_231 == NULL)) {
                tmp_expression_value_231 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_231 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 465;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_231, mod_consts[405]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 465;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__204_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 465;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_232 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_232 == NULL)) {
                tmp_expression_value_232 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_232 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 466;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_232, mod_consts[406]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 466;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_147 = mod_consts[223];
            Py_INCREF(tmp_defaults_147);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__205_lambda(tmp_defaults_147);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 466;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_233 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_233 == NULL)) {
                tmp_expression_value_233 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_233 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 467;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_233, mod_consts[407]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 467;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_148 = mod_consts[164];
            Py_INCREF(tmp_defaults_148);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__206_lambda(tmp_defaults_148);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 467;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_234 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_234 == NULL)) {
                tmp_expression_value_234 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_234 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 468;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_234, mod_consts[408]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 468;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_149 = mod_consts[164];
            Py_INCREF(tmp_defaults_149);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__207_lambda(tmp_defaults_149);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 468;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_235 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_235 == NULL)) {
                tmp_expression_value_235 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_235 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 469;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_235, mod_consts[409]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 469;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_150 = mod_consts[410];
            Py_INCREF(tmp_defaults_150);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__208_lambda(tmp_defaults_150);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 469;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_236 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_236 == NULL)) {
                tmp_expression_value_236 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_236 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 470;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_236, mod_consts[411]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 470;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_151 = mod_consts[164];
            Py_INCREF(tmp_defaults_151);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__209_lambda(tmp_defaults_151);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 470;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_237 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_237 == NULL)) {
                tmp_expression_value_237 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_237 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 471;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_237, mod_consts[412]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 471;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_152 = mod_consts[413];
            Py_INCREF(tmp_defaults_152);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__210_lambda(tmp_defaults_152);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 471;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_238 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_238 == NULL)) {
                tmp_expression_value_238 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_238 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 472;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_238, mod_consts[414]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 472;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_153 = mod_consts[415];
            Py_INCREF(tmp_defaults_153);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__211_lambda(tmp_defaults_153);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 472;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_240 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_240 == NULL)) {
                tmp_expression_value_240 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_240 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 473;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_239 = LOOKUP_ATTRIBUTE(tmp_expression_value_240, mod_consts[253]);
            if (tmp_expression_value_239 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 473;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_239, mod_consts[416]);
            Py_DECREF(tmp_expression_value_239);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 473;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__212_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 473;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_241 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_241 == NULL)) {
                tmp_expression_value_241 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_241 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 474;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_241, mod_consts[417]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 474;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_154 = mod_consts[164];
            Py_INCREF(tmp_defaults_154);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__213_lambda(tmp_defaults_154);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 474;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_242 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_242 == NULL)) {
                tmp_expression_value_242 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_242 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 475;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_242, mod_consts[418]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 475;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__214_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 475;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_243 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_243 == NULL)) {
                tmp_expression_value_243 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_243 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 476;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_243, mod_consts[419]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 476;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_155 = mod_consts[164];
            Py_INCREF(tmp_defaults_155);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__215_lambda(tmp_defaults_155);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 476;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_244 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_244 == NULL)) {
                tmp_expression_value_244 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_244 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 477;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_244, mod_consts[420]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 477;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_156 = mod_consts[164];
            Py_INCREF(tmp_defaults_156);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__216_lambda(tmp_defaults_156);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 477;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_245 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_245 == NULL)) {
                tmp_expression_value_245 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_245 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 478;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_245, mod_consts[421]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 478;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_157 = mod_consts[164];
            Py_INCREF(tmp_defaults_157);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__217_lambda(tmp_defaults_157);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 478;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_246 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_246 == NULL)) {
                tmp_expression_value_246 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_246 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 479;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_246, mod_consts[422]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 479;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_158 = mod_consts[164];
            Py_INCREF(tmp_defaults_158);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__218_lambda(tmp_defaults_158);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 479;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_247 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_247 == NULL)) {
                tmp_expression_value_247 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_247 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 480;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_247, mod_consts[423]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 480;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_159 = mod_consts[164];
            Py_INCREF(tmp_defaults_159);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__219_lambda(tmp_defaults_159);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 480;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_248 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_248 == NULL)) {
                tmp_expression_value_248 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_248 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 481;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_248, mod_consts[424]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 481;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__220_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 481;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_249 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_249 == NULL)) {
                tmp_expression_value_249 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_249 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 482;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_249, mod_consts[425]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 482;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__221_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 482;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_250 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_250 == NULL)) {
                tmp_expression_value_250 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_250 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 483;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_250, mod_consts[426]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 483;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_160 = mod_consts[189];
            Py_INCREF(tmp_defaults_160);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__222_lambda(tmp_defaults_160);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 483;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_251 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_251 == NULL)) {
                tmp_expression_value_251 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_251 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 484;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_251, mod_consts[427]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 484;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_161 = mod_consts[164];
            Py_INCREF(tmp_defaults_161);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__223_lambda(tmp_defaults_161);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 484;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_252 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_252 == NULL)) {
                tmp_expression_value_252 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_252 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 485;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_252, mod_consts[428]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 485;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__224_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 485;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_253 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_253 == NULL)) {
                tmp_expression_value_253 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_253 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 486;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_253, mod_consts[429]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 486;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__225_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 486;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_254 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_254 == NULL)) {
                tmp_expression_value_254 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_254 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 487;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_254, mod_consts[430]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 487;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__226_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 487;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_255 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_255 == NULL)) {
                tmp_expression_value_255 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_255 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 488;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_255, mod_consts[431]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 488;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__227_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 488;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_256 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_256 == NULL)) {
                tmp_expression_value_256 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_256 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 489;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_256, mod_consts[432]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 489;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_162 = mod_consts[164];
            Py_INCREF(tmp_defaults_162);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__228_lambda(tmp_defaults_162);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 489;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_257 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_257 == NULL)) {
                tmp_expression_value_257 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_257 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 490;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_257, mod_consts[433]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 490;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_163 = mod_consts[164];
            Py_INCREF(tmp_defaults_163);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__229_lambda(tmp_defaults_163);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 490;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_258 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_258 == NULL)) {
                tmp_expression_value_258 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_258 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 491;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_258, mod_consts[434]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 491;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__230_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 491;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_259 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_259 == NULL)) {
                tmp_expression_value_259 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_259 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 493;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_259, mod_consts[435]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 493;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__231_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 493;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_260 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_260 == NULL)) {
                tmp_expression_value_260 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_260 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 494;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_260, mod_consts[436]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 494;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_164 = mod_consts[164];
            Py_INCREF(tmp_defaults_164);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__232_lambda(tmp_defaults_164);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 494;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_262 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_262 == NULL)) {
                tmp_expression_value_262 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_262 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 495;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_261 = LOOKUP_ATTRIBUTE(tmp_expression_value_262, mod_consts[253]);
            if (tmp_expression_value_261 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 495;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_261, mod_consts[437]);
            Py_DECREF(tmp_expression_value_261);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 495;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_165 = mod_consts[164];
            Py_INCREF(tmp_defaults_165);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__233_lambda(tmp_defaults_165);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 495;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_264 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_264 == NULL)) {
                tmp_expression_value_264 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_264 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 496;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_263 = LOOKUP_ATTRIBUTE(tmp_expression_value_264, mod_consts[253]);
            if (tmp_expression_value_263 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 496;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_263, mod_consts[438]);
            Py_DECREF(tmp_expression_value_263);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 496;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_166 = mod_consts[252];
            Py_INCREF(tmp_defaults_166);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__234_lambda(tmp_defaults_166);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 496;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_265 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_265 == NULL)) {
                tmp_expression_value_265 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_265 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 497;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_265, mod_consts[439]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 497;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__235_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 497;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_266 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_266 == NULL)) {
                tmp_expression_value_266 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_266 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 498;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_266, mod_consts[440]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 498;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__236_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 498;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_267 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_267 == NULL)) {
                tmp_expression_value_267 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_267 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 499;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_267, mod_consts[441]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 499;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__237_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 499;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_268 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_268 == NULL)) {
                tmp_expression_value_268 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_268 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 500;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_268, mod_consts[442]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 500;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__238_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 500;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_269 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_269 == NULL)) {
                tmp_expression_value_269 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_269 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 501;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_269, mod_consts[443]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 501;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__239_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 501;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_270 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_270 == NULL)) {
                tmp_expression_value_270 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_270 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 502;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_270, mod_consts[444]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 502;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__240_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 502;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_271 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_271 == NULL)) {
                tmp_expression_value_271 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_271 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 503;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_271, mod_consts[445]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 503;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_167 = mod_consts[187];
            Py_INCREF(tmp_defaults_167);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__241_lambda(tmp_defaults_167);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 503;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_272 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_272 == NULL)) {
                tmp_expression_value_272 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_272 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 504;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_272, mod_consts[446]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 504;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__242_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 504;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_273 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_273 == NULL)) {
                tmp_expression_value_273 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_273 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 505;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_273, mod_consts[447]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 505;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_168 = mod_consts[448];
            Py_INCREF(tmp_defaults_168);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__243_lambda(tmp_defaults_168);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 505;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_274 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_274 == NULL)) {
                tmp_expression_value_274 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_274 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 507;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_274, mod_consts[449]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 507;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_169 = mod_consts[450];
            Py_INCREF(tmp_defaults_169);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__244_lambda(tmp_defaults_169);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 507;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_275 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_275 == NULL)) {
                tmp_expression_value_275 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_275 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 508;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_275, mod_consts[451]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 508;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__245_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 508;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_276 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_276 == NULL)) {
                tmp_expression_value_276 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_276 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 509;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_276, mod_consts[452]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 509;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_170 = mod_consts[194];
            Py_INCREF(tmp_defaults_170);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__246_lambda(tmp_defaults_170);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 509;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_277 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_277 == NULL)) {
                tmp_expression_value_277 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_277 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 510;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_277, mod_consts[453]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 510;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_171 = mod_consts[404];
            Py_INCREF(tmp_defaults_171);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__247_lambda(tmp_defaults_171);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 510;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_278 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_278 == NULL)) {
                tmp_expression_value_278 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_278 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 511;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_278, mod_consts[454]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 511;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_172 = mod_consts[164];
            Py_INCREF(tmp_defaults_172);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__248_lambda(tmp_defaults_172);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 511;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_279 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_279 == NULL)) {
                tmp_expression_value_279 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_279 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 512;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_279, mod_consts[455]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 512;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_173 = mod_consts[164];
            Py_INCREF(tmp_defaults_173);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__249_lambda(tmp_defaults_173);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 512;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_280 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_280 == NULL)) {
                tmp_expression_value_280 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_280 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 513;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_280, mod_consts[456]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 513;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_174 = mod_consts[164];
            Py_INCREF(tmp_defaults_174);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__250_lambda(tmp_defaults_174);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 513;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_281 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_281 == NULL)) {
                tmp_expression_value_281 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_281 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 514;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_281, mod_consts[457]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 514;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_175 = mod_consts[164];
            Py_INCREF(tmp_defaults_175);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__251_lambda(tmp_defaults_175);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 514;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_282 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_282 == NULL)) {
                tmp_expression_value_282 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_282 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 515;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_282, mod_consts[458]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 515;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_176 = mod_consts[164];
            Py_INCREF(tmp_defaults_176);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__252_lambda(tmp_defaults_176);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 515;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_283 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_283 == NULL)) {
                tmp_expression_value_283 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_283 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 516;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_283, mod_consts[459]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 516;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_177 = mod_consts[164];
            Py_INCREF(tmp_defaults_177);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__253_lambda(tmp_defaults_177);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 516;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_284 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_284 == NULL)) {
                tmp_expression_value_284 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_284 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 517;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_284, mod_consts[460]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 517;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_178 = mod_consts[461];
            Py_INCREF(tmp_defaults_178);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__254_lambda(tmp_defaults_178);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 517;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_285 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_285 == NULL)) {
                tmp_expression_value_285 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_285 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 519;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_285, mod_consts[462]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 519;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_179 = mod_consts[164];
            Py_INCREF(tmp_defaults_179);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__255_lambda(tmp_defaults_179);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 519;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_286 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_286 == NULL)) {
                tmp_expression_value_286 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_286 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 520;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_286, mod_consts[463]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 520;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_180 = mod_consts[164];
            Py_INCREF(tmp_defaults_180);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__256_lambda(tmp_defaults_180);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 520;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_287 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_287 == NULL)) {
                tmp_expression_value_287 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_287 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 521;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_287, mod_consts[464]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 521;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_181 = mod_consts[164];
            Py_INCREF(tmp_defaults_181);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__257_lambda(tmp_defaults_181);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 521;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_288 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_288 == NULL)) {
                tmp_expression_value_288 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_288 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 522;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_288, mod_consts[465]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 522;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_182 = mod_consts[164];
            Py_INCREF(tmp_defaults_182);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__258_lambda(tmp_defaults_182);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 522;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_289 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_289 == NULL)) {
                tmp_expression_value_289 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_289 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 523;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_289, mod_consts[466]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 523;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_183 = mod_consts[164];
            Py_INCREF(tmp_defaults_183);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__259_lambda(tmp_defaults_183);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 523;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_290 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_290 == NULL)) {
                tmp_expression_value_290 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_290 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 524;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_290, mod_consts[467]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 524;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_184 = mod_consts[164];
            Py_INCREF(tmp_defaults_184);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__260_lambda(tmp_defaults_184);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 524;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_291 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_291 == NULL)) {
                tmp_expression_value_291 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_291 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 525;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_291, mod_consts[468]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 525;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_185 = mod_consts[164];
            Py_INCREF(tmp_defaults_185);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__261_lambda(tmp_defaults_185);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 525;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_292 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_292 == NULL)) {
                tmp_expression_value_292 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_292 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 526;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_292, mod_consts[469]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 526;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__262_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 526;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_293 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_293 == NULL)) {
                tmp_expression_value_293 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_293 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 527;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_293, mod_consts[470]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 527;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__263_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 527;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_294 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_294 == NULL)) {
                tmp_expression_value_294 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_294 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 528;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_294, mod_consts[471]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 528;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_186 = mod_consts[164];
            Py_INCREF(tmp_defaults_186);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__264_lambda(tmp_defaults_186);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 528;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_295 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_295 == NULL)) {
                tmp_expression_value_295 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_295 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 529;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_295, mod_consts[472]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 529;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_187 = mod_consts[164];
            Py_INCREF(tmp_defaults_187);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__265_lambda(tmp_defaults_187);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 529;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_296 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_296 == NULL)) {
                tmp_expression_value_296 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_296 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 530;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_296, mod_consts[473]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 530;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_188 = mod_consts[164];
            Py_INCREF(tmp_defaults_188);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__266_lambda(tmp_defaults_188);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 530;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_297 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_297 == NULL)) {
                tmp_expression_value_297 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_297 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 531;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_297, mod_consts[474]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 531;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_189 = mod_consts[164];
            Py_INCREF(tmp_defaults_189);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__267_lambda(tmp_defaults_189);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 531;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_298 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_298 == NULL)) {
                tmp_expression_value_298 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_298 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 532;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_298, mod_consts[475]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 532;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_190 = mod_consts[252];
            Py_INCREF(tmp_defaults_190);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__268_lambda(tmp_defaults_190);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 532;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_299 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_299 == NULL)) {
                tmp_expression_value_299 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_299 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 533;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_299, mod_consts[476]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 533;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_191 = mod_consts[164];
            Py_INCREF(tmp_defaults_191);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__269_lambda(tmp_defaults_191);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 533;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_300 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_300 == NULL)) {
                tmp_expression_value_300 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_300 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 534;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_300, mod_consts[475]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 534;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_192 = mod_consts[252];
            Py_INCREF(tmp_defaults_192);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__270_lambda(tmp_defaults_192);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 534;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_301 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_301 == NULL)) {
                tmp_expression_value_301 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_301 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 535;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_301, mod_consts[477]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 535;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__271_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 535;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_302 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_302 == NULL)) {
                tmp_expression_value_302 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_302 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 536;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_302, mod_consts[478]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 536;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_193 = mod_consts[223];
            Py_INCREF(tmp_defaults_193);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__272_lambda(tmp_defaults_193);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 536;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_303 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_303 == NULL)) {
                tmp_expression_value_303 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_303 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 537;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_303, mod_consts[479]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 537;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_194 = mod_consts[164];
            Py_INCREF(tmp_defaults_194);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__273_lambda(tmp_defaults_194);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 537;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_304 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_304 == NULL)) {
                tmp_expression_value_304 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_304 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 538;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_304, mod_consts[480]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 538;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_195 = mod_consts[164];
            Py_INCREF(tmp_defaults_195);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__274_lambda(tmp_defaults_195);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 538;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_305 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_305 == NULL)) {
                tmp_expression_value_305 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_305 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 539;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_305, mod_consts[481]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 539;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_196 = mod_consts[164];
            Py_INCREF(tmp_defaults_196);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__275_lambda(tmp_defaults_196);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 539;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_306 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_306 == NULL)) {
                tmp_expression_value_306 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_306 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 540;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_306, mod_consts[482]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 540;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_197 = mod_consts[483];
            Py_INCREF(tmp_defaults_197);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__276_lambda(tmp_defaults_197);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 540;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_307 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_307 == NULL)) {
                tmp_expression_value_307 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_307 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 541;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_307, mod_consts[484]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 541;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_198 = mod_consts[164];
            Py_INCREF(tmp_defaults_198);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__277_lambda(tmp_defaults_198);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 541;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_308 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_308 == NULL)) {
                tmp_expression_value_308 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_308 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 542;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_308, mod_consts[485]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 542;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_199 = mod_consts[287];
            Py_INCREF(tmp_defaults_199);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__278_lambda(tmp_defaults_199);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 542;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_309 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_309 == NULL)) {
                tmp_expression_value_309 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_309 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 543;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_309, mod_consts[486]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 543;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__279_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 543;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_310 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_310 == NULL)) {
                tmp_expression_value_310 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_310 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 544;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_310, mod_consts[487]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 544;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__280_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 544;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_311 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_311 == NULL)) {
                tmp_expression_value_311 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_311 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 545;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_311, mod_consts[488]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 545;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_200 = mod_consts[164];
            Py_INCREF(tmp_defaults_200);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__281_lambda(tmp_defaults_200);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 545;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_312 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_312 == NULL)) {
                tmp_expression_value_312 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_312 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 546;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_312, mod_consts[489]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 546;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_201 = mod_consts[164];
            Py_INCREF(tmp_defaults_201);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__282_lambda(tmp_defaults_201);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 546;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_313 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_313 == NULL)) {
                tmp_expression_value_313 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_313 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 547;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_313, mod_consts[490]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 547;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__283_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 547;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_315 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_315 == NULL)) {
                tmp_expression_value_315 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_315 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 548;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_314 = LOOKUP_ATTRIBUTE(tmp_expression_value_315, mod_consts[253]);
            if (tmp_expression_value_314 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 548;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_314, mod_consts[490]);
            Py_DECREF(tmp_expression_value_314);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 548;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_202 = mod_consts[164];
            Py_INCREF(tmp_defaults_202);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__284_lambda(tmp_defaults_202);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 548;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_316 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_316 == NULL)) {
                tmp_expression_value_316 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_316 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 549;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_316, mod_consts[491]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 549;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_203 = mod_consts[389];
            Py_INCREF(tmp_defaults_203);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__285_lambda(tmp_defaults_203);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 549;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_318 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_318 == NULL)) {
                tmp_expression_value_318 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_318 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 550;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_317 = LOOKUP_ATTRIBUTE(tmp_expression_value_318, mod_consts[253]);
            if (tmp_expression_value_317 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 550;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_317, mod_consts[491]);
            Py_DECREF(tmp_expression_value_317);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 550;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_204 = mod_consts[389];
            Py_INCREF(tmp_defaults_204);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__286_lambda(tmp_defaults_204);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 550;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_320 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_320 == NULL)) {
                tmp_expression_value_320 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_320 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 551;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_319 = LOOKUP_ATTRIBUTE(tmp_expression_value_320, mod_consts[253]);
            if (tmp_expression_value_319 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 551;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_319, mod_consts[492]);
            Py_DECREF(tmp_expression_value_319);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 551;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_205 = mod_consts[164];
            Py_INCREF(tmp_defaults_205);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__287_lambda(tmp_defaults_205);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 551;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_321 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_321 == NULL)) {
                tmp_expression_value_321 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_321 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 552;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_321, mod_consts[493]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 552;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__288_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 552;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_322 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_322 == NULL)) {
                tmp_expression_value_322 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_322 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 553;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_322, mod_consts[494]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 553;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_206 = mod_consts[164];
            Py_INCREF(tmp_defaults_206);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__289_lambda(tmp_defaults_206);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 553;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_323 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_323 == NULL)) {
                tmp_expression_value_323 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_323 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 554;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_323, mod_consts[495]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 554;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_207 = mod_consts[164];
            Py_INCREF(tmp_defaults_207);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__290_lambda(tmp_defaults_207);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 554;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_324 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_324 == NULL)) {
                tmp_expression_value_324 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_324 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 555;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_324, mod_consts[496]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 555;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_208 = mod_consts[164];
            Py_INCREF(tmp_defaults_208);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__291_lambda(tmp_defaults_208);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 555;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_325 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_325 == NULL)) {
                tmp_expression_value_325 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_325 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 556;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_325, mod_consts[497]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 556;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_209 = mod_consts[498];
            Py_INCREF(tmp_defaults_209);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__292_lambda(tmp_defaults_209);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 556;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_326 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_326 == NULL)) {
                tmp_expression_value_326 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_326 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 557;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_326, mod_consts[499]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 557;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_210 = mod_consts[498];
            Py_INCREF(tmp_defaults_210);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__293_lambda(tmp_defaults_210);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 557;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_327 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_327 == NULL)) {
                tmp_expression_value_327 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_327 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 558;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_327, mod_consts[500]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 558;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_211 = mod_consts[498];
            Py_INCREF(tmp_defaults_211);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__294_lambda(tmp_defaults_211);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 558;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_328 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_328 == NULL)) {
                tmp_expression_value_328 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_328 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 559;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_328, mod_consts[501]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 559;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_212 = mod_consts[502];
            Py_INCREF(tmp_defaults_212);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__295_lambda(tmp_defaults_212);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 559;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_329 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_329 == NULL)) {
                tmp_expression_value_329 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_329 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 561;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_329, mod_consts[503]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 561;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_213 = mod_consts[164];
            Py_INCREF(tmp_defaults_213);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__296_lambda(tmp_defaults_213);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 561;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_330 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_330 == NULL)) {
                tmp_expression_value_330 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_330 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 562;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_330, mod_consts[504]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 562;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_214 = mod_consts[164];
            Py_INCREF(tmp_defaults_214);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__297_lambda(tmp_defaults_214);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 562;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_331 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_331 == NULL)) {
                tmp_expression_value_331 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_331 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 563;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_331, mod_consts[505]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 563;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_215 = mod_consts[164];
            Py_INCREF(tmp_defaults_215);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__298_lambda(tmp_defaults_215);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 563;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_332 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_332 == NULL)) {
                tmp_expression_value_332 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_332 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 564;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_332, mod_consts[506]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 564;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__299_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 564;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_333 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_333 == NULL)) {
                tmp_expression_value_333 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_333 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 565;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_333, mod_consts[507]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 565;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_216 = mod_consts[164];
            Py_INCREF(tmp_defaults_216);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__300_lambda(tmp_defaults_216);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 565;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_334 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_334 == NULL)) {
                tmp_expression_value_334 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_334 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 566;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_334, mod_consts[508]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 566;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_217 = mod_consts[164];
            Py_INCREF(tmp_defaults_217);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__301_lambda(tmp_defaults_217);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 566;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_335 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_335 == NULL)) {
                tmp_expression_value_335 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_335 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 567;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_335, mod_consts[509]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 567;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_218 = mod_consts[164];
            Py_INCREF(tmp_defaults_218);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__302_lambda(tmp_defaults_218);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 567;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_336 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_336 == NULL)) {
                tmp_expression_value_336 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_336 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 568;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_336, mod_consts[510]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 568;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__303_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 568;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_337 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_337 == NULL)) {
                tmp_expression_value_337 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_337 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 570;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_337, mod_consts[511]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 570;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__304_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 570;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_338 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_338 == NULL)) {
                tmp_expression_value_338 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_338 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 571;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_338, mod_consts[512]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 571;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__305_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 571;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_339 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_339 == NULL)) {
                tmp_expression_value_339 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_339 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 573;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_339, mod_consts[513]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 573;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__306_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 573;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_340 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_340 == NULL)) {
                tmp_expression_value_340 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_340 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 575;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_340, mod_consts[514]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 575;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__307_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 575;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_341 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_341 == NULL)) {
                tmp_expression_value_341 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_341 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 577;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_341, mod_consts[515]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 577;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_219 = mod_consts[164];
            Py_INCREF(tmp_defaults_219);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__308_lambda(tmp_defaults_219);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 577;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_342 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_342 == NULL)) {
                tmp_expression_value_342 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_342 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 578;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_342, mod_consts[516]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 578;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_220 = mod_consts[517];
            Py_INCREF(tmp_defaults_220);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__309_lambda(tmp_defaults_220);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 578;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_343 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_343 == NULL)) {
                tmp_expression_value_343 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_343 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 579;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_343, mod_consts[518]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 579;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__310_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 579;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_344 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_344 == NULL)) {
                tmp_expression_value_344 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_344 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 580;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_344, mod_consts[519]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 580;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__311_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 580;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_345 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_345 == NULL)) {
                tmp_expression_value_345 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_345 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 581;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_345, mod_consts[520]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 581;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_221 = mod_consts[252];
            Py_INCREF(tmp_defaults_221);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__312_lambda(tmp_defaults_221);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 581;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_346 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_346 == NULL)) {
                tmp_expression_value_346 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_346 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 582;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_346, mod_consts[521]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 582;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_222 = mod_consts[164];
            Py_INCREF(tmp_defaults_222);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__313_lambda(tmp_defaults_222);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 582;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_347 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_347 == NULL)) {
                tmp_expression_value_347 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_347 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 583;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_347, mod_consts[522]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 583;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_223 = mod_consts[164];
            Py_INCREF(tmp_defaults_223);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__314_lambda(tmp_defaults_223);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 583;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_348 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_348 == NULL)) {
                tmp_expression_value_348 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_348 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 584;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_348, mod_consts[523]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 584;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_224 = mod_consts[252];
            Py_INCREF(tmp_defaults_224);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__315_lambda(tmp_defaults_224);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 584;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_349 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_349 == NULL)) {
                tmp_expression_value_349 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_349 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 585;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_349, mod_consts[524]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 585;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_225 = mod_consts[164];
            Py_INCREF(tmp_defaults_225);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__316_lambda(tmp_defaults_225);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 585;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_350 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_350 == NULL)) {
                tmp_expression_value_350 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_350 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 586;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_350, mod_consts[525]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 586;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__317_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 586;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_351 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_351 == NULL)) {
                tmp_expression_value_351 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_351 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 587;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_351, mod_consts[526]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 587;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__318_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 587;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_352 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_352 == NULL)) {
                tmp_expression_value_352 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_352 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 588;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_352, mod_consts[527]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 588;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__319_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 588;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_353 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_353 == NULL)) {
                tmp_expression_value_353 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_353 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 589;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_353, mod_consts[528]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 589;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_226 = mod_consts[529];
            Py_INCREF(tmp_defaults_226);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__320_lambda(tmp_defaults_226);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 589;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_354 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_354 == NULL)) {
                tmp_expression_value_354 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_354 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 590;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_354, mod_consts[530]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 590;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__321_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 590;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_355 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_355 == NULL)) {
                tmp_expression_value_355 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_355 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 591;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_355, mod_consts[531]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 591;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_227 = mod_consts[532];
            Py_INCREF(tmp_defaults_227);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__322_lambda(tmp_defaults_227);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 591;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_356 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_356 == NULL)) {
                tmp_expression_value_356 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_356 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 592;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_356, mod_consts[533]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 592;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__323_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 592;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_357 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_357 == NULL)) {
                tmp_expression_value_357 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_357 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 593;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_357, mod_consts[534]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 593;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_228 = mod_consts[314];
            Py_INCREF(tmp_defaults_228);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__324_lambda(tmp_defaults_228);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 593;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_358 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_358 == NULL)) {
                tmp_expression_value_358 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_358 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 594;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_358, mod_consts[534]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 594;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_229 = mod_consts[314];
            Py_INCREF(tmp_defaults_229);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__325_lambda(tmp_defaults_229);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 594;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_359 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_359 == NULL)) {
                tmp_expression_value_359 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_359 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 595;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_359, mod_consts[534]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 595;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_230 = mod_consts[535];
            Py_INCREF(tmp_defaults_230);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__326_lambda(tmp_defaults_230);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 595;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_360 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_360 == NULL)) {
                tmp_expression_value_360 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_360 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 596;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_360, mod_consts[536]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 596;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_231 = mod_consts[164];
            Py_INCREF(tmp_defaults_231);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__327_lambda(tmp_defaults_231);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 596;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_361 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_361 == NULL)) {
                tmp_expression_value_361 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_361 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 597;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_361, mod_consts[537]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 597;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_232 = mod_consts[164];
            Py_INCREF(tmp_defaults_232);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__328_lambda(tmp_defaults_232);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 597;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_362 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_362 == NULL)) {
                tmp_expression_value_362 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_362 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 598;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_362, mod_consts[538]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 598;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_233 = mod_consts[164];
            Py_INCREF(tmp_defaults_233);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__329_lambda(tmp_defaults_233);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 598;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_363 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_363 == NULL)) {
                tmp_expression_value_363 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_363 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 599;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_363, mod_consts[539]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 599;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_234 = mod_consts[164];
            Py_INCREF(tmp_defaults_234);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__330_lambda(tmp_defaults_234);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 599;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_364 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_364 == NULL)) {
                tmp_expression_value_364 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_364 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 600;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_364, mod_consts[540]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 600;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_235 = mod_consts[164];
            Py_INCREF(tmp_defaults_235);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__331_lambda(tmp_defaults_235);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 600;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_367 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_367 == NULL)) {
                tmp_expression_value_367 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_367 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 601;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_366 = LOOKUP_ATTRIBUTE(tmp_expression_value_367, mod_consts[108]);
            if (tmp_expression_value_366 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 601;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_365 = LOOKUP_ATTRIBUTE(tmp_expression_value_366, mod_consts[109]);
            Py_DECREF(tmp_expression_value_366);
            if (tmp_expression_value_365 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 601;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_365, mod_consts[541]);
            Py_DECREF(tmp_expression_value_365);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 601;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__332_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 601;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_370 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_370 == NULL)) {
                tmp_expression_value_370 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_370 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 602;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_369 = LOOKUP_ATTRIBUTE(tmp_expression_value_370, mod_consts[108]);
            if (tmp_expression_value_369 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 602;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_368 = LOOKUP_ATTRIBUTE(tmp_expression_value_369, mod_consts[109]);
            Py_DECREF(tmp_expression_value_369);
            if (tmp_expression_value_368 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 602;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_368, mod_consts[542]);
            Py_DECREF(tmp_expression_value_368);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 602;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__333_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 602;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_373 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_373 == NULL)) {
                tmp_expression_value_373 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_373 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 603;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_372 = LOOKUP_ATTRIBUTE(tmp_expression_value_373, mod_consts[108]);
            if (tmp_expression_value_372 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 603;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_371 = LOOKUP_ATTRIBUTE(tmp_expression_value_372, mod_consts[109]);
            Py_DECREF(tmp_expression_value_372);
            if (tmp_expression_value_371 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 603;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_371, mod_consts[170]);
            Py_DECREF(tmp_expression_value_371);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 603;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_236 = mod_consts[189];
            Py_INCREF(tmp_defaults_236);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__334_lambda(tmp_defaults_236);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 603;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_376 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_376 == NULL)) {
                tmp_expression_value_376 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_376 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 604;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_375 = LOOKUP_ATTRIBUTE(tmp_expression_value_376, mod_consts[108]);
            if (tmp_expression_value_375 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 604;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_374 = LOOKUP_ATTRIBUTE(tmp_expression_value_375, mod_consts[109]);
            Py_DECREF(tmp_expression_value_375);
            if (tmp_expression_value_374 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 604;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_374, mod_consts[543]);
            Py_DECREF(tmp_expression_value_374);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 604;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_237 = mod_consts[189];
            Py_INCREF(tmp_defaults_237);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__335_lambda(tmp_defaults_237);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 604;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_379 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_379 == NULL)) {
                tmp_expression_value_379 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_379 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 605;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_378 = LOOKUP_ATTRIBUTE(tmp_expression_value_379, mod_consts[108]);
            if (tmp_expression_value_378 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 605;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_377 = LOOKUP_ATTRIBUTE(tmp_expression_value_378, mod_consts[109]);
            Py_DECREF(tmp_expression_value_378);
            if (tmp_expression_value_377 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 605;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_377, mod_consts[544]);
            Py_DECREF(tmp_expression_value_377);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 605;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_238 = mod_consts[189];
            Py_INCREF(tmp_defaults_238);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__336_lambda(tmp_defaults_238);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 605;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_382 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_382 == NULL)) {
                tmp_expression_value_382 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_382 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 606;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_381 = LOOKUP_ATTRIBUTE(tmp_expression_value_382, mod_consts[108]);
            if (tmp_expression_value_381 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 606;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_380 = LOOKUP_ATTRIBUTE(tmp_expression_value_381, mod_consts[109]);
            Py_DECREF(tmp_expression_value_381);
            if (tmp_expression_value_380 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 606;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_380, mod_consts[545]);
            Py_DECREF(tmp_expression_value_380);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 606;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_239 = mod_consts[189];
            Py_INCREF(tmp_defaults_239);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__337_lambda(tmp_defaults_239);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 606;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_385 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_385 == NULL)) {
                tmp_expression_value_385 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_385 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 607;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_384 = LOOKUP_ATTRIBUTE(tmp_expression_value_385, mod_consts[108]);
            if (tmp_expression_value_384 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 607;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_383 = LOOKUP_ATTRIBUTE(tmp_expression_value_384, mod_consts[109]);
            Py_DECREF(tmp_expression_value_384);
            if (tmp_expression_value_383 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 607;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_383, mod_consts[546]);
            Py_DECREF(tmp_expression_value_383);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 607;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_240 = mod_consts[189];
            Py_INCREF(tmp_defaults_240);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__338_lambda(tmp_defaults_240);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 607;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_388 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_388 == NULL)) {
                tmp_expression_value_388 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_388 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 608;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_387 = LOOKUP_ATTRIBUTE(tmp_expression_value_388, mod_consts[108]);
            if (tmp_expression_value_387 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 608;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_386 = LOOKUP_ATTRIBUTE(tmp_expression_value_387, mod_consts[109]);
            Py_DECREF(tmp_expression_value_387);
            if (tmp_expression_value_386 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 608;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_386, mod_consts[547]);
            Py_DECREF(tmp_expression_value_386);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 608;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_241 = mod_consts[189];
            Py_INCREF(tmp_defaults_241);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__339_lambda(tmp_defaults_241);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 608;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_391 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_391 == NULL)) {
                tmp_expression_value_391 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_391 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 609;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_390 = LOOKUP_ATTRIBUTE(tmp_expression_value_391, mod_consts[108]);
            if (tmp_expression_value_390 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 609;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_389 = LOOKUP_ATTRIBUTE(tmp_expression_value_390, mod_consts[109]);
            Py_DECREF(tmp_expression_value_390);
            if (tmp_expression_value_389 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 609;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_389, mod_consts[548]);
            Py_DECREF(tmp_expression_value_389);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 609;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_242 = mod_consts[164];
            Py_INCREF(tmp_defaults_242);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__340_lambda(tmp_defaults_242);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 609;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_394 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_394 == NULL)) {
                tmp_expression_value_394 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_394 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 610;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_393 = LOOKUP_ATTRIBUTE(tmp_expression_value_394, mod_consts[108]);
            if (tmp_expression_value_393 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 610;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_392 = LOOKUP_ATTRIBUTE(tmp_expression_value_393, mod_consts[109]);
            Py_DECREF(tmp_expression_value_393);
            if (tmp_expression_value_392 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 610;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_392, mod_consts[188]);
            Py_DECREF(tmp_expression_value_392);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 610;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_243 = mod_consts[549];
            Py_INCREF(tmp_defaults_243);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__341_lambda(tmp_defaults_243);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 610;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_397 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_397 == NULL)) {
                tmp_expression_value_397 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_397 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 611;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_396 = LOOKUP_ATTRIBUTE(tmp_expression_value_397, mod_consts[108]);
            if (tmp_expression_value_396 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 611;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_395 = LOOKUP_ATTRIBUTE(tmp_expression_value_396, mod_consts[109]);
            Py_DECREF(tmp_expression_value_396);
            if (tmp_expression_value_395 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 611;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_395, mod_consts[550]);
            Py_DECREF(tmp_expression_value_395);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 611;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_244 = mod_consts[551];
            Py_INCREF(tmp_defaults_244);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__342_lambda(tmp_defaults_244);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 611;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_400 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_400 == NULL)) {
                tmp_expression_value_400 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_400 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 613;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_399 = LOOKUP_ATTRIBUTE(tmp_expression_value_400, mod_consts[108]);
            if (tmp_expression_value_399 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 613;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_398 = LOOKUP_ATTRIBUTE(tmp_expression_value_399, mod_consts[109]);
            Py_DECREF(tmp_expression_value_399);
            if (tmp_expression_value_398 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 613;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_398, mod_consts[552]);
            Py_DECREF(tmp_expression_value_398);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 613;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_245 = mod_consts[551];
            Py_INCREF(tmp_defaults_245);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__343_lambda(tmp_defaults_245);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 613;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_403 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_403 == NULL)) {
                tmp_expression_value_403 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_403 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 615;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_402 = LOOKUP_ATTRIBUTE(tmp_expression_value_403, mod_consts[108]);
            if (tmp_expression_value_402 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 615;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_401 = LOOKUP_ATTRIBUTE(tmp_expression_value_402, mod_consts[109]);
            Py_DECREF(tmp_expression_value_402);
            if (tmp_expression_value_401 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 615;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_401, mod_consts[214]);
            Py_DECREF(tmp_expression_value_401);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 615;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_246 = mod_consts[553];
            Py_INCREF(tmp_defaults_246);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__344_lambda(tmp_defaults_246);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 615;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_406 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_406 == NULL)) {
                tmp_expression_value_406 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_406 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 617;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_405 = LOOKUP_ATTRIBUTE(tmp_expression_value_406, mod_consts[108]);
            if (tmp_expression_value_405 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 617;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_404 = LOOKUP_ATTRIBUTE(tmp_expression_value_405, mod_consts[109]);
            Py_DECREF(tmp_expression_value_405);
            if (tmp_expression_value_404 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 617;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_404, mod_consts[224]);
            Py_DECREF(tmp_expression_value_404);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 617;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_247 = mod_consts[164];
            Py_INCREF(tmp_defaults_247);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__345_lambda(tmp_defaults_247);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 617;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_409 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_409 == NULL)) {
                tmp_expression_value_409 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_409 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 618;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_408 = LOOKUP_ATTRIBUTE(tmp_expression_value_409, mod_consts[108]);
            if (tmp_expression_value_408 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 618;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_407 = LOOKUP_ATTRIBUTE(tmp_expression_value_408, mod_consts[109]);
            Py_DECREF(tmp_expression_value_408);
            if (tmp_expression_value_407 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 618;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_407, mod_consts[554]);
            Py_DECREF(tmp_expression_value_407);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 618;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_248 = mod_consts[555];
            Py_INCREF(tmp_defaults_248);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__346_lambda(tmp_defaults_248);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 618;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_412 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_412 == NULL)) {
                tmp_expression_value_412 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_412 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 620;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_411 = LOOKUP_ATTRIBUTE(tmp_expression_value_412, mod_consts[108]);
            if (tmp_expression_value_411 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 620;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_410 = LOOKUP_ATTRIBUTE(tmp_expression_value_411, mod_consts[109]);
            Py_DECREF(tmp_expression_value_411);
            if (tmp_expression_value_410 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 620;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_410, mod_consts[225]);
            Py_DECREF(tmp_expression_value_410);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 620;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_249 = mod_consts[226];
            Py_INCREF(tmp_defaults_249);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__347_lambda(tmp_defaults_249);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 620;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_415 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_415 == NULL)) {
                tmp_expression_value_415 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_415 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 622;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_414 = LOOKUP_ATTRIBUTE(tmp_expression_value_415, mod_consts[108]);
            if (tmp_expression_value_414 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 622;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_413 = LOOKUP_ATTRIBUTE(tmp_expression_value_414, mod_consts[109]);
            Py_DECREF(tmp_expression_value_414);
            if (tmp_expression_value_413 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 622;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_413, mod_consts[246]);
            Py_DECREF(tmp_expression_value_413);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 622;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_250 = mod_consts[247];
            Py_INCREF(tmp_defaults_250);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__348_lambda(tmp_defaults_250);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 622;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_418 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_418 == NULL)) {
                tmp_expression_value_418 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_418 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 623;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_417 = LOOKUP_ATTRIBUTE(tmp_expression_value_418, mod_consts[108]);
            if (tmp_expression_value_417 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 623;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_416 = LOOKUP_ATTRIBUTE(tmp_expression_value_417, mod_consts[109]);
            Py_DECREF(tmp_expression_value_417);
            if (tmp_expression_value_416 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 623;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_416, mod_consts[286]);
            Py_DECREF(tmp_expression_value_416);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 623;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_251 = mod_consts[287];
            Py_INCREF(tmp_defaults_251);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__349_lambda(tmp_defaults_251);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 623;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_421 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_421 == NULL)) {
                tmp_expression_value_421 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_421 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 625;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_420 = LOOKUP_ATTRIBUTE(tmp_expression_value_421, mod_consts[108]);
            if (tmp_expression_value_420 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 625;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_419 = LOOKUP_ATTRIBUTE(tmp_expression_value_420, mod_consts[109]);
            Py_DECREF(tmp_expression_value_420);
            if (tmp_expression_value_419 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 625;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_419, mod_consts[556]);
            Py_DECREF(tmp_expression_value_419);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 625;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_252 = mod_consts[557];
            Py_INCREF(tmp_defaults_252);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__350_lambda(tmp_defaults_252);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 625;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_424 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_424 == NULL)) {
                tmp_expression_value_424 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_424 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 627;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_423 = LOOKUP_ATTRIBUTE(tmp_expression_value_424, mod_consts[108]);
            if (tmp_expression_value_423 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 627;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_422 = LOOKUP_ATTRIBUTE(tmp_expression_value_423, mod_consts[109]);
            Py_DECREF(tmp_expression_value_423);
            if (tmp_expression_value_422 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 627;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_422, mod_consts[294]);
            Py_DECREF(tmp_expression_value_422);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 627;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_253 = mod_consts[295];
            Py_INCREF(tmp_defaults_253);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__351_lambda(tmp_defaults_253);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 627;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_427 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_427 == NULL)) {
                tmp_expression_value_427 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_427 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 629;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_426 = LOOKUP_ATTRIBUTE(tmp_expression_value_427, mod_consts[108]);
            if (tmp_expression_value_426 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 629;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_425 = LOOKUP_ATTRIBUTE(tmp_expression_value_426, mod_consts[109]);
            Py_DECREF(tmp_expression_value_426);
            if (tmp_expression_value_425 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 629;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_425, mod_consts[318]);
            Py_DECREF(tmp_expression_value_425);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 629;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_254 = mod_consts[558];
            Py_INCREF(tmp_defaults_254);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__352_lambda(tmp_defaults_254);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 629;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_430 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_430 == NULL)) {
                tmp_expression_value_430 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_430 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 630;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_429 = LOOKUP_ATTRIBUTE(tmp_expression_value_430, mod_consts[108]);
            if (tmp_expression_value_429 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 630;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_428 = LOOKUP_ATTRIBUTE(tmp_expression_value_429, mod_consts[109]);
            Py_DECREF(tmp_expression_value_429);
            if (tmp_expression_value_428 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 630;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_428, mod_consts[559]);
            Py_DECREF(tmp_expression_value_428);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 630;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_255 = mod_consts[558];
            Py_INCREF(tmp_defaults_255);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__353_lambda(tmp_defaults_255);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 630;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_433 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_433 == NULL)) {
                tmp_expression_value_433 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_433 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 631;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_432 = LOOKUP_ATTRIBUTE(tmp_expression_value_433, mod_consts[108]);
            if (tmp_expression_value_432 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 631;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_431 = LOOKUP_ATTRIBUTE(tmp_expression_value_432, mod_consts[109]);
            Py_DECREF(tmp_expression_value_432);
            if (tmp_expression_value_431 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 631;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_431, mod_consts[560]);
            Py_DECREF(tmp_expression_value_431);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 631;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_256 = mod_consts[558];
            Py_INCREF(tmp_defaults_256);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__354_lambda(tmp_defaults_256);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 631;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_436 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_436 == NULL)) {
                tmp_expression_value_436 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_436 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 632;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_435 = LOOKUP_ATTRIBUTE(tmp_expression_value_436, mod_consts[108]);
            if (tmp_expression_value_435 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 632;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_434 = LOOKUP_ATTRIBUTE(tmp_expression_value_435, mod_consts[109]);
            Py_DECREF(tmp_expression_value_435);
            if (tmp_expression_value_434 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 632;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_434, mod_consts[561]);
            Py_DECREF(tmp_expression_value_434);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 632;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_257 = mod_consts[247];
            Py_INCREF(tmp_defaults_257);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__355_lambda(tmp_defaults_257);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 632;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_439 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_439 == NULL)) {
                tmp_expression_value_439 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_439 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 633;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_438 = LOOKUP_ATTRIBUTE(tmp_expression_value_439, mod_consts[108]);
            if (tmp_expression_value_438 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 633;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_437 = LOOKUP_ATTRIBUTE(tmp_expression_value_438, mod_consts[109]);
            Py_DECREF(tmp_expression_value_438);
            if (tmp_expression_value_437 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 633;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_437, mod_consts[329]);
            Py_DECREF(tmp_expression_value_437);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 633;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_258 = mod_consts[330];
            Py_INCREF(tmp_defaults_258);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__356_lambda(tmp_defaults_258);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 633;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_442 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_442 == NULL)) {
                tmp_expression_value_442 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_442 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 635;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_441 = LOOKUP_ATTRIBUTE(tmp_expression_value_442, mod_consts[108]);
            if (tmp_expression_value_441 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 635;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_440 = LOOKUP_ATTRIBUTE(tmp_expression_value_441, mod_consts[109]);
            Py_DECREF(tmp_expression_value_441);
            if (tmp_expression_value_440 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 635;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_440, mod_consts[331]);
            Py_DECREF(tmp_expression_value_440);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 635;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_259 = mod_consts[562];
            Py_INCREF(tmp_defaults_259);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__357_lambda(tmp_defaults_259);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 635;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_445 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_445 == NULL)) {
                tmp_expression_value_445 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_445 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 638;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_444 = LOOKUP_ATTRIBUTE(tmp_expression_value_445, mod_consts[108]);
            if (tmp_expression_value_444 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 638;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_443 = LOOKUP_ATTRIBUTE(tmp_expression_value_444, mod_consts[109]);
            Py_DECREF(tmp_expression_value_444);
            if (tmp_expression_value_443 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 638;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_443, mod_consts[352]);
            Py_DECREF(tmp_expression_value_443);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 638;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_260 = mod_consts[549];
            Py_INCREF(tmp_defaults_260);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__358_lambda(tmp_defaults_260);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 638;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_448 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_448 == NULL)) {
                tmp_expression_value_448 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_448 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 639;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_447 = LOOKUP_ATTRIBUTE(tmp_expression_value_448, mod_consts[108]);
            if (tmp_expression_value_447 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 639;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_446 = LOOKUP_ATTRIBUTE(tmp_expression_value_447, mod_consts[109]);
            Py_DECREF(tmp_expression_value_447);
            if (tmp_expression_value_446 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 639;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_446, mod_consts[563]);
            Py_DECREF(tmp_expression_value_446);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 639;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_261 = mod_consts[564];
            Py_INCREF(tmp_defaults_261);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__359_lambda(tmp_defaults_261);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 639;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_451 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_451 == NULL)) {
                tmp_expression_value_451 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_451 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 640;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_450 = LOOKUP_ATTRIBUTE(tmp_expression_value_451, mod_consts[108]);
            if (tmp_expression_value_450 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 640;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_449 = LOOKUP_ATTRIBUTE(tmp_expression_value_450, mod_consts[109]);
            Py_DECREF(tmp_expression_value_450);
            if (tmp_expression_value_449 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 640;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_449, mod_consts[565]);
            Py_DECREF(tmp_expression_value_449);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 640;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_262 = mod_consts[566];
            Py_INCREF(tmp_defaults_262);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__360_lambda(tmp_defaults_262);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 640;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_454 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_454 == NULL)) {
                tmp_expression_value_454 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_454 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 642;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_453 = LOOKUP_ATTRIBUTE(tmp_expression_value_454, mod_consts[108]);
            if (tmp_expression_value_453 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 642;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_452 = LOOKUP_ATTRIBUTE(tmp_expression_value_453, mod_consts[109]);
            Py_DECREF(tmp_expression_value_453);
            if (tmp_expression_value_452 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 642;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_452, mod_consts[567]);
            Py_DECREF(tmp_expression_value_452);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 642;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_263 = mod_consts[566];
            Py_INCREF(tmp_defaults_263);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__361_lambda(tmp_defaults_263);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 643;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_457 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_457 == NULL)) {
                tmp_expression_value_457 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_457 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 645;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_456 = LOOKUP_ATTRIBUTE(tmp_expression_value_457, mod_consts[108]);
            if (tmp_expression_value_456 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 645;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_455 = LOOKUP_ATTRIBUTE(tmp_expression_value_456, mod_consts[109]);
            Py_DECREF(tmp_expression_value_456);
            if (tmp_expression_value_455 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 645;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_455, mod_consts[568]);
            Py_DECREF(tmp_expression_value_455);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 645;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_264 = mod_consts[566];
            Py_INCREF(tmp_defaults_264);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__362_lambda(tmp_defaults_264);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 645;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_460 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_460 == NULL)) {
                tmp_expression_value_460 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_460 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 647;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_459 = LOOKUP_ATTRIBUTE(tmp_expression_value_460, mod_consts[108]);
            if (tmp_expression_value_459 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 647;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_458 = LOOKUP_ATTRIBUTE(tmp_expression_value_459, mod_consts[109]);
            Py_DECREF(tmp_expression_value_459);
            if (tmp_expression_value_458 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 647;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_458, mod_consts[569]);
            Py_DECREF(tmp_expression_value_458);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 647;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_265 = mod_consts[566];
            Py_INCREF(tmp_defaults_265);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__363_lambda(tmp_defaults_265);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 648;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_463 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_463 == NULL)) {
                tmp_expression_value_463 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_463 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 650;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_462 = LOOKUP_ATTRIBUTE(tmp_expression_value_463, mod_consts[108]);
            if (tmp_expression_value_462 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 650;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_461 = LOOKUP_ATTRIBUTE(tmp_expression_value_462, mod_consts[109]);
            Py_DECREF(tmp_expression_value_462);
            if (tmp_expression_value_461 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 650;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_461, mod_consts[570]);
            Py_DECREF(tmp_expression_value_461);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 650;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_266 = mod_consts[571];
            Py_INCREF(tmp_defaults_266);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__364_lambda(tmp_defaults_266);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 650;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_466 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_466 == NULL)) {
                tmp_expression_value_466 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_466 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 651;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_465 = LOOKUP_ATTRIBUTE(tmp_expression_value_466, mod_consts[108]);
            if (tmp_expression_value_465 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 651;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_464 = LOOKUP_ATTRIBUTE(tmp_expression_value_465, mod_consts[109]);
            Py_DECREF(tmp_expression_value_465);
            if (tmp_expression_value_464 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 651;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_464, mod_consts[572]);
            Py_DECREF(tmp_expression_value_464);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 651;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__365_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 651;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_469 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_469 == NULL)) {
                tmp_expression_value_469 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_469 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 652;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_468 = LOOKUP_ATTRIBUTE(tmp_expression_value_469, mod_consts[108]);
            if (tmp_expression_value_468 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 652;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_467 = LOOKUP_ATTRIBUTE(tmp_expression_value_468, mod_consts[109]);
            Py_DECREF(tmp_expression_value_468);
            if (tmp_expression_value_467 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 652;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_467, mod_consts[573]);
            Py_DECREF(tmp_expression_value_467);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 652;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_267 = mod_consts[574];
            Py_INCREF(tmp_defaults_267);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__366_lambda(tmp_defaults_267);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 652;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_472 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_472 == NULL)) {
                tmp_expression_value_472 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_472 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 653;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_471 = LOOKUP_ATTRIBUTE(tmp_expression_value_472, mod_consts[108]);
            if (tmp_expression_value_471 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 653;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_470 = LOOKUP_ATTRIBUTE(tmp_expression_value_471, mod_consts[109]);
            Py_DECREF(tmp_expression_value_471);
            if (tmp_expression_value_470 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 653;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_470, mod_consts[575]);
            Py_DECREF(tmp_expression_value_470);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 653;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_268 = mod_consts[576];
            Py_INCREF(tmp_defaults_268);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__367_lambda(tmp_defaults_268);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 653;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_475 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_475 == NULL)) {
                tmp_expression_value_475 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_475 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 654;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_474 = LOOKUP_ATTRIBUTE(tmp_expression_value_475, mod_consts[108]);
            if (tmp_expression_value_474 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 654;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_473 = LOOKUP_ATTRIBUTE(tmp_expression_value_474, mod_consts[109]);
            Py_DECREF(tmp_expression_value_474);
            if (tmp_expression_value_473 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 654;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_473, mod_consts[403]);
            Py_DECREF(tmp_expression_value_473);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 654;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_269 = mod_consts[532];
            Py_INCREF(tmp_defaults_269);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__368_lambda(tmp_defaults_269);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 654;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_478 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_478 == NULL)) {
                tmp_expression_value_478 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_478 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 655;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_477 = LOOKUP_ATTRIBUTE(tmp_expression_value_478, mod_consts[108]);
            if (tmp_expression_value_477 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 655;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_476 = LOOKUP_ATTRIBUTE(tmp_expression_value_477, mod_consts[109]);
            Py_DECREF(tmp_expression_value_477);
            if (tmp_expression_value_476 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 655;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_476, mod_consts[577]);
            Py_DECREF(tmp_expression_value_476);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 655;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_270 = mod_consts[578];
            Py_INCREF(tmp_defaults_270);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__369_lambda(tmp_defaults_270);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 655;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_481 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_481 == NULL)) {
                tmp_expression_value_481 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_481 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 656;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_480 = LOOKUP_ATTRIBUTE(tmp_expression_value_481, mod_consts[108]);
            if (tmp_expression_value_480 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 656;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_479 = LOOKUP_ATTRIBUTE(tmp_expression_value_480, mod_consts[109]);
            Py_DECREF(tmp_expression_value_480);
            if (tmp_expression_value_479 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 656;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_479, mod_consts[409]);
            Py_DECREF(tmp_expression_value_479);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 656;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_271 = mod_consts[410];
            Py_INCREF(tmp_defaults_271);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__370_lambda(tmp_defaults_271);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 656;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_484 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_484 == NULL)) {
                tmp_expression_value_484 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_484 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 657;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_483 = LOOKUP_ATTRIBUTE(tmp_expression_value_484, mod_consts[108]);
            if (tmp_expression_value_483 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 657;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_482 = LOOKUP_ATTRIBUTE(tmp_expression_value_483, mod_consts[109]);
            Py_DECREF(tmp_expression_value_483);
            if (tmp_expression_value_482 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 657;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_482, mod_consts[579]);
            Py_DECREF(tmp_expression_value_482);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 657;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_272 = mod_consts[580];
            Py_INCREF(tmp_defaults_272);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__371_lambda(tmp_defaults_272);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 657;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_487 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_487 == NULL)) {
                tmp_expression_value_487 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_487 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 658;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_486 = LOOKUP_ATTRIBUTE(tmp_expression_value_487, mod_consts[108]);
            if (tmp_expression_value_486 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 658;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_485 = LOOKUP_ATTRIBUTE(tmp_expression_value_486, mod_consts[109]);
            Py_DECREF(tmp_expression_value_486);
            if (tmp_expression_value_485 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 658;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_485, mod_consts[412]);
            Py_DECREF(tmp_expression_value_485);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 658;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_273 = mod_consts[413];
            Py_INCREF(tmp_defaults_273);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__372_lambda(tmp_defaults_273);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 658;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_490 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_490 == NULL)) {
                tmp_expression_value_490 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_490 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 660;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_489 = LOOKUP_ATTRIBUTE(tmp_expression_value_490, mod_consts[108]);
            if (tmp_expression_value_489 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 660;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_488 = LOOKUP_ATTRIBUTE(tmp_expression_value_489, mod_consts[109]);
            Py_DECREF(tmp_expression_value_489);
            if (tmp_expression_value_488 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 660;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_488, mod_consts[434]);
            Py_DECREF(tmp_expression_value_488);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 660;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_274 = mod_consts[581];
            Py_INCREF(tmp_defaults_274);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__373_lambda(tmp_defaults_274);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 660;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_493 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_493 == NULL)) {
                tmp_expression_value_493 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_493 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 662;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_492 = LOOKUP_ATTRIBUTE(tmp_expression_value_493, mod_consts[108]);
            if (tmp_expression_value_492 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 662;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_491 = LOOKUP_ATTRIBUTE(tmp_expression_value_492, mod_consts[109]);
            Py_DECREF(tmp_expression_value_492);
            if (tmp_expression_value_491 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 662;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_491, mod_consts[582]);
            Py_DECREF(tmp_expression_value_491);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 662;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_275 = mod_consts[583];
            Py_INCREF(tmp_defaults_275);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__374_lambda(tmp_defaults_275);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 662;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_496 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_496 == NULL)) {
                tmp_expression_value_496 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_496 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 664;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_495 = LOOKUP_ATTRIBUTE(tmp_expression_value_496, mod_consts[108]);
            if (tmp_expression_value_495 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 664;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_494 = LOOKUP_ATTRIBUTE(tmp_expression_value_495, mod_consts[109]);
            Py_DECREF(tmp_expression_value_495);
            if (tmp_expression_value_494 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 664;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_494, mod_consts[449]);
            Py_DECREF(tmp_expression_value_494);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 664;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_276 = mod_consts[450];
            Py_INCREF(tmp_defaults_276);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__375_lambda(tmp_defaults_276);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 664;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_499 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_499 == NULL)) {
                tmp_expression_value_499 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_499 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 665;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_498 = LOOKUP_ATTRIBUTE(tmp_expression_value_499, mod_consts[108]);
            if (tmp_expression_value_498 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 665;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_497 = LOOKUP_ATTRIBUTE(tmp_expression_value_498, mod_consts[109]);
            Py_DECREF(tmp_expression_value_498);
            if (tmp_expression_value_497 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 665;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_497, mod_consts[584]);
            Py_DECREF(tmp_expression_value_497);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 665;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_277 = mod_consts[585];
            Py_INCREF(tmp_defaults_277);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__376_lambda(tmp_defaults_277);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 665;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_502 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_502 == NULL)) {
                tmp_expression_value_502 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_502 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 666;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_501 = LOOKUP_ATTRIBUTE(tmp_expression_value_502, mod_consts[108]);
            if (tmp_expression_value_501 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 666;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_500 = LOOKUP_ATTRIBUTE(tmp_expression_value_501, mod_consts[109]);
            Py_DECREF(tmp_expression_value_501);
            if (tmp_expression_value_500 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 666;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_500, mod_consts[453]);
            Py_DECREF(tmp_expression_value_500);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 666;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_278 = mod_consts[532];
            Py_INCREF(tmp_defaults_278);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__377_lambda(tmp_defaults_278);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 666;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_505 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_505 == NULL)) {
                tmp_expression_value_505 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_505 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 667;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_504 = LOOKUP_ATTRIBUTE(tmp_expression_value_505, mod_consts[108]);
            if (tmp_expression_value_504 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 667;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_503 = LOOKUP_ATTRIBUTE(tmp_expression_value_504, mod_consts[109]);
            Py_DECREF(tmp_expression_value_504);
            if (tmp_expression_value_503 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 667;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_503, mod_consts[586]);
            Py_DECREF(tmp_expression_value_503);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 667;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_279 = mod_consts[587];
            Py_INCREF(tmp_defaults_279);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__378_lambda(tmp_defaults_279);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 667;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_508 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_508 == NULL)) {
                tmp_expression_value_508 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_508 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 668;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_507 = LOOKUP_ATTRIBUTE(tmp_expression_value_508, mod_consts[108]);
            if (tmp_expression_value_507 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 668;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_506 = LOOKUP_ATTRIBUTE(tmp_expression_value_507, mod_consts[109]);
            Py_DECREF(tmp_expression_value_507);
            if (tmp_expression_value_506 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 668;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_506, mod_consts[588]);
            Py_DECREF(tmp_expression_value_506);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 668;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_280 = mod_consts[164];
            Py_INCREF(tmp_defaults_280);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__379_lambda(tmp_defaults_280);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 668;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_511 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_511 == NULL)) {
                tmp_expression_value_511 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_511 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 669;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_510 = LOOKUP_ATTRIBUTE(tmp_expression_value_511, mod_consts[108]);
            if (tmp_expression_value_510 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 669;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_509 = LOOKUP_ATTRIBUTE(tmp_expression_value_510, mod_consts[109]);
            Py_DECREF(tmp_expression_value_510);
            if (tmp_expression_value_509 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 669;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_509, mod_consts[589]);
            Py_DECREF(tmp_expression_value_509);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 669;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_281 = mod_consts[590];
            Py_INCREF(tmp_defaults_281);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__380_lambda(tmp_defaults_281);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 669;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_514 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_514 == NULL)) {
                tmp_expression_value_514 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_514 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 670;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_513 = LOOKUP_ATTRIBUTE(tmp_expression_value_514, mod_consts[108]);
            if (tmp_expression_value_513 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 670;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_512 = LOOKUP_ATTRIBUTE(tmp_expression_value_513, mod_consts[109]);
            Py_DECREF(tmp_expression_value_513);
            if (tmp_expression_value_512 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 670;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_512, mod_consts[463]);
            Py_DECREF(tmp_expression_value_512);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 670;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_282 = mod_consts[591];
            Py_INCREF(tmp_defaults_282);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__381_lambda(tmp_defaults_282);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 670;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_517 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_517 == NULL)) {
                tmp_expression_value_517 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_517 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 671;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_516 = LOOKUP_ATTRIBUTE(tmp_expression_value_517, mod_consts[108]);
            if (tmp_expression_value_516 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 671;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_515 = LOOKUP_ATTRIBUTE(tmp_expression_value_516, mod_consts[109]);
            Py_DECREF(tmp_expression_value_516);
            if (tmp_expression_value_515 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 671;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_515, mod_consts[592]);
            Py_DECREF(tmp_expression_value_515);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 671;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__382_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 671;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_520 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_520 == NULL)) {
                tmp_expression_value_520 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_520 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 672;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_519 = LOOKUP_ATTRIBUTE(tmp_expression_value_520, mod_consts[108]);
            if (tmp_expression_value_519 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 672;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_518 = LOOKUP_ATTRIBUTE(tmp_expression_value_519, mod_consts[109]);
            Py_DECREF(tmp_expression_value_519);
            if (tmp_expression_value_518 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 672;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_518, mod_consts[593]);
            Py_DECREF(tmp_expression_value_518);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 672;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_283 = mod_consts[389];
            Py_INCREF(tmp_defaults_283);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__383_lambda(tmp_defaults_283);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 672;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_523 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_523 == NULL)) {
                tmp_expression_value_523 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_523 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 673;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_522 = LOOKUP_ATTRIBUTE(tmp_expression_value_523, mod_consts[108]);
            if (tmp_expression_value_522 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 673;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_521 = LOOKUP_ATTRIBUTE(tmp_expression_value_522, mod_consts[109]);
            Py_DECREF(tmp_expression_value_522);
            if (tmp_expression_value_521 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 673;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_521, mod_consts[594]);
            Py_DECREF(tmp_expression_value_521);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 673;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_284 = mod_consts[389];
            Py_INCREF(tmp_defaults_284);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__384_lambda(tmp_defaults_284);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 673;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_526 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_526 == NULL)) {
                tmp_expression_value_526 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_526 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 674;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_525 = LOOKUP_ATTRIBUTE(tmp_expression_value_526, mod_consts[108]);
            if (tmp_expression_value_525 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 674;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_524 = LOOKUP_ATTRIBUTE(tmp_expression_value_525, mod_consts[109]);
            Py_DECREF(tmp_expression_value_525);
            if (tmp_expression_value_524 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 674;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_524, mod_consts[485]);
            Py_DECREF(tmp_expression_value_524);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 674;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_285 = mod_consts[287];
            Py_INCREF(tmp_defaults_285);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__385_lambda(tmp_defaults_285);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 674;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_529 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_529 == NULL)) {
                tmp_expression_value_529 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_529 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 676;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_528 = LOOKUP_ATTRIBUTE(tmp_expression_value_529, mod_consts[108]);
            if (tmp_expression_value_528 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 676;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_527 = LOOKUP_ATTRIBUTE(tmp_expression_value_528, mod_consts[109]);
            Py_DECREF(tmp_expression_value_528);
            if (tmp_expression_value_527 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 676;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_527, mod_consts[497]);
            Py_DECREF(tmp_expression_value_527);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 676;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_286 = mod_consts[502];
            Py_INCREF(tmp_defaults_286);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__386_lambda(tmp_defaults_286);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 676;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_532 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_532 == NULL)) {
                tmp_expression_value_532 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_532 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 678;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_531 = LOOKUP_ATTRIBUTE(tmp_expression_value_532, mod_consts[108]);
            if (tmp_expression_value_531 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 678;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_530 = LOOKUP_ATTRIBUTE(tmp_expression_value_531, mod_consts[109]);
            Py_DECREF(tmp_expression_value_531);
            if (tmp_expression_value_530 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 678;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_530, mod_consts[501]);
            Py_DECREF(tmp_expression_value_530);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 678;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_287 = mod_consts[502];
            Py_INCREF(tmp_defaults_287);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__387_lambda(tmp_defaults_287);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 678;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_535 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_535 == NULL)) {
                tmp_expression_value_535 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_535 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 680;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_534 = LOOKUP_ATTRIBUTE(tmp_expression_value_535, mod_consts[108]);
            if (tmp_expression_value_534 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 680;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_533 = LOOKUP_ATTRIBUTE(tmp_expression_value_534, mod_consts[109]);
            Py_DECREF(tmp_expression_value_534);
            if (tmp_expression_value_533 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 680;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_533, mod_consts[499]);
            Py_DECREF(tmp_expression_value_533);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 680;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_288 = mod_consts[502];
            Py_INCREF(tmp_defaults_288);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__388_lambda(tmp_defaults_288);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 680;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_538 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_538 == NULL)) {
                tmp_expression_value_538 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_538 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 682;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_537 = LOOKUP_ATTRIBUTE(tmp_expression_value_538, mod_consts[108]);
            if (tmp_expression_value_537 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 682;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_536 = LOOKUP_ATTRIBUTE(tmp_expression_value_537, mod_consts[109]);
            Py_DECREF(tmp_expression_value_537);
            if (tmp_expression_value_536 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 682;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_536, mod_consts[595]);
            Py_DECREF(tmp_expression_value_536);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 682;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_289 = mod_consts[502];
            Py_INCREF(tmp_defaults_289);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__389_lambda(tmp_defaults_289);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 682;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_541 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_541 == NULL)) {
                tmp_expression_value_541 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_541 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 684;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_540 = LOOKUP_ATTRIBUTE(tmp_expression_value_541, mod_consts[108]);
            if (tmp_expression_value_540 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 684;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_539 = LOOKUP_ATTRIBUTE(tmp_expression_value_540, mod_consts[109]);
            Py_DECREF(tmp_expression_value_540);
            if (tmp_expression_value_539 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 684;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_539, mod_consts[500]);
            Py_DECREF(tmp_expression_value_539);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 684;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_290 = mod_consts[502];
            Py_INCREF(tmp_defaults_290);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__390_lambda(tmp_defaults_290);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 684;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_544 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_544 == NULL)) {
                tmp_expression_value_544 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_544 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 686;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_543 = LOOKUP_ATTRIBUTE(tmp_expression_value_544, mod_consts[108]);
            if (tmp_expression_value_543 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 686;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_542 = LOOKUP_ATTRIBUTE(tmp_expression_value_543, mod_consts[109]);
            Py_DECREF(tmp_expression_value_543);
            if (tmp_expression_value_542 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 686;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_542, mod_consts[596]);
            Py_DECREF(tmp_expression_value_542);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 686;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_291 = mod_consts[502];
            Py_INCREF(tmp_defaults_291);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__391_lambda(tmp_defaults_291);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 686;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_547 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_547 == NULL)) {
                tmp_expression_value_547 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_547 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 688;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_546 = LOOKUP_ATTRIBUTE(tmp_expression_value_547, mod_consts[108]);
            if (tmp_expression_value_546 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 688;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_545 = LOOKUP_ATTRIBUTE(tmp_expression_value_546, mod_consts[109]);
            Py_DECREF(tmp_expression_value_546);
            if (tmp_expression_value_545 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 688;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_545, mod_consts[597]);
            Py_DECREF(tmp_expression_value_545);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 688;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_292 = mod_consts[598];
            Py_INCREF(tmp_defaults_292);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__392_lambda(tmp_defaults_292);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 688;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_550 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_550 == NULL)) {
                tmp_expression_value_550 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_550 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 689;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_549 = LOOKUP_ATTRIBUTE(tmp_expression_value_550, mod_consts[108]);
            if (tmp_expression_value_549 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 689;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_548 = LOOKUP_ATTRIBUTE(tmp_expression_value_549, mod_consts[109]);
            Py_DECREF(tmp_expression_value_549);
            if (tmp_expression_value_548 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 689;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_548, mod_consts[599]);
            Py_DECREF(tmp_expression_value_548);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 689;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_293 = mod_consts[598];
            Py_INCREF(tmp_defaults_293);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__393_lambda(tmp_defaults_293);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 689;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_553 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_553 == NULL)) {
                tmp_expression_value_553 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_553 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 690;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_552 = LOOKUP_ATTRIBUTE(tmp_expression_value_553, mod_consts[108]);
            if (tmp_expression_value_552 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 690;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_551 = LOOKUP_ATTRIBUTE(tmp_expression_value_552, mod_consts[109]);
            Py_DECREF(tmp_expression_value_552);
            if (tmp_expression_value_551 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 690;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_551, mod_consts[600]);
            Py_DECREF(tmp_expression_value_551);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 690;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_294 = mod_consts[598];
            Py_INCREF(tmp_defaults_294);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__394_lambda(tmp_defaults_294);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 690;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_556 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_556 == NULL)) {
                tmp_expression_value_556 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_556 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 691;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_555 = LOOKUP_ATTRIBUTE(tmp_expression_value_556, mod_consts[108]);
            if (tmp_expression_value_555 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 691;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_554 = LOOKUP_ATTRIBUTE(tmp_expression_value_555, mod_consts[109]);
            Py_DECREF(tmp_expression_value_555);
            if (tmp_expression_value_554 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 691;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_554, mod_consts[601]);
            Py_DECREF(tmp_expression_value_554);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 691;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_295 = mod_consts[585];
            Py_INCREF(tmp_defaults_295);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__395_lambda(tmp_defaults_295);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 691;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_559 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_559 == NULL)) {
                tmp_expression_value_559 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_559 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 692;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_558 = LOOKUP_ATTRIBUTE(tmp_expression_value_559, mod_consts[108]);
            if (tmp_expression_value_558 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 692;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_557 = LOOKUP_ATTRIBUTE(tmp_expression_value_558, mod_consts[109]);
            Py_DECREF(tmp_expression_value_558);
            if (tmp_expression_value_557 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 692;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_557, mod_consts[602]);
            Py_DECREF(tmp_expression_value_557);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 692;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_296 = mod_consts[603];
            Py_INCREF(tmp_defaults_296);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__396_lambda(tmp_defaults_296);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 693;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_562 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_562 == NULL)) {
                tmp_expression_value_562 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_562 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_561 = LOOKUP_ATTRIBUTE(tmp_expression_value_562, mod_consts[108]);
            if (tmp_expression_value_561 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_560 = LOOKUP_ATTRIBUTE(tmp_expression_value_561, mod_consts[109]);
            Py_DECREF(tmp_expression_value_561);
            if (tmp_expression_value_560 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_560, mod_consts[604]);
            Py_DECREF(tmp_expression_value_560);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_297 = mod_consts[605];
            Py_INCREF(tmp_defaults_297);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__397_lambda(tmp_defaults_297);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 697;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_565 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_565 == NULL)) {
                tmp_expression_value_565 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_565 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 699;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_564 = LOOKUP_ATTRIBUTE(tmp_expression_value_565, mod_consts[108]);
            if (tmp_expression_value_564 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 699;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_563 = LOOKUP_ATTRIBUTE(tmp_expression_value_564, mod_consts[109]);
            Py_DECREF(tmp_expression_value_564);
            if (tmp_expression_value_563 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 699;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_563, mod_consts[606]);
            Py_DECREF(tmp_expression_value_563);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 699;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_298 = mod_consts[585];
            Py_INCREF(tmp_defaults_298);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__398_lambda(tmp_defaults_298);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 699;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_568 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_568 == NULL)) {
                tmp_expression_value_568 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_568 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 701;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_567 = LOOKUP_ATTRIBUTE(tmp_expression_value_568, mod_consts[108]);
            if (tmp_expression_value_567 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 701;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_566 = LOOKUP_ATTRIBUTE(tmp_expression_value_567, mod_consts[109]);
            Py_DECREF(tmp_expression_value_567);
            if (tmp_expression_value_566 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 701;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_566, mod_consts[607]);
            Py_DECREF(tmp_expression_value_566);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 701;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_299 = mod_consts[555];
            Py_INCREF(tmp_defaults_299);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__399_lambda(tmp_defaults_299);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 701;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_571 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_571 == NULL)) {
                tmp_expression_value_571 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_571 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 703;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_570 = LOOKUP_ATTRIBUTE(tmp_expression_value_571, mod_consts[108]);
            if (tmp_expression_value_570 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 703;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_569 = LOOKUP_ATTRIBUTE(tmp_expression_value_570, mod_consts[109]);
            Py_DECREF(tmp_expression_value_570);
            if (tmp_expression_value_569 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 703;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_569, mod_consts[608]);
            Py_DECREF(tmp_expression_value_569);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 703;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_300 = mod_consts[557];
            Py_INCREF(tmp_defaults_300);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__400_lambda(tmp_defaults_300);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 703;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_574 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_574 == NULL)) {
                tmp_expression_value_574 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_574 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 705;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_573 = LOOKUP_ATTRIBUTE(tmp_expression_value_574, mod_consts[108]);
            if (tmp_expression_value_573 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 705;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_572 = LOOKUP_ATTRIBUTE(tmp_expression_value_573, mod_consts[109]);
            Py_DECREF(tmp_expression_value_573);
            if (tmp_expression_value_572 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 705;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_572, mod_consts[609]);
            Py_DECREF(tmp_expression_value_572);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 705;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_301 = mod_consts[610];
            Py_INCREF(tmp_defaults_301);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__401_lambda(tmp_defaults_301);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 705;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_577 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_577 == NULL)) {
                tmp_expression_value_577 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_577 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 706;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_576 = LOOKUP_ATTRIBUTE(tmp_expression_value_577, mod_consts[108]);
            if (tmp_expression_value_576 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 706;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_575 = LOOKUP_ATTRIBUTE(tmp_expression_value_576, mod_consts[109]);
            Py_DECREF(tmp_expression_value_576);
            if (tmp_expression_value_575 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 706;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_575, mod_consts[611]);
            Py_DECREF(tmp_expression_value_575);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 706;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_302 = mod_consts[574];
            Py_INCREF(tmp_defaults_302);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__402_lambda(tmp_defaults_302);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 706;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_580 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_580 == NULL)) {
                tmp_expression_value_580 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_580 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 707;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_579 = LOOKUP_ATTRIBUTE(tmp_expression_value_580, mod_consts[108]);
            if (tmp_expression_value_579 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 707;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_578 = LOOKUP_ATTRIBUTE(tmp_expression_value_579, mod_consts[109]);
            Py_DECREF(tmp_expression_value_579);
            if (tmp_expression_value_578 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 707;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_578, mod_consts[612]);
            Py_DECREF(tmp_expression_value_578);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 707;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_303 = mod_consts[613];
            Py_INCREF(tmp_defaults_303);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__403_lambda(tmp_defaults_303);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 707;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_583 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_583 == NULL)) {
                tmp_expression_value_583 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_583 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 708;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_582 = LOOKUP_ATTRIBUTE(tmp_expression_value_583, mod_consts[108]);
            if (tmp_expression_value_582 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 708;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_581 = LOOKUP_ATTRIBUTE(tmp_expression_value_582, mod_consts[109]);
            Py_DECREF(tmp_expression_value_582);
            if (tmp_expression_value_581 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 708;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_581, mod_consts[614]);
            Py_DECREF(tmp_expression_value_581);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 708;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_304 = mod_consts[615];
            Py_INCREF(tmp_defaults_304);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__404_lambda(tmp_defaults_304);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 708;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_586 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_586 == NULL)) {
                tmp_expression_value_586 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_586 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 709;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_585 = LOOKUP_ATTRIBUTE(tmp_expression_value_586, mod_consts[108]);
            if (tmp_expression_value_585 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 709;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_584 = LOOKUP_ATTRIBUTE(tmp_expression_value_585, mod_consts[109]);
            Py_DECREF(tmp_expression_value_585);
            if (tmp_expression_value_584 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 709;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_584, mod_consts[616]);
            Py_DECREF(tmp_expression_value_584);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 709;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_305 = mod_consts[617];
            Py_INCREF(tmp_defaults_305);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__405_lambda(tmp_defaults_305);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 709;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_589 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_589 == NULL)) {
                tmp_expression_value_589 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_589 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 711;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_588 = LOOKUP_ATTRIBUTE(tmp_expression_value_589, mod_consts[108]);
            if (tmp_expression_value_588 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 711;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_587 = LOOKUP_ATTRIBUTE(tmp_expression_value_588, mod_consts[109]);
            Py_DECREF(tmp_expression_value_588);
            if (tmp_expression_value_587 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 711;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_587, mod_consts[618]);
            Py_DECREF(tmp_expression_value_587);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 711;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__406_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 711;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_592 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_592 == NULL)) {
                tmp_expression_value_592 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_592 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 712;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_591 = LOOKUP_ATTRIBUTE(tmp_expression_value_592, mod_consts[108]);
            if (tmp_expression_value_591 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 712;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_590 = LOOKUP_ATTRIBUTE(tmp_expression_value_591, mod_consts[109]);
            Py_DECREF(tmp_expression_value_591);
            if (tmp_expression_value_590 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 712;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_590, mod_consts[619]);
            Py_DECREF(tmp_expression_value_590);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 712;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_306 = mod_consts[189];
            Py_INCREF(tmp_defaults_306);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__407_lambda(tmp_defaults_306);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 712;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_595 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_595 == NULL)) {
                tmp_expression_value_595 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_595 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 713;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_594 = LOOKUP_ATTRIBUTE(tmp_expression_value_595, mod_consts[108]);
            if (tmp_expression_value_594 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 713;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_593 = LOOKUP_ATTRIBUTE(tmp_expression_value_594, mod_consts[109]);
            Py_DECREF(tmp_expression_value_594);
            if (tmp_expression_value_593 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 713;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_593, mod_consts[620]);
            Py_DECREF(tmp_expression_value_593);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 713;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_307 = mod_consts[189];
            Py_INCREF(tmp_defaults_307);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__408_lambda(tmp_defaults_307);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 713;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_598 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_598 == NULL)) {
                tmp_expression_value_598 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_598 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 714;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_597 = LOOKUP_ATTRIBUTE(tmp_expression_value_598, mod_consts[108]);
            if (tmp_expression_value_597 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 714;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_596 = LOOKUP_ATTRIBUTE(tmp_expression_value_597, mod_consts[109]);
            Py_DECREF(tmp_expression_value_597);
            if (tmp_expression_value_596 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 714;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_596, mod_consts[621]);
            Py_DECREF(tmp_expression_value_596);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 714;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_308 = mod_consts[622];
            Py_INCREF(tmp_defaults_308);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__409_lambda(tmp_defaults_308);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 714;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_601 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_601 == NULL)) {
                tmp_expression_value_601 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_601 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 715;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_600 = LOOKUP_ATTRIBUTE(tmp_expression_value_601, mod_consts[108]);
            if (tmp_expression_value_600 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 715;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_599 = LOOKUP_ATTRIBUTE(tmp_expression_value_600, mod_consts[109]);
            Py_DECREF(tmp_expression_value_600);
            if (tmp_expression_value_599 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 715;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_599, mod_consts[623]);
            Py_DECREF(tmp_expression_value_599);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 715;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_309 = mod_consts[189];
            Py_INCREF(tmp_defaults_309);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__410_lambda(tmp_defaults_309);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 715;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_604 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_604 == NULL)) {
                tmp_expression_value_604 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_604 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 716;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_603 = LOOKUP_ATTRIBUTE(tmp_expression_value_604, mod_consts[108]);
            if (tmp_expression_value_603 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 716;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_602 = LOOKUP_ATTRIBUTE(tmp_expression_value_603, mod_consts[109]);
            Py_DECREF(tmp_expression_value_603);
            if (tmp_expression_value_602 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 716;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_602, mod_consts[624]);
            Py_DECREF(tmp_expression_value_602);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 716;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_310 = mod_consts[189];
            Py_INCREF(tmp_defaults_310);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__411_lambda(tmp_defaults_310);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 716;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_607 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_607 == NULL)) {
                tmp_expression_value_607 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_607 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 717;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_606 = LOOKUP_ATTRIBUTE(tmp_expression_value_607, mod_consts[108]);
            if (tmp_expression_value_606 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 717;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_605 = LOOKUP_ATTRIBUTE(tmp_expression_value_606, mod_consts[109]);
            Py_DECREF(tmp_expression_value_606);
            if (tmp_expression_value_605 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 717;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_605, mod_consts[625]);
            Py_DECREF(tmp_expression_value_605);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 717;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_311 = mod_consts[189];
            Py_INCREF(tmp_defaults_311);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__412_lambda(tmp_defaults_311);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 717;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_610 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_610 == NULL)) {
                tmp_expression_value_610 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_610 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 718;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_609 = LOOKUP_ATTRIBUTE(tmp_expression_value_610, mod_consts[108]);
            if (tmp_expression_value_609 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 718;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_608 = LOOKUP_ATTRIBUTE(tmp_expression_value_609, mod_consts[109]);
            Py_DECREF(tmp_expression_value_609);
            if (tmp_expression_value_608 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 718;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_608, mod_consts[626]);
            Py_DECREF(tmp_expression_value_608);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 718;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_312 = mod_consts[627];
            Py_INCREF(tmp_defaults_312);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__413_lambda(tmp_defaults_312);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 718;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_613 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_613 == NULL)) {
                tmp_expression_value_613 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_613 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 719;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_612 = LOOKUP_ATTRIBUTE(tmp_expression_value_613, mod_consts[108]);
            if (tmp_expression_value_612 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 719;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_611 = LOOKUP_ATTRIBUTE(tmp_expression_value_612, mod_consts[109]);
            Py_DECREF(tmp_expression_value_612);
            if (tmp_expression_value_611 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 719;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_611, mod_consts[628]);
            Py_DECREF(tmp_expression_value_611);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 719;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_313 = mod_consts[629];
            Py_INCREF(tmp_defaults_313);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__414_lambda(tmp_defaults_313);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 719;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_616 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_616 == NULL)) {
                tmp_expression_value_616 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_616 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 720;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_615 = LOOKUP_ATTRIBUTE(tmp_expression_value_616, mod_consts[108]);
            if (tmp_expression_value_615 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 720;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_614 = LOOKUP_ATTRIBUTE(tmp_expression_value_615, mod_consts[109]);
            Py_DECREF(tmp_expression_value_615);
            if (tmp_expression_value_614 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 720;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_614, mod_consts[630]);
            Py_DECREF(tmp_expression_value_614);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 720;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_314 = mod_consts[585];
            Py_INCREF(tmp_defaults_314);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__415_lambda(tmp_defaults_314);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 720;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_619 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_619 == NULL)) {
                tmp_expression_value_619 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_619 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 721;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_618 = LOOKUP_ATTRIBUTE(tmp_expression_value_619, mod_consts[108]);
            if (tmp_expression_value_618 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 721;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_617 = LOOKUP_ATTRIBUTE(tmp_expression_value_618, mod_consts[109]);
            Py_DECREF(tmp_expression_value_618);
            if (tmp_expression_value_617 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 721;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_617, mod_consts[631]);
            Py_DECREF(tmp_expression_value_617);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 721;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_315 = mod_consts[591];
            Py_INCREF(tmp_defaults_315);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__416_lambda(tmp_defaults_315);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 721;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_622 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_622 == NULL)) {
                tmp_expression_value_622 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_622 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 722;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_621 = LOOKUP_ATTRIBUTE(tmp_expression_value_622, mod_consts[108]);
            if (tmp_expression_value_621 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 722;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_620 = LOOKUP_ATTRIBUTE(tmp_expression_value_621, mod_consts[109]);
            Py_DECREF(tmp_expression_value_621);
            if (tmp_expression_value_620 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 722;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_620, mod_consts[632]);
            Py_DECREF(tmp_expression_value_620);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 722;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_316 = mod_consts[591];
            Py_INCREF(tmp_defaults_316);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__417_lambda(tmp_defaults_316);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 722;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_625 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_625 == NULL)) {
                tmp_expression_value_625 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_625 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 723;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_624 = LOOKUP_ATTRIBUTE(tmp_expression_value_625, mod_consts[108]);
            if (tmp_expression_value_624 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 723;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_623 = LOOKUP_ATTRIBUTE(tmp_expression_value_624, mod_consts[109]);
            Py_DECREF(tmp_expression_value_624);
            if (tmp_expression_value_623 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 723;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_623, mod_consts[633]);
            Py_DECREF(tmp_expression_value_623);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 723;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_317 = mod_consts[634];
            Py_INCREF(tmp_defaults_317);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__418_lambda(tmp_defaults_317);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 723;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_628 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_628 == NULL)) {
                tmp_expression_value_628 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_628 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 724;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_627 = LOOKUP_ATTRIBUTE(tmp_expression_value_628, mod_consts[108]);
            if (tmp_expression_value_627 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 724;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_626 = LOOKUP_ATTRIBUTE(tmp_expression_value_627, mod_consts[109]);
            Py_DECREF(tmp_expression_value_627);
            if (tmp_expression_value_626 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 724;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_626, mod_consts[635]);
            Py_DECREF(tmp_expression_value_626);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 724;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_318 = mod_consts[410];
            Py_INCREF(tmp_defaults_318);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__419_lambda(tmp_defaults_318);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 724;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_631 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_631 == NULL)) {
                tmp_expression_value_631 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_631 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 725;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_630 = LOOKUP_ATTRIBUTE(tmp_expression_value_631, mod_consts[108]);
            if (tmp_expression_value_630 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 725;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_629 = LOOKUP_ATTRIBUTE(tmp_expression_value_630, mod_consts[109]);
            Py_DECREF(tmp_expression_value_630);
            if (tmp_expression_value_629 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 725;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_629, mod_consts[636]);
            Py_DECREF(tmp_expression_value_629);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 725;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__420_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 725;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_634 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_634 == NULL)) {
                tmp_expression_value_634 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_634 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 726;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_633 = LOOKUP_ATTRIBUTE(tmp_expression_value_634, mod_consts[108]);
            if (tmp_expression_value_633 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 726;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_632 = LOOKUP_ATTRIBUTE(tmp_expression_value_633, mod_consts[109]);
            Py_DECREF(tmp_expression_value_633);
            if (tmp_expression_value_632 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 726;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_632, mod_consts[637]);
            Py_DECREF(tmp_expression_value_632);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 726;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__421_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 726;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_637 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_637 == NULL)) {
                tmp_expression_value_637 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_637 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 727;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_636 = LOOKUP_ATTRIBUTE(tmp_expression_value_637, mod_consts[108]);
            if (tmp_expression_value_636 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 727;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_635 = LOOKUP_ATTRIBUTE(tmp_expression_value_636, mod_consts[109]);
            Py_DECREF(tmp_expression_value_636);
            if (tmp_expression_value_635 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 727;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_635, mod_consts[638]);
            Py_DECREF(tmp_expression_value_635);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 727;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_319 = mod_consts[189];
            Py_INCREF(tmp_defaults_319);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__422_lambda(tmp_defaults_319);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 727;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_640 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_640 == NULL)) {
                tmp_expression_value_640 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_640 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 728;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_639 = LOOKUP_ATTRIBUTE(tmp_expression_value_640, mod_consts[108]);
            if (tmp_expression_value_639 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 728;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_638 = LOOKUP_ATTRIBUTE(tmp_expression_value_639, mod_consts[109]);
            Py_DECREF(tmp_expression_value_639);
            if (tmp_expression_value_638 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 728;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_638, mod_consts[639]);
            Py_DECREF(tmp_expression_value_638);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 728;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_320 = mod_consts[640];
            Py_INCREF(tmp_defaults_320);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__423_lambda(tmp_defaults_320);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 728;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_643 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_643 == NULL)) {
                tmp_expression_value_643 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_643 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 730;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_642 = LOOKUP_ATTRIBUTE(tmp_expression_value_643, mod_consts[108]);
            if (tmp_expression_value_642 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 730;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_641 = LOOKUP_ATTRIBUTE(tmp_expression_value_642, mod_consts[109]);
            Py_DECREF(tmp_expression_value_642);
            if (tmp_expression_value_641 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 730;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_641, mod_consts[641]);
            Py_DECREF(tmp_expression_value_641);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 730;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_kw_defaults_2 = PyDict_Copy(mod_consts[642]);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__424_lambda(tmp_kw_defaults_2);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 730;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_646 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_646 == NULL)) {
                tmp_expression_value_646 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_646 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 733;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_645 = LOOKUP_ATTRIBUTE(tmp_expression_value_646, mod_consts[108]);
            if (tmp_expression_value_645 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 733;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_644 = LOOKUP_ATTRIBUTE(tmp_expression_value_645, mod_consts[109]);
            Py_DECREF(tmp_expression_value_645);
            if (tmp_expression_value_644 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 733;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_644, mod_consts[643]);
            Py_DECREF(tmp_expression_value_644);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 733;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_321 = mod_consts[564];
            Py_INCREF(tmp_defaults_321);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__425_lambda(tmp_defaults_321);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 733;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_647 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_647 == NULL)) {
                tmp_expression_value_647 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_647 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 734;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_647, mod_consts[644]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 734;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_322 = mod_consts[189];
            Py_INCREF(tmp_defaults_322);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__426_lambda(tmp_defaults_322);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 734;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_648 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_648 == NULL)) {
                tmp_expression_value_648 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_648 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 735;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_648, mod_consts[645]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 735;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_323 = mod_consts[646];
            Py_INCREF(tmp_defaults_323);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__427_lambda(tmp_defaults_323);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 735;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_650 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_650 == NULL)) {
                tmp_expression_value_650 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_650 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 736;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_649 = LOOKUP_ATTRIBUTE(tmp_expression_value_650, mod_consts[253]);
            if (tmp_expression_value_649 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 736;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_649, mod_consts[645]);
            Py_DECREF(tmp_expression_value_649);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 736;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_324 = mod_consts[647];
            Py_INCREF(tmp_defaults_324);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__428_lambda(tmp_defaults_324);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 736;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_652 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_652 == NULL)) {
                tmp_expression_value_652 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_652 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 737;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_651 = LOOKUP_ATTRIBUTE(tmp_expression_value_652, mod_consts[253]);
            if (tmp_expression_value_651 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 737;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_651, mod_consts[648]);
            Py_DECREF(tmp_expression_value_651);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 737;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_325 = mod_consts[649];
            Py_INCREF(tmp_defaults_325);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__429_lambda(tmp_defaults_325);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 737;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_654 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_654 == NULL)) {
                tmp_expression_value_654 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_654 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 738;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_653 = LOOKUP_ATTRIBUTE(tmp_expression_value_654, mod_consts[253]);
            if (tmp_expression_value_653 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 738;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_653, mod_consts[650]);
            Py_DECREF(tmp_expression_value_653);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 738;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_326 = mod_consts[651];
            Py_INCREF(tmp_defaults_326);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__430_lambda(tmp_defaults_326);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 738;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_655 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_655 == NULL)) {
                tmp_expression_value_655 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_655 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 739;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_655, mod_consts[652]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 739;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_327 = mod_consts[653];
            Py_INCREF(tmp_defaults_327);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__431_lambda(tmp_defaults_327);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 739;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_656 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_656 == NULL)) {
                tmp_expression_value_656 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_656 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 740;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_656, mod_consts[654]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 740;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_328 = mod_consts[646];
            Py_INCREF(tmp_defaults_328);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__432_lambda(tmp_defaults_328);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 740;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_657 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_657 == NULL)) {
                tmp_expression_value_657 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_657 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 741;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_657, mod_consts[655]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 741;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__433_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 741;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_658 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_658 == NULL)) {
                tmp_expression_value_658 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_658 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 742;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_658, mod_consts[656]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 742;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__434_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 742;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_659 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_659 == NULL)) {
                tmp_expression_value_659 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_659 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 743;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_659, mod_consts[657]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 743;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_329 = mod_consts[658];
            Py_INCREF(tmp_defaults_329);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__435_lambda(tmp_defaults_329);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 743;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_660 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_660 == NULL)) {
                tmp_expression_value_660 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_660 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 744;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_660, mod_consts[614]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 744;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_330 = mod_consts[615];
            Py_INCREF(tmp_defaults_330);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__436_lambda(tmp_defaults_330);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 744;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_661 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_661 == NULL)) {
                tmp_expression_value_661 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_661 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 745;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_661, mod_consts[659]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 745;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__437_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 745;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_662 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_662 == NULL)) {
                tmp_expression_value_662 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_662 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 746;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_662, mod_consts[660]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 746;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_331 = mod_consts[661];
            Py_INCREF(tmp_defaults_331);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__438_lambda(tmp_defaults_331);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 746;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_663 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_663 == NULL)) {
                tmp_expression_value_663 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_663 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 747;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_663, mod_consts[662]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 747;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_332 = mod_consts[314];
            Py_INCREF(tmp_defaults_332);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__439_lambda(tmp_defaults_332);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 747;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_664 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_664 == NULL)) {
                tmp_expression_value_664 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_664 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 748;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_664, mod_consts[663]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 748;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_333 = mod_consts[664];
            Py_INCREF(tmp_defaults_333);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__440_lambda(tmp_defaults_333);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 748;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_666 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_666 == NULL)) {
                tmp_expression_value_666 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_666 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 749;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_665 = LOOKUP_ATTRIBUTE(tmp_expression_value_666, mod_consts[253]);
            if (tmp_expression_value_665 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 749;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_665, mod_consts[665]);
            Py_DECREF(tmp_expression_value_665);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 749;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_334 = mod_consts[666];
            Py_INCREF(tmp_defaults_334);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__441_lambda(tmp_defaults_334);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 749;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_667 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_667 == NULL)) {
                tmp_expression_value_667 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_667 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 750;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_667, mod_consts[667]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 750;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__442_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 750;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_668 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_668 == NULL)) {
                tmp_expression_value_668 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_668 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_668, mod_consts[668]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__443_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 751;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_669 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_669 == NULL)) {
                tmp_expression_value_669 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_669 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 752;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_669, mod_consts[669]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 752;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_335 = mod_consts[164];
            Py_INCREF(tmp_defaults_335);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__444_lambda(tmp_defaults_335);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 752;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_670 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_670 == NULL)) {
                tmp_expression_value_670 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_670 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 753;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_670, mod_consts[616]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 753;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__445_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 753;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_671 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_671 == NULL)) {
                tmp_expression_value_671 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_671 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_671, mod_consts[670]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_336 = mod_consts[164];
            Py_INCREF(tmp_defaults_336);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__446_lambda(tmp_defaults_336);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 754;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_672 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_672 == NULL)) {
                tmp_expression_value_672 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_672 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 755;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_672, mod_consts[671]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 755;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_337 = mod_consts[164];
            Py_INCREF(tmp_defaults_337);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__447_lambda(tmp_defaults_337);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 755;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_673 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_673 == NULL)) {
                tmp_expression_value_673 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_673 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 756;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_673, mod_consts[618]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 756;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__448_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 756;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_674 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_674 == NULL)) {
                tmp_expression_value_674 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_674 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 757;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_674, mod_consts[672]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 757;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_338 = mod_consts[334];
            Py_INCREF(tmp_defaults_338);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__449_lambda(tmp_defaults_338);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 757;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_675 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_675 == NULL)) {
                tmp_expression_value_675 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_675 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 758;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_675, mod_consts[673]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 758;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_339 = mod_consts[164];
            Py_INCREF(tmp_defaults_339);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__450_lambda(tmp_defaults_339);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 758;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_676 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_676 == NULL)) {
                tmp_expression_value_676 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_676 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 759;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_676, mod_consts[674]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 759;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_340 = mod_consts[164];
            Py_INCREF(tmp_defaults_340);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__451_lambda(tmp_defaults_340);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 759;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_677 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_677 == NULL)) {
                tmp_expression_value_677 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_677 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_677, mod_consts[675]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_341 = mod_consts[189];
            Py_INCREF(tmp_defaults_341);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__452_lambda(tmp_defaults_341);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 760;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_678 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_678 == NULL)) {
                tmp_expression_value_678 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_678 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 761;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_678, mod_consts[676]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 761;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__453_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 761;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_679 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_679 == NULL)) {
                tmp_expression_value_679 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_679 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 762;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_679, mod_consts[677]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 762;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__454_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 762;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_680 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_680 == NULL)) {
                tmp_expression_value_680 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_680 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_680, mod_consts[678]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__455_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 763;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_681 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_681 == NULL)) {
                tmp_expression_value_681 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_681 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 764;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_681, mod_consts[679]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 764;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__456_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 764;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_682 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_682 == NULL)) {
                tmp_expression_value_682 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_682 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 765;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_682, mod_consts[680]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 765;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__457_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 765;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_683 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_683 == NULL)) {
                tmp_expression_value_683 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_683 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 766;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_683, mod_consts[681]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 766;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_342 = mod_consts[682];
            Py_INCREF(tmp_defaults_342);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__458_lambda(tmp_defaults_342);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 766;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_685 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_685 == NULL)) {
                tmp_expression_value_685 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_685 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 767;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_684 = LOOKUP_ATTRIBUTE(tmp_expression_value_685, mod_consts[253]);
            if (tmp_expression_value_684 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 767;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_684, mod_consts[681]);
            Py_DECREF(tmp_expression_value_684);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 767;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_343 = mod_consts[683];
            Py_INCREF(tmp_defaults_343);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__459_lambda(tmp_defaults_343);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 767;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_686 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_686 == NULL)) {
                tmp_expression_value_686 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_686 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 768;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_686, mod_consts[684]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 768;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_344 = mod_consts[194];
            Py_INCREF(tmp_defaults_344);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__460_lambda(tmp_defaults_344);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 768;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_687 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_687 == NULL)) {
                tmp_expression_value_687 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_687 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 769;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_687, mod_consts[685]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 769;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_345 = mod_consts[194];
            Py_INCREF(tmp_defaults_345);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__461_lambda(tmp_defaults_345);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 769;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_688 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_688 == NULL)) {
                tmp_expression_value_688 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_688 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 770;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_688, mod_consts[686]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 770;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__462_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 770;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_689 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_689 == NULL)) {
                tmp_expression_value_689 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_689 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 771;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_689, mod_consts[687]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 771;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__463_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 771;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_690 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_690 == NULL)) {
                tmp_expression_value_690 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_690 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 772;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_690, mod_consts[688]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 772;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__464_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 772;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_691 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_691 == NULL)) {
                tmp_expression_value_691 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_691 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 773;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_691, mod_consts[689]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 773;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__465_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 773;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_692 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_692 == NULL)) {
                tmp_expression_value_692 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_692 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 776;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_692, mod_consts[690]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 776;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__466_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 776;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_693 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_693 == NULL)) {
                tmp_expression_value_693 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_693 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 778;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_693, mod_consts[691]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 778;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_346 = mod_consts[692];
            Py_INCREF(tmp_defaults_346);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__467_lambda(tmp_defaults_346);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 778;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_694 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_694 == NULL)) {
                tmp_expression_value_694 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_694 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 780;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_694, mod_consts[693]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 780;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_347 = mod_consts[694];
            Py_INCREF(tmp_defaults_347);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__468_lambda(tmp_defaults_347);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 780;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_695 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_695 == NULL)) {
                tmp_expression_value_695 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_695 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 782;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_695, mod_consts[695]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 782;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__469_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 782;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_696 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_696 == NULL)) {
                tmp_expression_value_696 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_696 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 784;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_696, mod_consts[696]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 784;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__470_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 784;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_697 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_697 == NULL)) {
                tmp_expression_value_697 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_697 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 786;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_697, mod_consts[697]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 786;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_348 = mod_consts[164];
            Py_INCREF(tmp_defaults_348);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__471_lambda(tmp_defaults_348);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 786;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_698 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_698 == NULL)) {
                tmp_expression_value_698 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_698 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 787;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_698, mod_consts[698]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 787;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_349 = mod_consts[334];
            Py_INCREF(tmp_defaults_349);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__472_lambda(tmp_defaults_349);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 787;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_699 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_699 == NULL)) {
                tmp_expression_value_699 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_699 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 788;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_699, mod_consts[699]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 788;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_2 = Py_None;
            tmp_defaults_350 = PyTuple_New(4);
            {
                PyObject *tmp_expression_value_700;
                PyTuple_SET_ITEM0(tmp_defaults_350, 0, tmp_tuple_element_2);
                tmp_expression_value_700 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

                if (unlikely(tmp_expression_value_700 == NULL)) {
                    tmp_expression_value_700 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
                }

                if (tmp_expression_value_700 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 788;
                    type_description_1 = "oooooooooo";
                    goto tuple_build_exception_2;
                }
                tmp_tuple_element_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_700, mod_consts[385]);
                if (tmp_tuple_element_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 788;
                    type_description_1 = "oooooooooo";
                    goto tuple_build_exception_2;
                }
                PyTuple_SET_ITEM(tmp_defaults_350, 1, tmp_tuple_element_2);
                tmp_tuple_element_2 = Py_None;
                PyTuple_SET_ITEM0(tmp_defaults_350, 2, tmp_tuple_element_2);
                tmp_tuple_element_2 = Py_False;
                PyTuple_SET_ITEM0(tmp_defaults_350, 3, tmp_tuple_element_2);
            }
            goto tuple_build_noexception_2;
            // Exception handling pass through code for tuple_build:
            tuple_build_exception_2:;
            Py_DECREF(tmp_dict_key_1);
            Py_DECREF(tmp_defaults_350);
            goto dict_build_exception_1;
            // Finished with no exception for tuple_build:
            tuple_build_noexception_2:;


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__473_lambda(tmp_defaults_350);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 788;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_701 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_701 == NULL)) {
                tmp_expression_value_701 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_701 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 789;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_701, mod_consts[700]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 789;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_351 = mod_consts[334];
            Py_INCREF(tmp_defaults_351);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__474_lambda(tmp_defaults_351);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 789;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_702 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_702 == NULL)) {
                tmp_expression_value_702 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_702 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 790;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_702, mod_consts[701]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 790;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__475_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 790;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_703 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_703 == NULL)) {
                tmp_expression_value_703 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_703 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 791;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_703, mod_consts[702]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 791;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_352 = mod_consts[164];
            Py_INCREF(tmp_defaults_352);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__476_lambda(tmp_defaults_352);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 791;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_704 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_704 == NULL)) {
                tmp_expression_value_704 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_704 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 792;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_704, mod_consts[703]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 792;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_353 = mod_consts[164];
            Py_INCREF(tmp_defaults_353);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__477_lambda(tmp_defaults_353);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 792;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_705 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_705 == NULL)) {
                tmp_expression_value_705 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_705 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 793;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_705, mod_consts[704]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 793;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__478_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 793;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_706 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_706 == NULL)) {
                tmp_expression_value_706 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_706 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 794;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_706, mod_consts[705]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 794;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__479_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 794;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_707 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_707 == NULL)) {
                tmp_expression_value_707 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_707 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 795;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_707, mod_consts[706]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 795;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_354 = mod_consts[164];
            Py_INCREF(tmp_defaults_354);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__480_lambda(tmp_defaults_354);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 795;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_708 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_708 == NULL)) {
                tmp_expression_value_708 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_708 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 796;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_708, mod_consts[619]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 796;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_355 = mod_consts[189];
            Py_INCREF(tmp_defaults_355);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__481_lambda(tmp_defaults_355);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 796;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_709 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_709 == NULL)) {
                tmp_expression_value_709 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_709 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 797;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_709, mod_consts[707]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 797;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_356 = mod_consts[164];
            Py_INCREF(tmp_defaults_356);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__482_lambda(tmp_defaults_356);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 797;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_710 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_710 == NULL)) {
                tmp_expression_value_710 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_710 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 798;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_710, mod_consts[708]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 798;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_357 = mod_consts[164];
            Py_INCREF(tmp_defaults_357);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__483_lambda(tmp_defaults_357);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 798;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_711 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_711 == NULL)) {
                tmp_expression_value_711 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_711 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 799;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_711, mod_consts[709]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 799;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_358 = mod_consts[164];
            Py_INCREF(tmp_defaults_358);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__484_lambda(tmp_defaults_358);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 799;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_712 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_712 == NULL)) {
                tmp_expression_value_712 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_712 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_712, mod_consts[710]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__485_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 800;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_713 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_713 == NULL)) {
                tmp_expression_value_713 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_713 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 801;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_713, mod_consts[711]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 801;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__486_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 801;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_714 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_714 == NULL)) {
                tmp_expression_value_714 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_714 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 802;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_714, mod_consts[712]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 802;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_359 = mod_consts[223];
            Py_INCREF(tmp_defaults_359);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__487_lambda(tmp_defaults_359);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 802;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_715 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_715 == NULL)) {
                tmp_expression_value_715 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_715 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 803;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_715, mod_consts[713]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 803;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__488_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 803;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_716 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_716 == NULL)) {
                tmp_expression_value_716 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_716 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 804;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_716, mod_consts[714]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 804;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_360 = mod_consts[223];
            Py_INCREF(tmp_defaults_360);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__489_lambda(tmp_defaults_360);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 804;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_717 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_717 == NULL)) {
                tmp_expression_value_717 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_717 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 805;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_717, mod_consts[715]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 805;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_361 = mod_consts[164];
            Py_INCREF(tmp_defaults_361);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__490_lambda(tmp_defaults_361);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 805;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_718 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_718 == NULL)) {
                tmp_expression_value_718 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_718 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 806;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_718, mod_consts[716]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 806;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_362 = mod_consts[717];
            Py_INCREF(tmp_defaults_362);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__491_lambda(tmp_defaults_362);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 806;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_719 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_719 == NULL)) {
                tmp_expression_value_719 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_719 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 807;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_719, mod_consts[718]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 807;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_363 = mod_consts[164];
            Py_INCREF(tmp_defaults_363);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__492_lambda(tmp_defaults_363);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 807;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_720 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_720 == NULL)) {
                tmp_expression_value_720 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_720 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 808;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_720, mod_consts[719]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 808;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_364 = mod_consts[164];
            Py_INCREF(tmp_defaults_364);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__493_lambda(tmp_defaults_364);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 808;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_721 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_721 == NULL)) {
                tmp_expression_value_721 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_721 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 809;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_721, mod_consts[720]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 809;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__494_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 809;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_722 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_722 == NULL)) {
                tmp_expression_value_722 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_722 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 810;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_722, mod_consts[621]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 810;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_365 = mod_consts[622];
            Py_INCREF(tmp_defaults_365);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__495_lambda(tmp_defaults_365);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 810;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_723 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_723 == NULL)) {
                tmp_expression_value_723 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_723 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 811;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_723, mod_consts[721]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 811;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_366 = mod_consts[164];
            Py_INCREF(tmp_defaults_366);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__496_lambda(tmp_defaults_366);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 811;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_724 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_724 == NULL)) {
                tmp_expression_value_724 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_724 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 812;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_724, mod_consts[722]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 812;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_367 = mod_consts[723];
            Py_INCREF(tmp_defaults_367);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__497_lambda(tmp_defaults_367);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 812;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_725 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_725 == NULL)) {
                tmp_expression_value_725 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_725 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 813;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_725, mod_consts[724]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 813;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_368 = mod_consts[177];
            Py_INCREF(tmp_defaults_368);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__498_lambda(tmp_defaults_368);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 813;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_726 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_726 == NULL)) {
                tmp_expression_value_726 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_726 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 814;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_726, mod_consts[725]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 814;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__499_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 814;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_727 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_727 == NULL)) {
                tmp_expression_value_727 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_727 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 815;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_727, mod_consts[726]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 815;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__500_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 815;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_728 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_728 == NULL)) {
                tmp_expression_value_728 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_728 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 816;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_728, mod_consts[727]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 816;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_369 = mod_consts[239];
            Py_INCREF(tmp_defaults_369);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__501_lambda(tmp_defaults_369);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 816;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_729 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_729 == NULL)) {
                tmp_expression_value_729 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_729 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 817;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_729, mod_consts[728]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 817;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_370 = mod_consts[729];
            Py_INCREF(tmp_defaults_370);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__502_lambda(tmp_defaults_370);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 817;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_730 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_730 == NULL)) {
                tmp_expression_value_730 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_730 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 818;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_730, mod_consts[730]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 818;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__503_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 818;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_731 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_731 == NULL)) {
                tmp_expression_value_731 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_731 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 819;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_731, mod_consts[623]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 819;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_371 = mod_consts[189];
            Py_INCREF(tmp_defaults_371);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__504_lambda(tmp_defaults_371);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 819;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_732 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_732 == NULL)) {
                tmp_expression_value_732 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_732 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 820;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_732, mod_consts[118]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 820;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_372 = mod_consts[164];
            Py_INCREF(tmp_defaults_372);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__505_lambda(tmp_defaults_372);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 820;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_733 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_733 == NULL)) {
                tmp_expression_value_733 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_733 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 821;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_733, mod_consts[731]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 821;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_373 = mod_consts[164];
            Py_INCREF(tmp_defaults_373);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__506_lambda(tmp_defaults_373);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 821;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_734 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_734 == NULL)) {
                tmp_expression_value_734 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_734 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 822;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_734, mod_consts[732]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 822;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_374 = mod_consts[164];
            Py_INCREF(tmp_defaults_374);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__507_lambda(tmp_defaults_374);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 822;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_735 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_735 == NULL)) {
                tmp_expression_value_735 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_735 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 823;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_735, mod_consts[733]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 823;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_375 = mod_consts[164];
            Py_INCREF(tmp_defaults_375);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__508_lambda(tmp_defaults_375);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 823;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_736 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_736 == NULL)) {
                tmp_expression_value_736 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_736 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 824;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_736, mod_consts[734]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 824;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_376 = mod_consts[164];
            Py_INCREF(tmp_defaults_376);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__509_lambda(tmp_defaults_376);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 824;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_737 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_737 == NULL)) {
                tmp_expression_value_737 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_737 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 825;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_737, mod_consts[735]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 825;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_377 = mod_consts[164];
            Py_INCREF(tmp_defaults_377);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__510_lambda(tmp_defaults_377);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 825;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_738 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_738 == NULL)) {
                tmp_expression_value_738 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_738 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 826;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_738, mod_consts[736]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 826;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_378 = mod_consts[164];
            Py_INCREF(tmp_defaults_378);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__511_lambda(tmp_defaults_378);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 826;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_739 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_739 == NULL)) {
                tmp_expression_value_739 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_739 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 827;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_739, mod_consts[737]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 827;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__512_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 827;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_741 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_741 == NULL)) {
                tmp_expression_value_741 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_741 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 828;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_740 = LOOKUP_ATTRIBUTE(tmp_expression_value_741, mod_consts[253]);
            if (tmp_expression_value_740 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 828;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_740, mod_consts[737]);
            Py_DECREF(tmp_expression_value_740);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 828;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__513_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 828;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_742 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_742 == NULL)) {
                tmp_expression_value_742 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_742 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 829;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_742, mod_consts[738]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 829;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__514_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 829;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_743 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_743 == NULL)) {
                tmp_expression_value_743 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_743 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 830;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_743, mod_consts[739]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 830;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__515_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 830;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_744 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_744 == NULL)) {
                tmp_expression_value_744 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_744 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 831;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_744, mod_consts[631]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 831;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_379 = mod_consts[164];
            Py_INCREF(tmp_defaults_379);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__516_lambda(tmp_defaults_379);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 831;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_745 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_745 == NULL)) {
                tmp_expression_value_745 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_745 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 832;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_745, mod_consts[740]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 832;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_380 = mod_consts[164];
            Py_INCREF(tmp_defaults_380);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__517_lambda(tmp_defaults_380);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 832;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_747 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_747 == NULL)) {
                tmp_expression_value_747 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_747 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 833;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_746 = LOOKUP_ATTRIBUTE(tmp_expression_value_747, mod_consts[253]);
            if (tmp_expression_value_746 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 833;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_746, mod_consts[740]);
            Py_DECREF(tmp_expression_value_746);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 833;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_381 = mod_consts[164];
            Py_INCREF(tmp_defaults_381);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__518_lambda(tmp_defaults_381);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 833;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_748 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_748 == NULL)) {
                tmp_expression_value_748 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_748 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 834;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_748, mod_consts[741]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 834;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_382 = mod_consts[742];
            tmp_kw_defaults_3 = PyDict_Copy(mod_consts[743]);
            Py_INCREF(tmp_defaults_382);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__519_lambda(tmp_defaults_382, tmp_kw_defaults_3);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 834;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_749 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_749 == NULL)) {
                tmp_expression_value_749 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_749 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 835;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_749, mod_consts[744]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 835;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_383 = mod_consts[259];
            Py_INCREF(tmp_defaults_383);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__520_lambda(tmp_defaults_383);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 835;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_750 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_750 == NULL)) {
                tmp_expression_value_750 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_750 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 836;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_750, mod_consts[745]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 836;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_384 = mod_consts[259];
            Py_INCREF(tmp_defaults_384);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__521_lambda(tmp_defaults_384);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 836;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_751 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_751 == NULL)) {
                tmp_expression_value_751 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_751 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 837;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_751, mod_consts[746]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 837;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_385 = mod_consts[164];
            Py_INCREF(tmp_defaults_385);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__522_lambda(tmp_defaults_385);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 837;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_752 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_752 == NULL)) {
                tmp_expression_value_752 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_752 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 838;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_752, mod_consts[747]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 838;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_386 = mod_consts[164];
            Py_INCREF(tmp_defaults_386);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__523_lambda(tmp_defaults_386);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 838;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_753 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_753 == NULL)) {
                tmp_expression_value_753 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_753 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 839;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_753, mod_consts[748]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 839;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_387 = mod_consts[223];
            Py_INCREF(tmp_defaults_387);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__524_lambda(tmp_defaults_387);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 839;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_754 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_754 == NULL)) {
                tmp_expression_value_754 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_754 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 840;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_754, mod_consts[749]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 840;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_388 = mod_consts[177];
            Py_INCREF(tmp_defaults_388);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__525_lambda(tmp_defaults_388);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 840;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_755 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_755 == NULL)) {
                tmp_expression_value_755 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_755 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 841;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_755, mod_consts[750]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 841;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_389 = mod_consts[242];
            Py_INCREF(tmp_defaults_389);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__526_lambda(tmp_defaults_389);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 841;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_756 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_756 == NULL)) {
                tmp_expression_value_756 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_756 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 842;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_756, mod_consts[751]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 842;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_390 = mod_consts[164];
            Py_INCREF(tmp_defaults_390);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__527_lambda(tmp_defaults_390);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 842;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_757 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_757 == NULL)) {
                tmp_expression_value_757 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_757 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 843;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_757, mod_consts[752]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 843;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_391 = mod_consts[164];
            Py_INCREF(tmp_defaults_391);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__528_lambda(tmp_defaults_391);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 843;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_758 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_758 == NULL)) {
                tmp_expression_value_758 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_758 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 844;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_758, mod_consts[753]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 844;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_392 = mod_consts[754];
            Py_INCREF(tmp_defaults_392);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__529_lambda(tmp_defaults_392);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 844;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_759 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_759 == NULL)) {
                tmp_expression_value_759 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_759 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 846;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_759, mod_consts[755]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 846;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_393 = mod_consts[164];
            Py_INCREF(tmp_defaults_393);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__530_lambda(tmp_defaults_393);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 846;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_760 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_760 == NULL)) {
                tmp_expression_value_760 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_760 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 847;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_760, mod_consts[756]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 847;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_394 = mod_consts[164];
            Py_INCREF(tmp_defaults_394);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__531_lambda(tmp_defaults_394);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 847;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_761 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_761 == NULL)) {
                tmp_expression_value_761 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_761 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 848;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_761, mod_consts[757]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 848;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_395 = mod_consts[164];
            Py_INCREF(tmp_defaults_395);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__532_lambda(tmp_defaults_395);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 848;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_762 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_762 == NULL)) {
                tmp_expression_value_762 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_762 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 849;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_762, mod_consts[758]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 849;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_396 = mod_consts[164];
            Py_INCREF(tmp_defaults_396);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__533_lambda(tmp_defaults_396);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 849;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_763 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_763 == NULL)) {
                tmp_expression_value_763 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_763 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 850;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_763, mod_consts[759]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 850;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_397 = mod_consts[760];
            Py_INCREF(tmp_defaults_397);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__534_lambda(tmp_defaults_397);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 850;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_764 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_764 == NULL)) {
                tmp_expression_value_764 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_764 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 851;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_764, mod_consts[761]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 851;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_398 = mod_consts[762];
            Py_INCREF(tmp_defaults_398);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__535_lambda(tmp_defaults_398);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 851;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_766 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_766 == NULL)) {
                tmp_expression_value_766 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_766 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 852;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_765 = LOOKUP_ATTRIBUTE(tmp_expression_value_766, mod_consts[253]);
            if (tmp_expression_value_765 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 852;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_765, mod_consts[759]);
            Py_DECREF(tmp_expression_value_765);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 852;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_399 = mod_consts[682];
            Py_INCREF(tmp_defaults_399);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__536_lambda(tmp_defaults_399);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 852;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_768 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_768 == NULL)) {
                tmp_expression_value_768 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_768 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 853;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_767 = LOOKUP_ATTRIBUTE(tmp_expression_value_768, mod_consts[253]);
            if (tmp_expression_value_767 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 853;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_767, mod_consts[763]);
            Py_DECREF(tmp_expression_value_767);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 853;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_400 = mod_consts[164];
            Py_INCREF(tmp_defaults_400);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__537_lambda(tmp_defaults_400);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 853;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_769 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_769 == NULL)) {
                tmp_expression_value_769 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_769 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 854;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_769, mod_consts[764]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 854;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_401 = mod_consts[765];
            Py_INCREF(tmp_defaults_401);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__538_lambda(tmp_defaults_401);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 854;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_770 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_770 == NULL)) {
                tmp_expression_value_770 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_770 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 855;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_770, mod_consts[766]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 855;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__539_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 855;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_771 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_771 == NULL)) {
                tmp_expression_value_771 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_771 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 856;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_771, mod_consts[767]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 856;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__540_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 856;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_773 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_773 == NULL)) {
                tmp_expression_value_773 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_773 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 857;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_772 = LOOKUP_ATTRIBUTE(tmp_expression_value_773, mod_consts[768]);
            if (tmp_expression_value_772 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 857;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_772, mod_consts[769]);
            Py_DECREF(tmp_expression_value_772);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 857;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__541_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 857;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_775 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_775 == NULL)) {
                tmp_expression_value_775 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_775 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 858;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_774 = LOOKUP_ATTRIBUTE(tmp_expression_value_775, mod_consts[768]);
            if (tmp_expression_value_774 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 858;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_774, mod_consts[337]);
            Py_DECREF(tmp_expression_value_774);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 858;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__542_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 858;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_777 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_777 == NULL)) {
                tmp_expression_value_777 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_777 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 859;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_776 = LOOKUP_ATTRIBUTE(tmp_expression_value_777, mod_consts[768]);
            if (tmp_expression_value_776 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 859;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_776, mod_consts[338]);
            Py_DECREF(tmp_expression_value_776);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 859;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__543_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 859;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_779 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_779 == NULL)) {
                tmp_expression_value_779 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_779 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 860;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_778 = LOOKUP_ATTRIBUTE(tmp_expression_value_779, mod_consts[768]);
            if (tmp_expression_value_778 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 860;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_778, mod_consts[339]);
            Py_DECREF(tmp_expression_value_778);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 860;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__544_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 860;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_781 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_781 == NULL)) {
                tmp_expression_value_781 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_781 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 861;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_780 = LOOKUP_ATTRIBUTE(tmp_expression_value_781, mod_consts[768]);
            if (tmp_expression_value_780 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 861;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_780, mod_consts[341]);
            Py_DECREF(tmp_expression_value_780);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 861;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__545_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 861;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_783 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_783 == NULL)) {
                tmp_expression_value_783 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_783 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 862;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_782 = LOOKUP_ATTRIBUTE(tmp_expression_value_783, mod_consts[768]);
            if (tmp_expression_value_782 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 862;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_782, mod_consts[342]);
            Py_DECREF(tmp_expression_value_782);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 862;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__546_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 862;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_785 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_785 == NULL)) {
                tmp_expression_value_785 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_785 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 863;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_784 = LOOKUP_ATTRIBUTE(tmp_expression_value_785, mod_consts[768]);
            if (tmp_expression_value_784 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 863;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_784, mod_consts[770]);
            Py_DECREF(tmp_expression_value_784);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 863;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__547_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 863;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_787 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_787 == NULL)) {
                tmp_expression_value_787 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_787 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 864;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_786 = LOOKUP_ATTRIBUTE(tmp_expression_value_787, mod_consts[768]);
            if (tmp_expression_value_786 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 864;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_786, mod_consts[771]);
            Py_DECREF(tmp_expression_value_786);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 864;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__548_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 864;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_789 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_789 == NULL)) {
                tmp_expression_value_789 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_789 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 865;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_788 = LOOKUP_ATTRIBUTE(tmp_expression_value_789, mod_consts[768]);
            if (tmp_expression_value_788 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 865;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_788, mod_consts[772]);
            Py_DECREF(tmp_expression_value_788);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 865;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__549_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 865;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_791 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_791 == NULL)) {
                tmp_expression_value_791 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_791 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 866;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_790 = LOOKUP_ATTRIBUTE(tmp_expression_value_791, mod_consts[768]);
            if (tmp_expression_value_790 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 866;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_790, mod_consts[476]);
            Py_DECREF(tmp_expression_value_790);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 866;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__550_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 866;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_793 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_793 == NULL)) {
                tmp_expression_value_793 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_793 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 867;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_792 = LOOKUP_ATTRIBUTE(tmp_expression_value_793, mod_consts[768]);
            if (tmp_expression_value_792 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 867;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_792, mod_consts[773]);
            Py_DECREF(tmp_expression_value_792);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 867;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_402 = mod_consts[164];
            Py_INCREF(tmp_defaults_402);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__551_lambda(tmp_defaults_402);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 867;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_794 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_794 == NULL)) {
                tmp_expression_value_794 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_794 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 868;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_794, mod_consts[774]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 868;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__552_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 868;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_795 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_795 == NULL)) {
                tmp_expression_value_795 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_795 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 869;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_795, mod_consts[775]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 869;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__553_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 869;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_796 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_796 == NULL)) {
                tmp_expression_value_796 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_796 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 870;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_796, mod_consts[776]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 870;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_403 = mod_consts[223];
            Py_INCREF(tmp_defaults_403);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__554_lambda(tmp_defaults_403);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 870;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_797 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_797 == NULL)) {
                tmp_expression_value_797 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_797 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 871;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_797, mod_consts[777]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 871;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_404 = mod_consts[164];
            Py_INCREF(tmp_defaults_404);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__555_lambda(tmp_defaults_404);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 871;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_798 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_798 == NULL)) {
                tmp_expression_value_798 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_798 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 872;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_798, mod_consts[120]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 872;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_405 = mod_consts[164];
            Py_INCREF(tmp_defaults_405);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__556_lambda(tmp_defaults_405);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 872;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_800 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_800 == NULL)) {
                tmp_expression_value_800 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_800 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 873;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_799 = LOOKUP_ATTRIBUTE(tmp_expression_value_800, mod_consts[253]);
            if (tmp_expression_value_799 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 873;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_799, mod_consts[778]);
            Py_DECREF(tmp_expression_value_799);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 873;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_406 = mod_consts[314];
            Py_INCREF(tmp_defaults_406);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__557_lambda(tmp_defaults_406);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 873;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_802 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_802 == NULL)) {
                tmp_expression_value_802 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_802 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 874;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_801 = LOOKUP_ATTRIBUTE(tmp_expression_value_802, mod_consts[253]);
            if (tmp_expression_value_801 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 874;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_801, mod_consts[779]);
            Py_DECREF(tmp_expression_value_801);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 874;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_407 = mod_consts[164];
            Py_INCREF(tmp_defaults_407);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__558_lambda(tmp_defaults_407);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 874;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_803 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_803 == NULL)) {
                tmp_expression_value_803 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_803 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 875;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_803, mod_consts[780]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 875;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_408 = mod_consts[781];
            Py_INCREF(tmp_defaults_408);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__559_lambda(tmp_defaults_408);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 875;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_804 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_804 == NULL)) {
                tmp_expression_value_804 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_804 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 876;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_804, mod_consts[782]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 876;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_409 = mod_consts[259];
            Py_INCREF(tmp_defaults_409);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__560_lambda(tmp_defaults_409);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 876;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_805 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_805 == NULL)) {
                tmp_expression_value_805 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_805 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 877;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_805, mod_consts[638]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 877;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_410 = mod_consts[189];
            Py_INCREF(tmp_defaults_410);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__561_lambda(tmp_defaults_410);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 877;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_806 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_806 == NULL)) {
                tmp_expression_value_806 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_806 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 878;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_806, mod_consts[783]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 878;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__562_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 878;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_807 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_807 == NULL)) {
                tmp_expression_value_807 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_807 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 879;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_807, mod_consts[784]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 879;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_411 = mod_consts[517];
            Py_INCREF(tmp_defaults_411);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__563_lambda(tmp_defaults_411);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 879;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_808 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_808 == NULL)) {
                tmp_expression_value_808 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_808 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 880;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_808, mod_consts[785]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 880;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__564_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 880;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_809 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_809 == NULL)) {
                tmp_expression_value_809 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_809 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 881;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_809, mod_consts[786]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 881;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__565_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 881;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_810 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_810 == NULL)) {
                tmp_expression_value_810 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_810 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 882;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_810, mod_consts[787]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 882;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_412 = mod_consts[788];
            Py_INCREF(tmp_defaults_412);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__566_lambda(tmp_defaults_412);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 882;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_811 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_811 == NULL)) {
                tmp_expression_value_811 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_811 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 883;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_811, mod_consts[789]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 883;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_413 = mod_consts[790];
            Py_INCREF(tmp_defaults_413);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__567_lambda(tmp_defaults_413);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 883;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_812 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_812 == NULL)) {
                tmp_expression_value_812 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_812 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 884;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_812, mod_consts[791]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 884;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_414 = mod_consts[242];
            Py_INCREF(tmp_defaults_414);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__568_lambda(tmp_defaults_414);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 884;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_813 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_813 == NULL)) {
                tmp_expression_value_813 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_813 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 885;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_813, mod_consts[639]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 885;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_415 = mod_consts[640];
            Py_INCREF(tmp_defaults_415);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__569_lambda(tmp_defaults_415);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 885;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_814 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_814 == NULL)) {
                tmp_expression_value_814 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_814 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 888;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_814, mod_consts[792]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 888;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_416 = mod_consts[242];
            Py_INCREF(tmp_defaults_416);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__570_lambda(tmp_defaults_416);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 888;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_815 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_815 == NULL)) {
                tmp_expression_value_815 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_815 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 889;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_815, mod_consts[793]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 889;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__571_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 889;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_816 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_816 == NULL)) {
                tmp_expression_value_816 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_816 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 890;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_816, mod_consts[794]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 890;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_417 = mod_consts[164];
            Py_INCREF(tmp_defaults_417);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__572_lambda(tmp_defaults_417);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 890;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_817 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_817 == NULL)) {
                tmp_expression_value_817 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_817 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 891;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_817, mod_consts[795]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 891;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_418 = mod_consts[259];
            Py_INCREF(tmp_defaults_418);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__573_lambda(tmp_defaults_418);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 891;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_818 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_818 == NULL)) {
                tmp_expression_value_818 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_818 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 892;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_818, mod_consts[796]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 892;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_419 = mod_consts[797];
            Py_INCREF(tmp_defaults_419);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__574_lambda(tmp_defaults_419);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 892;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_819 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_819 == NULL)) {
                tmp_expression_value_819 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_819 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 893;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_819, mod_consts[798]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 893;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_420 = mod_consts[239];
            Py_INCREF(tmp_defaults_420);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__575_lambda(tmp_defaults_420);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 893;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_820 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_820 == NULL)) {
                tmp_expression_value_820 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_820 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 894;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_820, mod_consts[799]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 894;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_421 = mod_consts[259];
            Py_INCREF(tmp_defaults_421);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__576_lambda(tmp_defaults_421);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 894;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_821 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_821 == NULL)) {
                tmp_expression_value_821 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_821 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 895;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_821, mod_consts[800]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 895;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_422 = mod_consts[259];
            Py_INCREF(tmp_defaults_422);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__577_lambda(tmp_defaults_422);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 895;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_822 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_822 == NULL)) {
                tmp_expression_value_822 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_822 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 896;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_822, mod_consts[801]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 896;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_423 = mod_consts[259];
            Py_INCREF(tmp_defaults_423);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__578_lambda(tmp_defaults_423);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 896;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_823 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_823 == NULL)) {
                tmp_expression_value_823 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_823 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 897;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_823, mod_consts[802]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 897;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_424 = mod_consts[164];
            Py_INCREF(tmp_defaults_424);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__579_lambda(tmp_defaults_424);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 897;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_824 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_824 == NULL)) {
                tmp_expression_value_824 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_824 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 898;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_824, mod_consts[803]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 898;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_425 = mod_consts[164];
            Py_INCREF(tmp_defaults_425);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__580_lambda(tmp_defaults_425);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 898;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_825 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_825 == NULL)) {
                tmp_expression_value_825 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_825 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 899;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_825, mod_consts[804]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 899;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_426 = mod_consts[164];
            Py_INCREF(tmp_defaults_426);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__581_lambda(tmp_defaults_426);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 899;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_826 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_826 == NULL)) {
                tmp_expression_value_826 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_826 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 900;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_826, mod_consts[805]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 900;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__582_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 900;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_827 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_827 == NULL)) {
                tmp_expression_value_827 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_827 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 901;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_827, mod_consts[806]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 901;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_427 = mod_consts[164];
            Py_INCREF(tmp_defaults_427);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__583_lambda(tmp_defaults_427);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 901;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_828 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_828 == NULL)) {
                tmp_expression_value_828 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_828 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 902;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_828, mod_consts[807]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 902;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_428 = mod_consts[223];
            Py_INCREF(tmp_defaults_428);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__584_lambda(tmp_defaults_428);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 902;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_829 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_829 == NULL)) {
                tmp_expression_value_829 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_829 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 903;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_829, mod_consts[808]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 903;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_429 = mod_consts[334];
            Py_INCREF(tmp_defaults_429);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__585_lambda(tmp_defaults_429);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 903;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_830 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_830, mod_consts[809]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 904;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__586_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 904;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_831 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_831, mod_consts[810]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 905;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__587_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 905;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_832 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_832, mod_consts[811]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 906;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__588_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 906;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_833 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_833, mod_consts[812]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 907;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__589_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 907;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_834 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_834, mod_consts[813]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 908;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__590_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 908;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_835 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_835, mod_consts[814]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 909;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__591_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 909;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_836 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_836, mod_consts[815]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 910;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__592_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 910;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_837 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_837, mod_consts[816]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 911;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__593_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 911;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_838 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_838, mod_consts[817]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 912;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__594_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 912;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_839 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_839, mod_consts[818]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 913;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__595_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 913;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_840 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_840, mod_consts[819]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 914;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__596_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 914;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_841 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_841, mod_consts[820]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 915;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__597_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 915;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_842 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_842, mod_consts[821]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 916;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__598_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 916;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_843 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_843, mod_consts[822]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 917;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__599_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 917;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_844 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_844, mod_consts[823]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 918;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__600_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 918;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_845 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_845, mod_consts[824]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 919;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__601_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 919;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_846 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_846, mod_consts[825]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 920;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__602_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 920;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_847 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_847, mod_consts[826]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 921;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__603_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 921;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_848 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_848, mod_consts[827]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 922;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__604_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 922;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_849 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_849, mod_consts[828]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 923;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__605_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 923;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_850 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_850, mod_consts[829]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 924;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__606_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 924;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_851 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_851, mod_consts[830]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 925;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__607_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 925;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_852 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_852, mod_consts[831]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 926;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__608_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 926;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_853 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_853, mod_consts[832]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 927;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__609_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 927;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_854 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_854, mod_consts[833]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 928;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__610_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 928;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_855 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_855, mod_consts[834]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 929;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__611_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 929;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_856 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_856, mod_consts[835]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 930;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__612_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 930;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_857 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_857, mod_consts[836]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 931;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__613_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 931;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_858 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_858, mod_consts[837]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 932;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__614_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 932;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_859 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_859, mod_consts[838]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 933;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__615_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 933;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_860 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_860, mod_consts[839]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 934;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__616_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 934;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_861 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_861, mod_consts[840]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 935;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__617_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 935;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_862 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_862, mod_consts[841]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 936;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__618_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 936;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_864 = var_Tensor;
            tmp_expression_value_863 = LOOKUP_ATTRIBUTE(tmp_expression_value_864, mod_consts[842]);
            if (tmp_expression_value_863 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 937;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_863, mod_consts[843]);
            Py_DECREF(tmp_expression_value_863);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 937;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__619_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 937;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_866 = var_Tensor;
            tmp_expression_value_865 = LOOKUP_ATTRIBUTE(tmp_expression_value_866, mod_consts[844]);
            if (tmp_expression_value_865 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 938;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_865, mod_consts[843]);
            Py_DECREF(tmp_expression_value_865);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 938;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__620_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 938;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_868 = var_Tensor;
            tmp_expression_value_867 = LOOKUP_ATTRIBUTE(tmp_expression_value_868, mod_consts[845]);
            if (tmp_expression_value_867 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 939;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_867, mod_consts[843]);
            Py_DECREF(tmp_expression_value_867);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 939;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__621_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 939;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_870 = var_Tensor;
            tmp_expression_value_869 = LOOKUP_ATTRIBUTE(tmp_expression_value_870, mod_consts[846]);
            if (tmp_expression_value_869 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 940;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_869, mod_consts[843]);
            Py_DECREF(tmp_expression_value_869);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 940;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__622_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 940;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_872 = var_Tensor;
            tmp_expression_value_871 = LOOKUP_ATTRIBUTE(tmp_expression_value_872, mod_consts[847]);
            if (tmp_expression_value_871 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 941;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_871, mod_consts[843]);
            Py_DECREF(tmp_expression_value_871);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 941;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__623_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 941;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_874 = var_Tensor;
            tmp_expression_value_873 = LOOKUP_ATTRIBUTE(tmp_expression_value_874, mod_consts[848]);
            if (tmp_expression_value_873 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 942;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_873, mod_consts[843]);
            Py_DECREF(tmp_expression_value_873);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 942;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__624_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 942;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_876 = var_Tensor;
            tmp_expression_value_875 = LOOKUP_ATTRIBUTE(tmp_expression_value_876, mod_consts[849]);
            if (tmp_expression_value_875 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 943;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_875, mod_consts[843]);
            Py_DECREF(tmp_expression_value_875);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 943;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__625_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 943;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_878 = var_Tensor;
            tmp_expression_value_877 = LOOKUP_ATTRIBUTE(tmp_expression_value_878, mod_consts[850]);
            if (tmp_expression_value_877 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 944;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_877, mod_consts[843]);
            Py_DECREF(tmp_expression_value_877);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 944;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__626_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 944;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_880 = var_Tensor;
            tmp_expression_value_879 = LOOKUP_ATTRIBUTE(tmp_expression_value_880, mod_consts[851]);
            if (tmp_expression_value_879 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 945;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_879, mod_consts[843]);
            Py_DECREF(tmp_expression_value_879);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 945;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__627_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 945;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_882 = var_Tensor;
            tmp_expression_value_881 = LOOKUP_ATTRIBUTE(tmp_expression_value_882, mod_consts[852]);
            if (tmp_expression_value_881 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 946;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_881, mod_consts[843]);
            Py_DECREF(tmp_expression_value_881);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 946;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__628_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 946;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_884 = var_Tensor;
            tmp_expression_value_883 = LOOKUP_ATTRIBUTE(tmp_expression_value_884, mod_consts[40]);
            if (tmp_expression_value_883 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 947;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_883, mod_consts[843]);
            Py_DECREF(tmp_expression_value_883);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 947;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__629_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 947;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_886 = var_Tensor;
            tmp_expression_value_885 = LOOKUP_ATTRIBUTE(tmp_expression_value_886, mod_consts[41]);
            if (tmp_expression_value_885 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 948;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_885, mod_consts[843]);
            Py_DECREF(tmp_expression_value_885);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 948;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__630_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 948;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_888 = var_Tensor;
            tmp_expression_value_887 = LOOKUP_ATTRIBUTE(tmp_expression_value_888, mod_consts[853]);
            if (tmp_expression_value_887 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 949;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_887, mod_consts[843]);
            Py_DECREF(tmp_expression_value_887);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 949;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__631_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 949;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_890 = var_Tensor;
            tmp_expression_value_889 = LOOKUP_ATTRIBUTE(tmp_expression_value_890, mod_consts[854]);
            if (tmp_expression_value_889 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 950;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_889, mod_consts[843]);
            Py_DECREF(tmp_expression_value_889);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 950;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__632_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 950;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_892 = var_Tensor;
            tmp_expression_value_891 = LOOKUP_ATTRIBUTE(tmp_expression_value_892, mod_consts[855]);
            if (tmp_expression_value_891 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 951;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_891, mod_consts[843]);
            Py_DECREF(tmp_expression_value_891);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 951;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__633_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 951;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_894 = var_Tensor;
            tmp_expression_value_893 = LOOKUP_ATTRIBUTE(tmp_expression_value_894, mod_consts[856]);
            if (tmp_expression_value_893 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 952;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_893, mod_consts[843]);
            Py_DECREF(tmp_expression_value_893);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 952;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__634_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 952;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_896 = var_Tensor;
            tmp_expression_value_895 = LOOKUP_ATTRIBUTE(tmp_expression_value_896, mod_consts[857]);
            if (tmp_expression_value_895 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 953;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_895, mod_consts[843]);
            Py_DECREF(tmp_expression_value_895);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 953;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__635_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 953;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_898 = var_Tensor;
            tmp_expression_value_897 = LOOKUP_ATTRIBUTE(tmp_expression_value_898, mod_consts[858]);
            if (tmp_expression_value_897 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 954;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_897, mod_consts[843]);
            Py_DECREF(tmp_expression_value_897);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 954;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__636_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 954;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_900 = var_Tensor;
            tmp_expression_value_899 = LOOKUP_ATTRIBUTE(tmp_expression_value_900, mod_consts[859]);
            if (tmp_expression_value_899 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 955;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_899, mod_consts[843]);
            Py_DECREF(tmp_expression_value_899);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 955;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__637_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 955;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_902 = var_Tensor;
            tmp_expression_value_901 = LOOKUP_ATTRIBUTE(tmp_expression_value_902, mod_consts[860]);
            if (tmp_expression_value_901 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 956;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_901, mod_consts[843]);
            Py_DECREF(tmp_expression_value_901);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 956;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__638_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 956;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_904 = var_Tensor;
            tmp_expression_value_903 = LOOKUP_ATTRIBUTE(tmp_expression_value_904, mod_consts[861]);
            if (tmp_expression_value_903 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 957;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_903, mod_consts[843]);
            Py_DECREF(tmp_expression_value_903);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 957;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__639_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 957;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_906 = var_Tensor;
            tmp_expression_value_905 = LOOKUP_ATTRIBUTE(tmp_expression_value_906, mod_consts[862]);
            if (tmp_expression_value_905 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 958;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_905, mod_consts[843]);
            Py_DECREF(tmp_expression_value_905);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 958;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__640_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 958;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_908 = var_Tensor;
            tmp_expression_value_907 = LOOKUP_ATTRIBUTE(tmp_expression_value_908, mod_consts[54]);
            if (tmp_expression_value_907 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 959;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_907, mod_consts[843]);
            Py_DECREF(tmp_expression_value_907);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 959;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__641_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 959;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_910 = var_Tensor;
            tmp_expression_value_909 = LOOKUP_ATTRIBUTE(tmp_expression_value_910, mod_consts[863]);
            if (tmp_expression_value_909 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 960;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_909, mod_consts[843]);
            Py_DECREF(tmp_expression_value_909);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 960;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__642_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 960;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_912 = var_Tensor;
            tmp_expression_value_911 = LOOKUP_ATTRIBUTE(tmp_expression_value_912, mod_consts[864]);
            if (tmp_expression_value_911 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 961;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_911, mod_consts[843]);
            Py_DECREF(tmp_expression_value_911);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 961;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__643_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 961;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_914 = var_Tensor;
            tmp_expression_value_913 = LOOKUP_ATTRIBUTE(tmp_expression_value_914, mod_consts[865]);
            if (tmp_expression_value_913 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 962;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_913, mod_consts[843]);
            Py_DECREF(tmp_expression_value_913);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 962;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__644_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 962;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_916 = var_Tensor;
            tmp_expression_value_915 = LOOKUP_ATTRIBUTE(tmp_expression_value_916, mod_consts[866]);
            if (tmp_expression_value_915 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 963;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_915, mod_consts[843]);
            Py_DECREF(tmp_expression_value_915);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 963;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__645_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 963;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_918 = var_Tensor;
            tmp_expression_value_917 = LOOKUP_ATTRIBUTE(tmp_expression_value_918, mod_consts[867]);
            if (tmp_expression_value_917 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 964;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_917, mod_consts[843]);
            Py_DECREF(tmp_expression_value_917);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 964;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__646_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 964;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_920 = var_Tensor;
            tmp_expression_value_919 = LOOKUP_ATTRIBUTE(tmp_expression_value_920, mod_consts[868]);
            if (tmp_expression_value_919 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 965;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_919, mod_consts[843]);
            Py_DECREF(tmp_expression_value_919);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 965;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__647_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 965;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_922 = var_Tensor;
            tmp_expression_value_921 = LOOKUP_ATTRIBUTE(tmp_expression_value_922, mod_consts[869]);
            if (tmp_expression_value_921 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 966;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_921, mod_consts[843]);
            Py_DECREF(tmp_expression_value_921);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 966;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__648_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 966;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_924 = var_Tensor;
            tmp_expression_value_923 = LOOKUP_ATTRIBUTE(tmp_expression_value_924, mod_consts[702]);
            if (tmp_expression_value_923 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 967;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_923, mod_consts[843]);
            Py_DECREF(tmp_expression_value_923);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 967;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__649_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 967;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_926 = var_Tensor;
            tmp_expression_value_925 = LOOKUP_ATTRIBUTE(tmp_expression_value_926, mod_consts[423]);
            if (tmp_expression_value_925 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 968;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_925, mod_consts[843]);
            Py_DECREF(tmp_expression_value_925);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 968;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__650_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 968;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_928 = var_Tensor;
            tmp_expression_value_927 = LOOKUP_ATTRIBUTE(tmp_expression_value_928, mod_consts[870]);
            if (tmp_expression_value_927 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 969;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_927, mod_consts[843]);
            Py_DECREF(tmp_expression_value_927);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 969;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__651_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 969;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_929 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_929, mod_consts[871]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 970;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_430 = mod_consts[389];
            Py_INCREF(tmp_defaults_430);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__652_lambda(tmp_defaults_430);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 970;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_930 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_930, mod_consts[872]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 971;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__653_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 971;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_931 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_931, mod_consts[873]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 972;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__654_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 972;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_932 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_932, mod_consts[874]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 973;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__655_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 973;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_933 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_933, mod_consts[875]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 974;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__656_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 974;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_934 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_934, mod_consts[876]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 975;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__657_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 975;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_935 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_935, mod_consts[877]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 976;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__658_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 976;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_936 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_936, mod_consts[878]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 977;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__659_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 977;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_937 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_937, mod_consts[879]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 978;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__660_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 978;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_938 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_938, mod_consts[880]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 979;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__661_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 979;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_939 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_939, mod_consts[881]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 980;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__662_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 980;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_940 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_940, mod_consts[882]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 981;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__663_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 981;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_941 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_941, mod_consts[883]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 982;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__664_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 982;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_942 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_942, mod_consts[884]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 983;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__665_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 983;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_943 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_943, mod_consts[57]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 984;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__666_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 984;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_944 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_944, mod_consts[885]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 985;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__667_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 985;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_945 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_945, mod_consts[886]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 986;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_431 = mod_consts[566];
            Py_INCREF(tmp_defaults_431);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__668_lambda(tmp_defaults_431);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 986;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_946 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_946, mod_consts[887]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 987;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_947 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_947 == NULL)) {
                tmp_expression_value_947 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_947 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 987;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_947, mod_consts[888]);
            if (tmp_tuple_element_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 987;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_432 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_432, 0, tmp_tuple_element_3);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__669_lambda(tmp_defaults_432);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 987;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_948 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_948, mod_consts[889]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 988;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_949 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_949 == NULL)) {
                tmp_expression_value_949 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_949 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 988;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_4 = LOOKUP_ATTRIBUTE(tmp_expression_value_949, mod_consts[888]);
            if (tmp_tuple_element_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 988;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_433 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_433, 0, tmp_tuple_element_4);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__670_lambda(tmp_defaults_433);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 988;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_950 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_950, mod_consts[890]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 989;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_951 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_951 == NULL)) {
                tmp_expression_value_951 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_951 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 989;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_5 = LOOKUP_ATTRIBUTE(tmp_expression_value_951, mod_consts[888]);
            if (tmp_tuple_element_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 989;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_434 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_434, 0, tmp_tuple_element_5);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__671_lambda(tmp_defaults_434);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 989;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_952 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_952, mod_consts[891]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 990;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_953 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_953 == NULL)) {
                tmp_expression_value_953 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_953 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 990;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_6 = LOOKUP_ATTRIBUTE(tmp_expression_value_953, mod_consts[888]);
            if (tmp_tuple_element_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 990;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_435 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_435, 0, tmp_tuple_element_6);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__672_lambda(tmp_defaults_435);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 990;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_954 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_954, mod_consts[892]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 991;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_436 = mod_consts[893];
            tmp_kw_defaults_4 = PyDict_Copy(mod_consts[894]);
            Py_INCREF(tmp_defaults_436);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__673_lambda(tmp_defaults_436, tmp_kw_defaults_4);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 991;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_955 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_955, mod_consts[895]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 992;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__674_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 992;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_956 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_956, mod_consts[872]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 993;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__675_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 993;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_957 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_957, mod_consts[896]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 994;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_958 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_958 == NULL)) {
                tmp_expression_value_958 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_958 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 994;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_7 = LOOKUP_ATTRIBUTE(tmp_expression_value_958, mod_consts[897]);
            if (tmp_tuple_element_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 994;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_437 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_437, 0, tmp_tuple_element_7);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__676_lambda(tmp_defaults_437);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 994;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_959 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_959, mod_consts[898]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 995;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_438 = mod_consts[189];
            Py_INCREF(tmp_defaults_438);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__677_lambda(tmp_defaults_438);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 995;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_960 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_960, mod_consts[899]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 996;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_961 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_961 == NULL)) {
                tmp_expression_value_961 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_961 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 996;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_8 = LOOKUP_ATTRIBUTE(tmp_expression_value_961, mod_consts[888]);
            if (tmp_tuple_element_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 996;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_439 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_439, 0, tmp_tuple_element_8);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__678_lambda(tmp_defaults_439);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 996;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_962 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_962, mod_consts[900]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 997;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_963 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_963 == NULL)) {
                tmp_expression_value_963 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_963 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 997;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_9 = LOOKUP_ATTRIBUTE(tmp_expression_value_963, mod_consts[888]);
            if (tmp_tuple_element_9 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 997;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_440 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_440, 0, tmp_tuple_element_9);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__679_lambda(tmp_defaults_440);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 997;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_964 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_964, mod_consts[901]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 998;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_965 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_965 == NULL)) {
                tmp_expression_value_965 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_965 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 998;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_10 = LOOKUP_ATTRIBUTE(tmp_expression_value_965, mod_consts[888]);
            if (tmp_tuple_element_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 998;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_441 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_441, 0, tmp_tuple_element_10);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__680_lambda(tmp_defaults_441);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 998;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_966 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_966, mod_consts[902]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 999;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__681_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 999;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_967 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_967, mod_consts[903]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1000;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__682_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1000;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_968 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_968, mod_consts[904]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1001;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__683_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1001;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_969 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_969, mod_consts[905]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1002;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_970 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_970 == NULL)) {
                tmp_expression_value_970 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_970 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1002;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_11 = LOOKUP_ATTRIBUTE(tmp_expression_value_970, mod_consts[888]);
            if (tmp_tuple_element_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1002;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_442 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_442, 0, tmp_tuple_element_11);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__684_lambda(tmp_defaults_442);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1002;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_971 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_971, mod_consts[906]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1003;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_972 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_972 == NULL)) {
                tmp_expression_value_972 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_972 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1003;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_12 = LOOKUP_ATTRIBUTE(tmp_expression_value_972, mod_consts[888]);
            if (tmp_tuple_element_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1003;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_443 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_443, 0, tmp_tuple_element_12);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__685_lambda(tmp_defaults_443);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1003;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_973 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_973, mod_consts[907]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1004;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__686_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1004;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_974 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_974, mod_consts[908]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1005;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__687_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1005;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_975 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_975, mod_consts[909]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1006;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__688_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1006;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_976 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_976, mod_consts[910]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1007;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_444 = mod_consts[723];
            tmp_kw_defaults_5 = PyDict_Copy(mod_consts[894]);
            Py_INCREF(tmp_defaults_444);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__689_lambda(tmp_defaults_444, tmp_kw_defaults_5);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1007;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_977 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_977, mod_consts[911]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1008;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__690_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1008;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_978 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_978, mod_consts[912]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1009;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__691_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1009;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_979 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_979, mod_consts[913]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1010;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_980 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_980 == NULL)) {
                tmp_expression_value_980 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_980 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1010;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_13 = LOOKUP_ATTRIBUTE(tmp_expression_value_980, mod_consts[888]);
            if (tmp_tuple_element_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1010;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_445 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_445, 0, tmp_tuple_element_13);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__692_lambda(tmp_defaults_445);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1010;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_981 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_981, mod_consts[914]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1011;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_982 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_982 == NULL)) {
                tmp_expression_value_982 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_982 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1011;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_14 = LOOKUP_ATTRIBUTE(tmp_expression_value_982, mod_consts[888]);
            if (tmp_tuple_element_14 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1011;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_446 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_446, 0, tmp_tuple_element_14);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__693_lambda(tmp_defaults_446);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1011;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_983 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_983, mod_consts[915]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1012;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_kw_defaults_6 = PyDict_Copy(mod_consts[894]);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__694_lambda(tmp_kw_defaults_6);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1012;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_984 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_984, mod_consts[34]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1013;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__695_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1013;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_985 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_985, mod_consts[916]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1014;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_986 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_986 == NULL)) {
                tmp_expression_value_986 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_986 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1014;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_15 = LOOKUP_ATTRIBUTE(tmp_expression_value_986, mod_consts[888]);
            if (tmp_tuple_element_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1014;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_447 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_447, 0, tmp_tuple_element_15);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__696_lambda(tmp_defaults_447);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1014;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_987 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_987, mod_consts[917]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1015;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__697_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1015;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_988 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_988, mod_consts[918]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1016;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__698_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1016;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_989 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_989, mod_consts[919]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1017;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_990 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_990 == NULL)) {
                tmp_expression_value_990 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_990 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1017;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_16 = LOOKUP_ATTRIBUTE(tmp_expression_value_990, mod_consts[888]);
            if (tmp_tuple_element_16 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1017;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_448 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_448, 0, tmp_tuple_element_16);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__699_lambda(tmp_defaults_448);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1017;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_991 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_991, mod_consts[920]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1018;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__700_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1018;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_992 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_992, mod_consts[921]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1019;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__701_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1019;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_993 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_993, mod_consts[922]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1020;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__702_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1020;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_994 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_994, mod_consts[923]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1021;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__703_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1021;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_995 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_995, mod_consts[924]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1022;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__704_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1022;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_996 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_996, mod_consts[925]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1023;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__705_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1023;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_997 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_997, mod_consts[926]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1024;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_449 = mod_consts[927];
            tmp_kw_defaults_7 = PyDict_Copy(mod_consts[894]);
            Py_INCREF(tmp_defaults_449);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__706_lambda(tmp_defaults_449, tmp_kw_defaults_7);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1024;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_998 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_998, mod_consts[463]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1025;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__707_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1025;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_999 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_999, mod_consts[928]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1026;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_1000 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_1000 == NULL)) {
                tmp_expression_value_1000 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_1000 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1026;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_17 = LOOKUP_ATTRIBUTE(tmp_expression_value_1000, mod_consts[888]);
            if (tmp_tuple_element_17 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1026;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_450 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_450, 0, tmp_tuple_element_17);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__708_lambda(tmp_defaults_450);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1026;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1001 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1001, mod_consts[929]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1027;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__709_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1027;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1002 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1002, mod_consts[930]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1028;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__710_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1028;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1003 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1003, mod_consts[515]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1029;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__711_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1029;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1004 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1004, mod_consts[527]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1030;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__712_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1030;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1005 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1005, mod_consts[931]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1031;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__713_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1031;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1006 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1006, mod_consts[932]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1032;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__714_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1032;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1007 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1007, mod_consts[933]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1033;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__715_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1033;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1008 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1008, mod_consts[934]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1034;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__716_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1034;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1009 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1009, mod_consts[659]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1035;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__717_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1035;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1010 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1010, mod_consts[935]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1036;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__718_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1036;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1011 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1011, mod_consts[936]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1037;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_451 = mod_consts[189];
            Py_INCREF(tmp_defaults_451);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__719_lambda(tmp_defaults_451);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1037;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1012 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1012, mod_consts[48]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1038;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__720_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1038;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1013 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1013, mod_consts[937]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1039;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_452 = mod_consts[242];
            tmp_kw_defaults_8 = PyDict_Copy(mod_consts[894]);
            Py_INCREF(tmp_defaults_452);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__721_lambda(tmp_defaults_452, tmp_kw_defaults_8);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1039;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1014 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1014, mod_consts[938]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1040;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__722_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1040;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1015 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1015, mod_consts[939]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1041;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__723_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1041;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1016 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1016, mod_consts[940]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1042;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__724_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1042;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1017 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1017, mod_consts[941]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1043;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__725_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1043;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1018 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1018, mod_consts[942]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1044;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__726_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1044;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1019 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1019, mod_consts[943]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1045;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_453 = mod_consts[944];
            Py_INCREF(tmp_defaults_453);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__727_lambda(tmp_defaults_453);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1045;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1020 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1020, mod_consts[945]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1046;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__728_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1046;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1021 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1021, mod_consts[946]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1047;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__729_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1047;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1022 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1022, mod_consts[947]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1048;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__730_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1048;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1023 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1023, mod_consts[948]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1049;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__731_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1049;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1024 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1024, mod_consts[949]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1050;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__732_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1050;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1025 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1025, mod_consts[950]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1051;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_454 = mod_consts[951];
            Py_INCREF(tmp_defaults_454);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__733_lambda(tmp_defaults_454);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1051;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1026 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1026, mod_consts[952]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1052;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__734_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1052;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1027 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1027, mod_consts[953]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1053;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_1028 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_1028 == NULL)) {
                tmp_expression_value_1028 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_1028 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1053;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_18 = LOOKUP_ATTRIBUTE(tmp_expression_value_1028, mod_consts[888]);
            if (tmp_tuple_element_18 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_dict_key_1);

                exception_lineno = 1053;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_455 = PyTuple_New(1);
            PyTuple_SET_ITEM(tmp_defaults_455, 0, tmp_tuple_element_18);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__735_lambda(tmp_defaults_455);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1053;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1029 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1029, mod_consts[954]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1054;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__736_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1054;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1030 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1030, mod_consts[955]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1055;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__737_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1055;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1031 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1031, mod_consts[956]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1056;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__738_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1056;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1032 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1032, mod_consts[957]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1057;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__739_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1057;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1033 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1033, mod_consts[958]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1058;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__740_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1058;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1034 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1034, mod_consts[749]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1059;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_456 = mod_consts[177];
            Py_INCREF(tmp_defaults_456);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__741_lambda(tmp_defaults_456);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1059;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1035 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1035, mod_consts[959]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1060;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__742_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1060;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1036 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1036, mod_consts[960]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1061;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__743_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1061;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1037 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1037, mod_consts[961]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1062;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__744_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1062;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1038 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1038, mod_consts[962]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1063;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__745_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1063;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1039 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1039, mod_consts[783]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1064;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__746_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1064;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1040 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1040, mod_consts[963]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1065;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_tuple_element_19 = Py_False;
            tmp_defaults_457 = PyTuple_New(3);
            {
                PyObject *tmp_expression_value_1041;
                PyTuple_SET_ITEM0(tmp_defaults_457, 0, tmp_tuple_element_19);
                tmp_tuple_element_19 = Py_False;
                PyTuple_SET_ITEM0(tmp_defaults_457, 1, tmp_tuple_element_19);
                tmp_expression_value_1041 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

                if (unlikely(tmp_expression_value_1041 == NULL)) {
                    tmp_expression_value_1041 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
                }

                if (tmp_expression_value_1041 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1065;
                    type_description_1 = "oooooooooo";
                    goto tuple_build_exception_3;
                }
                tmp_tuple_element_19 = LOOKUP_ATTRIBUTE(tmp_expression_value_1041, mod_consts[888]);
                if (tmp_tuple_element_19 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1065;
                    type_description_1 = "oooooooooo";
                    goto tuple_build_exception_3;
                }
                PyTuple_SET_ITEM(tmp_defaults_457, 2, tmp_tuple_element_19);
            }
            goto tuple_build_noexception_3;
            // Exception handling pass through code for tuple_build:
            tuple_build_exception_3:;
            Py_DECREF(tmp_dict_key_1);
            Py_DECREF(tmp_defaults_457);
            goto dict_build_exception_1;
            // Finished with no exception for tuple_build:
            tuple_build_noexception_3:;


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__747_lambda(tmp_defaults_457);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1065;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1042 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1042, mod_consts[964]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1066;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__748_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1066;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1043 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1043, mod_consts[965]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1067;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__749_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1067;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1044 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1044, mod_consts[966]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1068;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__750_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1068;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1045 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1045, mod_consts[967]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1069;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__751_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1069;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1046 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1046, mod_consts[968]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1070;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__752_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1070;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1047 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1047, mod_consts[643]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1071;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__753_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1071;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1048 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1048, mod_consts[969]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1072;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_458 = mod_consts[893];
            Py_INCREF(tmp_defaults_458);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__754_lambda(tmp_defaults_458);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1072;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1049 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1049, mod_consts[970]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1073;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__755_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1073;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1050 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1050, mod_consts[971]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1074;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__756_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1074;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1051 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1051, mod_consts[972]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1075;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__757_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1075;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            CHECK_OBJECT(var_Tensor);
            tmp_expression_value_1052 = var_Tensor;
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1052, mod_consts[973]);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1076;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__758_lambda();

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1076;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_1054 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_1054 == NULL)) {
                tmp_expression_value_1054 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_1054 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1077;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_expression_value_1053 = LOOKUP_ATTRIBUTE(tmp_expression_value_1054, mod_consts[253]);
            if (tmp_expression_value_1053 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1077;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_dict_key_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1053, mod_consts[479]);
            Py_DECREF(tmp_expression_value_1053);
            if (tmp_dict_key_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1077;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
            tmp_defaults_459 = mod_consts[223];
            Py_INCREF(tmp_defaults_459);


            tmp_dict_value_1 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__759_lambda(tmp_defaults_459);

            tmp_res = PyDict_SetItem(tmp_assign_source_2, tmp_dict_key_1, tmp_dict_value_1);
            Py_DECREF(tmp_dict_value_1);
            Py_DECREF(tmp_dict_key_1);
            if (tmp_res != 0) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1077;
                type_description_1 = "oooooooooo";
                goto dict_build_exception_1;
            }
        }
        goto dict_build_noexception_1;
        // Exception handling pass through code for dict_build:
        dict_build_exception_1:;
        Py_DECREF(tmp_assign_source_2);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_1:;
        assert(var_ret == NULL);
        var_ret = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = PyDict_New();
        assert(var_ret2 == NULL);
        var_ret2 = tmp_assign_source_3;
    }
    {
        PyObject *tmp_assign_source_4;
        PyObject *tmp_called_value_1;
        tmp_called_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[974]);

        if (unlikely(tmp_called_value_1 == NULL)) {
            tmp_called_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[974]);
        }

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1081;
            type_description_1 = "oooooooooo";
            goto frame_exception_exit_1;
        }
        frame_7ff0ae4604184518803c0a295e81bf4d->m_frame.f_lineno = 1081;
        tmp_assign_source_4 = CALL_FUNCTION_NO_ARGS(tmp_called_value_1);
        if (tmp_assign_source_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1081;
            type_description_1 = "oooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_ignored == NULL);
        var_ignored = tmp_assign_source_4;
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_iter_arg_1;
        PyObject *tmp_dict_arg_1;
        CHECK_OBJECT(var_ret);
        tmp_dict_arg_1 = var_ret;
        tmp_iter_arg_1 = DICT_ITERITEMS(tmp_dict_arg_1);
        assert(!(tmp_iter_arg_1 == NULL));
        tmp_assign_source_5 = MAKE_ITERATOR(tmp_iter_arg_1);
        Py_DECREF(tmp_iter_arg_1);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1083;
            type_description_1 = "oooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_5;
    }
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_6;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_1 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_6 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_6 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooooo";
                exception_lineno = 1083;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_6;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_iter_arg_2;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_iter_arg_2 = tmp_for_loop_1__iter_value;
        tmp_assign_source_7 = MAKE_UNPACK_ITERATOR(tmp_iter_arg_2);
        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1083;
            type_description_1 = "oooooooooo";
            goto try_except_handler_3;
        }
        {
            PyObject *old = tmp_tuple_unpack_1__source_iter;
            tmp_tuple_unpack_1__source_iter = tmp_assign_source_7;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_unpack_1;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_unpack_1 = tmp_tuple_unpack_1__source_iter;
        tmp_assign_source_8 = UNPACK_NEXT(tmp_unpack_1, 0, 2);
        if (tmp_assign_source_8 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "oooooooooo";
            exception_lineno = 1083;
            goto try_except_handler_4;
        }
        {
            PyObject *old = tmp_tuple_unpack_1__element_1;
            tmp_tuple_unpack_1__element_1 = tmp_assign_source_8;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_unpack_2;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_unpack_2 = tmp_tuple_unpack_1__source_iter;
        tmp_assign_source_9 = UNPACK_NEXT(tmp_unpack_2, 1, 2);
        if (tmp_assign_source_9 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "oooooooooo";
            exception_lineno = 1083;
            goto try_except_handler_4;
        }
        {
            PyObject *old = tmp_tuple_unpack_1__element_2;
            tmp_tuple_unpack_1__element_2 = tmp_assign_source_9;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_iterator_name_1;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_iterator_name_1 = tmp_tuple_unpack_1__source_iter;
        // Check if iterator has left-over elements.
        CHECK_OBJECT(tmp_iterator_name_1); assert(HAS_ITERNEXT(tmp_iterator_name_1));

        tmp_iterator_attempt = (*Py_TYPE(tmp_iterator_name_1)->tp_iternext)(tmp_iterator_name_1);

        if (likely(tmp_iterator_attempt == NULL)) {
            PyObject *error = GET_ERROR_OCCURRED();

            if (error != NULL) {
                if (EXCEPTION_MATCH_BOOL_SINGLE(error, PyExc_StopIteration)) {
                    CLEAR_ERROR_OCCURRED();
                } else {
                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    type_description_1 = "oooooooooo";
                    exception_lineno = 1083;
                    goto try_except_handler_4;
                }
            }
        } else {
            Py_DECREF(tmp_iterator_attempt);

            exception_type = PyExc_ValueError;
            Py_INCREF(PyExc_ValueError);
            exception_value = mod_consts[975];
            Py_INCREF(exception_value);
            exception_tb = NULL;

            type_description_1 = "oooooooooo";
            exception_lineno = 1083;
            goto try_except_handler_4;
        }
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
    Py_DECREF(tmp_tuple_unpack_1__source_iter);
    tmp_tuple_unpack_1__source_iter = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto try_except_handler_3;
    // End of try:
    try_end_1:;
    goto try_end_2;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_tuple_unpack_1__element_1);
    tmp_tuple_unpack_1__element_1 = NULL;
    Py_XDECREF(tmp_tuple_unpack_1__element_2);
    tmp_tuple_unpack_1__element_2 = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto try_except_handler_2;
    // End of try:
    try_end_2:;
    CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
    Py_DECREF(tmp_tuple_unpack_1__source_iter);
    tmp_tuple_unpack_1__source_iter = NULL;
    {
        PyObject *tmp_assign_source_10;
        CHECK_OBJECT(tmp_tuple_unpack_1__element_1);
        tmp_assign_source_10 = tmp_tuple_unpack_1__element_1;
        {
            PyObject *old = var_k;
            var_k = tmp_assign_source_10;
            Py_INCREF(var_k);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_1__element_1);
    tmp_tuple_unpack_1__element_1 = NULL;

    {
        PyObject *tmp_assign_source_11;
        CHECK_OBJECT(tmp_tuple_unpack_1__element_2);
        tmp_assign_source_11 = tmp_tuple_unpack_1__element_2;
        {
            PyObject *old = var_v;
            var_v = tmp_assign_source_11;
            Py_INCREF(var_v);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_1__element_2);
    tmp_tuple_unpack_1__element_2 = NULL;

    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_list_element_1;
        PyObject *tmp_expression_value_1055;
        CHECK_OBJECT(var_k);
        tmp_expression_value_1055 = var_k;
        tmp_list_element_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1055, mod_consts[976]);
        if (tmp_list_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1086;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        tmp_assign_source_12 = PyList_New(5);
        {
            PyObject *tmp_left_value_1;
            PyObject *tmp_expression_value_1056;
            PyObject *tmp_right_value_1;
            PyObject *tmp_left_value_2;
            PyObject *tmp_left_value_3;
            PyObject *tmp_right_value_2;
            PyObject *tmp_expression_value_1057;
            PyObject *tmp_right_value_3;
            PyObject *tmp_left_value_4;
            PyObject *tmp_left_value_5;
            PyObject *tmp_right_value_4;
            PyObject *tmp_expression_value_1058;
            PyObject *tmp_right_value_5;
            PyObject *tmp_left_value_6;
            PyObject *tmp_left_value_7;
            PyObject *tmp_right_value_6;
            PyObject *tmp_expression_value_1059;
            PyObject *tmp_right_value_7;
            PyList_SET_ITEM(tmp_assign_source_12, 0, tmp_list_element_1);
            CHECK_OBJECT(var_k);
            tmp_expression_value_1056 = var_k;
            tmp_left_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1056, mod_consts[976]);
            if (tmp_left_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1087;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            tmp_right_value_1 = mod_consts[977];
            tmp_list_element_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT_UNICODE(tmp_left_value_1, tmp_right_value_1);
            Py_DECREF(tmp_left_value_1);
            if (tmp_list_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1087;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            PyList_SET_ITEM(tmp_assign_source_12, 1, tmp_list_element_1);
            tmp_left_value_3 = mod_consts[978];
            CHECK_OBJECT(var_k);
            tmp_expression_value_1057 = var_k;
            tmp_right_value_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_1057, mod_consts[976]);
            if (tmp_right_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1088;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            tmp_left_value_2 = BINARY_OPERATION_ADD_OBJECT_UNICODE_OBJECT(tmp_left_value_3, tmp_right_value_2);
            Py_DECREF(tmp_right_value_2);
            if (tmp_left_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1088;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            tmp_right_value_3 = mod_consts[978];
            tmp_list_element_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT_UNICODE(tmp_left_value_2, tmp_right_value_3);
            Py_DECREF(tmp_left_value_2);
            if (tmp_list_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1088;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            PyList_SET_ITEM(tmp_assign_source_12, 2, tmp_list_element_1);
            tmp_left_value_5 = mod_consts[979];
            CHECK_OBJECT(var_k);
            tmp_expression_value_1058 = var_k;
            tmp_right_value_4 = LOOKUP_ATTRIBUTE(tmp_expression_value_1058, mod_consts[976]);
            if (tmp_right_value_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1089;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            tmp_left_value_4 = BINARY_OPERATION_ADD_OBJECT_UNICODE_OBJECT(tmp_left_value_5, tmp_right_value_4);
            Py_DECREF(tmp_right_value_4);
            if (tmp_left_value_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1089;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            tmp_right_value_5 = mod_consts[978];
            tmp_list_element_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT_UNICODE(tmp_left_value_4, tmp_right_value_5);
            Py_DECREF(tmp_left_value_4);
            if (tmp_list_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1089;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            PyList_SET_ITEM(tmp_assign_source_12, 3, tmp_list_element_1);
            tmp_left_value_7 = mod_consts[980];
            CHECK_OBJECT(var_k);
            tmp_expression_value_1059 = var_k;
            tmp_right_value_6 = LOOKUP_ATTRIBUTE(tmp_expression_value_1059, mod_consts[976]);
            if (tmp_right_value_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1090;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            tmp_left_value_6 = BINARY_OPERATION_ADD_OBJECT_UNICODE_OBJECT(tmp_left_value_7, tmp_right_value_6);
            Py_DECREF(tmp_right_value_6);
            if (tmp_left_value_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1090;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            tmp_right_value_7 = mod_consts[978];
            tmp_list_element_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT_UNICODE(tmp_left_value_6, tmp_right_value_7);
            Py_DECREF(tmp_left_value_6);
            if (tmp_list_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1090;
                type_description_1 = "oooooooooo";
                goto list_build_exception_1;
            }
            PyList_SET_ITEM(tmp_assign_source_12, 4, tmp_list_element_1);
        }
        goto list_build_noexception_1;
        // Exception handling pass through code for list_build:
        list_build_exception_1:;
        Py_DECREF(tmp_assign_source_12);
        goto try_except_handler_2;
        // Finished with no exception for list_build:
        list_build_noexception_1:;
        {
            PyObject *old = var_names;
            var_names = tmp_assign_source_12;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_called_value_2;
        PyObject *tmp_expression_value_1060;
        PyObject *tmp_expression_value_1061;
        PyObject *tmp_call_result_1;
        int tmp_truth_name_1;
        CHECK_OBJECT(var_k);
        tmp_expression_value_1061 = var_k;
        tmp_expression_value_1060 = LOOKUP_ATTRIBUTE(tmp_expression_value_1061, mod_consts[976]);
        if (tmp_expression_value_1060 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1093;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        tmp_called_value_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_1060, mod_consts[981]);
        Py_DECREF(tmp_expression_value_1060);
        if (tmp_called_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1093;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        frame_7ff0ae4604184518803c0a295e81bf4d->m_frame.f_lineno = 1093;
        tmp_call_result_1 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_2, mod_consts[982]);

        Py_DECREF(tmp_called_value_2);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1093;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_1);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_1);

            exception_lineno = 1093;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_1);
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_expression_value_1062;
        PyObject *tmp_expression_value_1063;
        PyObject *tmp_subscript_value_1;
        CHECK_OBJECT(var_k);
        tmp_expression_value_1063 = var_k;
        tmp_expression_value_1062 = LOOKUP_ATTRIBUTE(tmp_expression_value_1063, mod_consts[976]);
        if (tmp_expression_value_1062 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1096;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        tmp_subscript_value_1 = mod_consts[983];
        tmp_assign_source_13 = LOOKUP_SUBSCRIPT(tmp_expression_value_1062, tmp_subscript_value_1);
        Py_DECREF(tmp_expression_value_1062);
        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1096;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_subname;
            var_subname = tmp_assign_source_13;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_called_value_3;
        PyObject *tmp_expression_value_1064;
        PyObject *tmp_call_result_2;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_list_element_2;
        PyObject *tmp_left_value_8;
        PyObject *tmp_left_value_9;
        PyObject *tmp_right_value_8;
        PyObject *tmp_right_value_9;
        CHECK_OBJECT(var_names);
        tmp_expression_value_1064 = var_names;
        tmp_called_value_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_1064, mod_consts[984]);
        assert(!(tmp_called_value_3 == NULL));
        tmp_left_value_9 = mod_consts[978];
        CHECK_OBJECT(var_subname);
        tmp_right_value_8 = var_subname;
        tmp_left_value_8 = BINARY_OPERATION_ADD_OBJECT_UNICODE_OBJECT(tmp_left_value_9, tmp_right_value_8);
        if (tmp_left_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_3);

            exception_lineno = 1098;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        tmp_right_value_9 = mod_consts[978];
        tmp_list_element_2 = BINARY_OPERATION_ADD_OBJECT_OBJECT_UNICODE(tmp_left_value_8, tmp_right_value_9);
        Py_DECREF(tmp_left_value_8);
        if (tmp_list_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_3);

            exception_lineno = 1098;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        tmp_args_element_value_1 = PyList_New(3);
        {
            PyObject *tmp_left_value_10;
            PyObject *tmp_left_value_11;
            PyObject *tmp_right_value_10;
            PyObject *tmp_right_value_11;
            PyObject *tmp_left_value_12;
            PyObject *tmp_left_value_13;
            PyObject *tmp_right_value_12;
            PyObject *tmp_right_value_13;
            PyList_SET_ITEM(tmp_args_element_value_1, 0, tmp_list_element_2);
            tmp_left_value_11 = mod_consts[979];
            CHECK_OBJECT(var_subname);
            tmp_right_value_10 = var_subname;
            tmp_left_value_10 = BINARY_OPERATION_ADD_OBJECT_UNICODE_OBJECT(tmp_left_value_11, tmp_right_value_10);
            if (tmp_left_value_10 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1099;
                type_description_1 = "oooooooooo";
                goto list_build_exception_2;
            }
            tmp_right_value_11 = mod_consts[978];
            tmp_list_element_2 = BINARY_OPERATION_ADD_OBJECT_OBJECT_UNICODE(tmp_left_value_10, tmp_right_value_11);
            Py_DECREF(tmp_left_value_10);
            if (tmp_list_element_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1099;
                type_description_1 = "oooooooooo";
                goto list_build_exception_2;
            }
            PyList_SET_ITEM(tmp_args_element_value_1, 1, tmp_list_element_2);
            tmp_left_value_13 = mod_consts[980];
            CHECK_OBJECT(var_subname);
            tmp_right_value_12 = var_subname;
            tmp_left_value_12 = BINARY_OPERATION_ADD_OBJECT_UNICODE_OBJECT(tmp_left_value_13, tmp_right_value_12);
            if (tmp_left_value_12 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1100;
                type_description_1 = "oooooooooo";
                goto list_build_exception_2;
            }
            tmp_right_value_13 = mod_consts[978];
            tmp_list_element_2 = BINARY_OPERATION_ADD_OBJECT_OBJECT_UNICODE(tmp_left_value_12, tmp_right_value_13);
            Py_DECREF(tmp_left_value_12);
            if (tmp_list_element_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1100;
                type_description_1 = "oooooooooo";
                goto list_build_exception_2;
            }
            PyList_SET_ITEM(tmp_args_element_value_1, 2, tmp_list_element_2);
        }
        goto list_build_noexception_2;
        // Exception handling pass through code for list_build:
        list_build_exception_2:;
        Py_DECREF(tmp_called_value_3);
        Py_DECREF(tmp_args_element_value_1);
        goto try_except_handler_2;
        // Finished with no exception for list_build:
        list_build_noexception_2:;
        frame_7ff0ae4604184518803c0a295e81bf4d->m_frame.f_lineno = 1097;
        tmp_call_result_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_3, tmp_args_element_value_1);
        Py_DECREF(tmp_called_value_3);
        Py_DECREF(tmp_args_element_value_1);
        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1097;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        Py_DECREF(tmp_call_result_2);
    }
    branch_no_1:;
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_iter_arg_3;
        if (var_names == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[864]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1103;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }

        tmp_iter_arg_3 = var_names;
        tmp_assign_source_14 = MAKE_ITERATOR(tmp_iter_arg_3);
        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1103;
            type_description_1 = "oooooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = tmp_for_loop_2__for_iterator;
            tmp_for_loop_2__for_iterator = tmp_assign_source_14;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    loop_start_2:;
    {
        PyObject *tmp_next_source_2;
        PyObject *tmp_assign_source_15;
        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
        tmp_assign_source_15 = ITERATOR_NEXT(tmp_next_source_2);
        if (tmp_assign_source_15 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_2;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooooo";
                exception_lineno = 1103;
                goto try_except_handler_5;
            }
        }

        {
            PyObject *old = tmp_for_loop_2__iter_value;
            tmp_for_loop_2__iter_value = tmp_assign_source_15;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_16;
        CHECK_OBJECT(tmp_for_loop_2__iter_value);
        tmp_assign_source_16 = tmp_for_loop_2__iter_value;
        {
            PyObject *old = var_name;
            var_name = tmp_assign_source_16;
            Py_INCREF(var_name);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_getattr_target_1;
        PyObject *tmp_getattr_attr_1;
        PyObject *tmp_getattr_default_1;
        CHECK_OBJECT(var_Tensor);
        tmp_getattr_target_1 = var_Tensor;
        CHECK_OBJECT(var_name);
        tmp_getattr_attr_1 = var_name;
        tmp_getattr_default_1 = Py_None;
        tmp_assign_source_17 = BUILTIN_GETATTR(tmp_getattr_target_1, tmp_getattr_attr_1, tmp_getattr_default_1);
        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1104;
            type_description_1 = "oooooooooo";
            goto try_except_handler_5;
        }
        {
            PyObject *old = var_func;
            var_func = tmp_assign_source_17;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_2;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_called_value_4;
        PyObject *tmp_call_result_3;
        PyObject *tmp_args_element_value_2;
        int tmp_truth_name_2;
        int tmp_and_left_truth_2;
        nuitka_bool tmp_and_left_value_2;
        nuitka_bool tmp_and_right_value_2;
        PyObject *tmp_key_value_1;
        PyObject *tmp_dict_arg_value_1;
        PyObject *tmp_cmp_expr_left_1;
        PyObject *tmp_cmp_expr_right_1;
        tmp_called_value_4 = LOOKUP_BUILTIN(mod_consts[985]);
        assert(tmp_called_value_4 != NULL);
        CHECK_OBJECT(var_func);
        tmp_args_element_value_2 = var_func;
        frame_7ff0ae4604184518803c0a295e81bf4d->m_frame.f_lineno = 1105;
        tmp_call_result_3 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_4, tmp_args_element_value_2);
        if (tmp_call_result_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1105;
            type_description_1 = "oooooooooo";
            goto try_except_handler_5;
        }
        tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_3);
        if (tmp_truth_name_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_3);

            exception_lineno = 1105;
            type_description_1 = "oooooooooo";
            goto try_except_handler_5;
        }
        tmp_and_left_value_1 = tmp_truth_name_2 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_3);
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1105;
            type_description_1 = "oooooooooo";
            goto try_except_handler_5;
        }
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(var_func);
        tmp_key_value_1 = var_func;
        CHECK_OBJECT(var_ret);
        tmp_dict_arg_value_1 = var_ret;
        tmp_res = DICT_HAS_ITEM(tmp_dict_arg_value_1, tmp_key_value_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1105;
            type_description_1 = "oooooooooo";
            goto try_except_handler_5;
        }
        tmp_and_left_value_2 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        CHECK_OBJECT(var_func);
        tmp_cmp_expr_left_1 = var_func;
        CHECK_OBJECT(var_ignored);
        tmp_cmp_expr_right_1 = var_ignored;
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_1, tmp_cmp_expr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1105;
            type_description_1 = "oooooooooo";
            goto try_except_handler_5;
        }
        tmp_and_right_value_2 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_right_value_1 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_and_right_value_1 = tmp_and_left_value_2;
        and_end_2:;
        tmp_condition_result_2 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_2 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    {
        PyObject *tmp_ass_subvalue_1;
        PyObject *tmp_ass_subscribed_1;
        PyObject *tmp_ass_subscript_1;
        CHECK_OBJECT(var_v);
        tmp_ass_subvalue_1 = var_v;
        if (var_ret2 == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[986]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1106;
            type_description_1 = "oooooooooo";
            goto try_except_handler_5;
        }

        tmp_ass_subscribed_1 = var_ret2;
        CHECK_OBJECT(var_func);
        tmp_ass_subscript_1 = var_func;
        tmp_result = SET_SUBSCRIPT(tmp_ass_subscribed_1, tmp_ass_subscript_1, tmp_ass_subvalue_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1106;
            type_description_1 = "oooooooooo";
            goto try_except_handler_5;
        }
    }
    branch_no_2:;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 1103;
        type_description_1 = "oooooooooo";
        goto try_except_handler_5;
    }
    goto loop_start_2;
    loop_end_2:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto try_except_handler_2;
    // End of try:
    try_end_3:;
    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 1083;
        type_description_1 = "oooooooooo";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_4;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    {
        PyObject *tmp_dict_arg_value_2;
        PyObject *tmp_iterable_value_1;
        CHECK_OBJECT(var_ret);
        tmp_dict_arg_value_2 = var_ret;
        if (var_ret2 == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[986]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1108;
            type_description_1 = "oooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_iterable_value_1 = var_ret2;
        assert(PyDict_Check(tmp_dict_arg_value_2));
        if (HAS_ATTR_BOOL(tmp_iterable_value_1, const_str_plain_keys)){
            tmp_res = PyDict_Merge(tmp_dict_arg_value_2, tmp_iterable_value_1, 1);
        } else {
            tmp_res = PyDict_MergeFromSeq2(tmp_dict_arg_value_2, tmp_iterable_value_1, 1);
        }

        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1108;
            type_description_1 = "oooooooooo";
            goto frame_exception_exit_1;
        }
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_7ff0ae4604184518803c0a295e81bf4d);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_7ff0ae4604184518803c0a295e81bf4d);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_7ff0ae4604184518803c0a295e81bf4d, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_7ff0ae4604184518803c0a295e81bf4d->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_7ff0ae4604184518803c0a295e81bf4d, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_7ff0ae4604184518803c0a295e81bf4d,
        type_description_1,
        var_ret,
        var_Tensor,
        var_ret2,
        var_ignored,
        var_k,
        var_v,
        var_names,
        var_subname,
        var_name,
        var_func
    );


    // Release cached frame if used for exception.
    if (frame_7ff0ae4604184518803c0a295e81bf4d == cache_frame_7ff0ae4604184518803c0a295e81bf4d) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_7ff0ae4604184518803c0a295e81bf4d);
        cache_frame_7ff0ae4604184518803c0a295e81bf4d = NULL;
    }

    assertFrameObject(frame_7ff0ae4604184518803c0a295e81bf4d);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    CHECK_OBJECT(var_ret);
    tmp_return_value = var_ret;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_ret);
    Py_DECREF(var_ret);
    var_ret = NULL;
    CHECK_OBJECT(var_Tensor);
    Py_DECREF(var_Tensor);
    var_Tensor = NULL;
    Py_XDECREF(var_ret2);
    var_ret2 = NULL;
    CHECK_OBJECT(var_ignored);
    Py_DECREF(var_ignored);
    var_ignored = NULL;
    Py_XDECREF(var_k);
    var_k = NULL;
    Py_XDECREF(var_v);
    var_v = NULL;
    Py_XDECREF(var_names);
    var_names = NULL;
    Py_XDECREF(var_subname);
    var_subname = NULL;
    Py_XDECREF(var_name);
    var_name = NULL;
    Py_XDECREF(var_func);
    var_func = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_5 = exception_type;
    exception_keeper_value_5 = exception_value;
    exception_keeper_tb_5 = exception_tb;
    exception_keeper_lineno_5 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_ret);
    var_ret = NULL;
    Py_XDECREF(var_Tensor);
    var_Tensor = NULL;
    Py_XDECREF(var_ret2);
    var_ret2 = NULL;
    Py_XDECREF(var_ignored);
    var_ignored = NULL;
    Py_XDECREF(var_k);
    var_k = NULL;
    Py_XDECREF(var_v);
    var_v = NULL;
    Py_XDECREF(var_names);
    var_names = NULL;
    Py_XDECREF(var_subname);
    var_subname = NULL;
    Py_XDECREF(var_name);
    var_name = NULL;
    Py_XDECREF(var_func);
    var_func = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_5;
    exception_value = exception_keeper_value_5;
    exception_tb = exception_keeper_tb_5;
    exception_lineno = exception_keeper_lineno_5;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.


   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_torch$overrides$$$function__3_wrap_torch_function(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    struct Nuitka_CellObject *par_dispatcher = Nuitka_Cell_New1(python_pars[0]);
    PyObject *var_inner = NULL;
    PyObject *tmp_return_value = NULL;

    // Actual function body.
    {
        PyObject *tmp_assign_source_1;
        struct Nuitka_CellObject *tmp_closure_1[1];

        tmp_closure_1[0] = par_dispatcher;
        Py_INCREF(tmp_closure_1[0]);

        tmp_assign_source_1 = MAKE_FUNCTION_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner(tmp_closure_1);

        assert(var_inner == NULL);
        var_inner = tmp_assign_source_1;
    }
    // Tried code:
    CHECK_OBJECT(var_inner);
    tmp_return_value = var_inner;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_inner);
    Py_DECREF(var_inner);
    var_inner = NULL;
    goto function_return_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;


function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_dispatcher);
    Py_DECREF(par_dispatcher);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    struct Nuitka_CellObject *par_func = Nuitka_Cell_New1(python_pars[0]);
    PyObject *var_wrapped = NULL;
    struct Nuitka_FrameObject *frame_fc0fb2316499201016d2c11f98c02811;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_fc0fb2316499201016d2c11f98c02811 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_fc0fb2316499201016d2c11f98c02811)) {
        Py_XDECREF(cache_frame_fc0fb2316499201016d2c11f98c02811);

#if _DEBUG_REFCOUNTS
        if (cache_frame_fc0fb2316499201016d2c11f98c02811 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_fc0fb2316499201016d2c11f98c02811 = MAKE_FUNCTION_FRAME(codeobj_fc0fb2316499201016d2c11f98c02811, module_torch$overrides, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_fc0fb2316499201016d2c11f98c02811->m_type_description == NULL);
    frame_fc0fb2316499201016d2c11f98c02811 = cache_frame_fc0fb2316499201016d2c11f98c02811;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_fc0fb2316499201016d2c11f98c02811);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_fc0fb2316499201016d2c11f98c02811) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_value_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_args_element_value_2;
        struct Nuitka_CellObject *tmp_closure_1[2];
        tmp_called_instance_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[990]);

        if (unlikely(tmp_called_instance_1 == NULL)) {
            tmp_called_instance_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[990]);
        }

        assert(!(tmp_called_instance_1 == NULL));
        CHECK_OBJECT(Nuitka_Cell_GET(par_func));
        tmp_args_element_value_1 = Nuitka_Cell_GET(par_func);
        frame_fc0fb2316499201016d2c11f98c02811->m_frame.f_lineno = 1135;
        tmp_called_value_1 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_1, mod_consts[991], tmp_args_element_value_1);
        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1135;
            type_description_1 = "co";
            goto frame_exception_exit_1;
        }

        tmp_closure_1[0] = self->m_closure[0];
        Py_INCREF(tmp_closure_1[0]);
        tmp_closure_1[1] = par_func;
        Py_INCREF(tmp_closure_1[1]);

        tmp_args_element_value_2 = MAKE_FUNCTION_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner$$$function__1_wrapped(tmp_closure_1);

        frame_fc0fb2316499201016d2c11f98c02811->m_frame.f_lineno = 1135;
        tmp_assign_source_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_1, tmp_args_element_value_2);
        Py_DECREF(tmp_called_value_1);
        Py_DECREF(tmp_args_element_value_2);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1135;
            type_description_1 = "co";
            goto frame_exception_exit_1;
        }
        assert(var_wrapped == NULL);
        var_wrapped = tmp_assign_source_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_fc0fb2316499201016d2c11f98c02811);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_fc0fb2316499201016d2c11f98c02811);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_fc0fb2316499201016d2c11f98c02811, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_fc0fb2316499201016d2c11f98c02811->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_fc0fb2316499201016d2c11f98c02811, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_fc0fb2316499201016d2c11f98c02811,
        type_description_1,
        par_func,
        var_wrapped
    );


    // Release cached frame if used for exception.
    if (frame_fc0fb2316499201016d2c11f98c02811 == cache_frame_fc0fb2316499201016d2c11f98c02811) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_fc0fb2316499201016d2c11f98c02811);
        cache_frame_fc0fb2316499201016d2c11f98c02811 = NULL;
    }

    assertFrameObject(frame_fc0fb2316499201016d2c11f98c02811);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    CHECK_OBJECT(var_wrapped);
    tmp_return_value = var_wrapped;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_wrapped);
    Py_DECREF(var_wrapped);
    var_wrapped = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_func);
    Py_DECREF(par_func);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_func);
    Py_DECREF(par_func);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner$$$function__1_wrapped(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_args = python_pars[0];
    PyObject *par_kwargs = python_pars[1];
    PyObject *var_relevant_args = NULL;
    struct Nuitka_FrameObject *frame_bea55e10897cf5b6c5f6dccbe052466a;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    static struct Nuitka_FrameObject *cache_frame_bea55e10897cf5b6c5f6dccbe052466a = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_bea55e10897cf5b6c5f6dccbe052466a)) {
        Py_XDECREF(cache_frame_bea55e10897cf5b6c5f6dccbe052466a);

#if _DEBUG_REFCOUNTS
        if (cache_frame_bea55e10897cf5b6c5f6dccbe052466a == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_bea55e10897cf5b6c5f6dccbe052466a = MAKE_FUNCTION_FRAME(codeobj_bea55e10897cf5b6c5f6dccbe052466a, module_torch$overrides, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_bea55e10897cf5b6c5f6dccbe052466a->m_type_description == NULL);
    frame_bea55e10897cf5b6c5f6dccbe052466a = cache_frame_bea55e10897cf5b6c5f6dccbe052466a;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_bea55e10897cf5b6c5f6dccbe052466a);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_bea55e10897cf5b6c5f6dccbe052466a) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_dircall_arg1_1;
        PyObject *tmp_dircall_arg2_1;
        PyObject *tmp_dircall_arg3_1;
        if (Nuitka_Cell_GET(self->m_closure[0]) == NULL) {

            FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[994]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1137;
            type_description_1 = "ooocc";
            goto frame_exception_exit_1;
        }

        tmp_dircall_arg1_1 = Nuitka_Cell_GET(self->m_closure[0]);
        CHECK_OBJECT(par_args);
        tmp_dircall_arg2_1 = par_args;
        CHECK_OBJECT(par_kwargs);
        tmp_dircall_arg3_1 = par_kwargs;
        Py_INCREF(tmp_dircall_arg1_1);
        Py_INCREF(tmp_dircall_arg2_1);
        Py_INCREF(tmp_dircall_arg3_1);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_1, tmp_dircall_arg2_1, tmp_dircall_arg3_1};
            tmp_assign_source_1 = impl___main__$$$function__5_complex_call_helper_star_list_star_dict(dir_call_args);
        }
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1137;
            type_description_1 = "ooocc";
            goto frame_exception_exit_1;
        }
        assert(var_relevant_args == NULL);
        var_relevant_args = tmp_assign_source_1;
    }
    {
        nuitka_bool tmp_condition_result_1;
        PyObject *tmp_called_value_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_value_1;
        int tmp_truth_name_1;
        tmp_called_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[114]);

        if (unlikely(tmp_called_value_1 == NULL)) {
            tmp_called_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[114]);
        }

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1138;
            type_description_1 = "ooocc";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(var_relevant_args);
        tmp_args_element_value_1 = var_relevant_args;
        frame_bea55e10897cf5b6c5f6dccbe052466a->m_frame.f_lineno = 1138;
        tmp_call_result_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_1, tmp_args_element_value_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1138;
            type_description_1 = "ooocc";
            goto frame_exception_exit_1;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_1);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_1);

            exception_lineno = 1138;
            type_description_1 = "ooocc";
            goto frame_exception_exit_1;
        }
        tmp_condition_result_1 = tmp_truth_name_1 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_1);
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    {
        PyObject *tmp_dircall_arg1_2;
        PyObject *tmp_dircall_arg2_2;
        PyObject *tmp_tuple_element_1;
        PyObject *tmp_dircall_arg3_2;
        PyObject *tmp_dircall_arg4_1;
        tmp_dircall_arg1_2 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[117]);

        if (unlikely(tmp_dircall_arg1_2 == NULL)) {
            tmp_dircall_arg1_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[117]);
        }

        if (tmp_dircall_arg1_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1139;
            type_description_1 = "ooocc";
            goto frame_exception_exit_1;
        }
        if (Nuitka_Cell_GET(self->m_closure[1]) == NULL) {

            FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[995]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1139;
            type_description_1 = "ooocc";
            goto frame_exception_exit_1;
        }

        tmp_tuple_element_1 = Nuitka_Cell_GET(self->m_closure[1]);
        tmp_dircall_arg2_2 = PyTuple_New(2);
        PyTuple_SET_ITEM0(tmp_dircall_arg2_2, 0, tmp_tuple_element_1);
        CHECK_OBJECT(var_relevant_args);
        tmp_tuple_element_1 = var_relevant_args;
        PyTuple_SET_ITEM0(tmp_dircall_arg2_2, 1, tmp_tuple_element_1);
        CHECK_OBJECT(par_args);
        tmp_dircall_arg3_2 = par_args;
        CHECK_OBJECT(par_kwargs);
        tmp_dircall_arg4_1 = par_kwargs;
        Py_INCREF(tmp_dircall_arg1_2);
        Py_INCREF(tmp_dircall_arg3_2);
        Py_INCREF(tmp_dircall_arg4_1);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_2, tmp_dircall_arg2_2, tmp_dircall_arg3_2, tmp_dircall_arg4_1};
            tmp_return_value = impl___main__$$$function__10_complex_call_helper_pos_star_list_star_dict(dir_call_args);
        }
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1139;
            type_description_1 = "ooocc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }
    branch_no_1:;
    {
        PyObject *tmp_dircall_arg1_3;
        PyObject *tmp_dircall_arg2_3;
        PyObject *tmp_dircall_arg3_3;
        if (Nuitka_Cell_GET(self->m_closure[1]) == NULL) {

            FORMAT_UNBOUND_CLOSURE_ERROR(&exception_type, &exception_value, mod_consts[995]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1141;
            type_description_1 = "ooocc";
            goto frame_exception_exit_1;
        }

        tmp_dircall_arg1_3 = Nuitka_Cell_GET(self->m_closure[1]);
        CHECK_OBJECT(par_args);
        tmp_dircall_arg2_3 = par_args;
        CHECK_OBJECT(par_kwargs);
        tmp_dircall_arg3_3 = par_kwargs;
        Py_INCREF(tmp_dircall_arg1_3);
        Py_INCREF(tmp_dircall_arg2_3);
        Py_INCREF(tmp_dircall_arg3_3);

        {
            PyObject *dir_call_args[] = {tmp_dircall_arg1_3, tmp_dircall_arg2_3, tmp_dircall_arg3_3};
            tmp_return_value = impl___main__$$$function__5_complex_call_helper_star_list_star_dict(dir_call_args);
        }
        if (tmp_return_value == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1141;
            type_description_1 = "ooocc";
            goto frame_exception_exit_1;
        }
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_bea55e10897cf5b6c5f6dccbe052466a);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_bea55e10897cf5b6c5f6dccbe052466a);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_bea55e10897cf5b6c5f6dccbe052466a);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_bea55e10897cf5b6c5f6dccbe052466a, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_bea55e10897cf5b6c5f6dccbe052466a->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_bea55e10897cf5b6c5f6dccbe052466a, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_bea55e10897cf5b6c5f6dccbe052466a,
        type_description_1,
        par_args,
        par_kwargs,
        var_relevant_args,
        self->m_closure[0],
        self->m_closure[1]
    );


    // Release cached frame if used for exception.
    if (frame_bea55e10897cf5b6c5f6dccbe052466a == cache_frame_bea55e10897cf5b6c5f6dccbe052466a) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_bea55e10897cf5b6c5f6dccbe052466a);
        cache_frame_bea55e10897cf5b6c5f6dccbe052466a = NULL;
    }

    assertFrameObject(frame_bea55e10897cf5b6c5f6dccbe052466a);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_relevant_args);
    Py_DECREF(var_relevant_args);
    var_relevant_args = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_relevant_args);
    var_relevant_args = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);
    CHECK_OBJECT(par_kwargs);
    Py_DECREF(par_kwargs);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);
    CHECK_OBJECT(par_kwargs);
    Py_DECREF(par_kwargs);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_torch$overrides$$$function__4__get_overloaded_args(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_relevant_args = python_pars[0];
    PyObject *var_overloaded_types = NULL;
    PyObject *var_overloaded_args = NULL;
    PyObject *var_arg = NULL;
    PyObject *var_arg_type = NULL;
    PyObject *var_index = NULL;
    PyObject *var_i = NULL;
    PyObject *var_old_arg = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_tuple_unpack_1__element_1 = NULL;
    PyObject *tmp_tuple_unpack_1__element_2 = NULL;
    PyObject *tmp_tuple_unpack_1__source_iter = NULL;
    struct Nuitka_FrameObject *frame_2aee0e71fbfb7d70078ef3e5651c5274;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    PyObject *tmp_iterator_attempt;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    PyObject *tmp_return_value = NULL;
    static struct Nuitka_FrameObject *cache_frame_2aee0e71fbfb7d70078ef3e5651c5274 = NULL;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;

    // Actual function body.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = PySet_New(NULL);
        assert(var_overloaded_types == NULL);
        var_overloaded_types = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = PyList_New(0);
        assert(var_overloaded_args == NULL);
        var_overloaded_args = tmp_assign_source_2;
    }
    // Tried code:
    if (isFrameUnusable(cache_frame_2aee0e71fbfb7d70078ef3e5651c5274)) {
        Py_XDECREF(cache_frame_2aee0e71fbfb7d70078ef3e5651c5274);

#if _DEBUG_REFCOUNTS
        if (cache_frame_2aee0e71fbfb7d70078ef3e5651c5274 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_2aee0e71fbfb7d70078ef3e5651c5274 = MAKE_FUNCTION_FRAME(codeobj_2aee0e71fbfb7d70078ef3e5651c5274, module_torch$overrides, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_2aee0e71fbfb7d70078ef3e5651c5274->m_type_description == NULL);
    frame_2aee0e71fbfb7d70078ef3e5651c5274 = cache_frame_2aee0e71fbfb7d70078ef3e5651c5274;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_2aee0e71fbfb7d70078ef3e5651c5274);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_2aee0e71fbfb7d70078ef3e5651c5274) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_iter_arg_1;
        CHECK_OBJECT(par_relevant_args);
        tmp_iter_arg_1 = par_relevant_args;
        tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1181;
            type_description_1 = "oooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_3;
    }
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_4;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_1 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_4 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooo";
                exception_lineno = 1181;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_4;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_5;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_assign_source_5 = tmp_for_loop_1__iter_value;
        {
            PyObject *old = var_arg;
            var_arg = tmp_assign_source_5;
            Py_INCREF(var_arg);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_type_arg_1;
        CHECK_OBJECT(var_arg);
        tmp_type_arg_1 = var_arg;
        tmp_assign_source_6 = BUILTIN_TYPE1(tmp_type_arg_1);
        assert(!(tmp_assign_source_6 == NULL));
        {
            PyObject *old = var_arg_type;
            var_arg_type = tmp_assign_source_6;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_1;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_cmp_expr_left_1;
        PyObject *tmp_cmp_expr_right_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_attribute_value_1;
        CHECK_OBJECT(var_arg_type);
        tmp_cmp_expr_left_1 = var_arg_type;
        if (var_overloaded_types == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[996]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1186;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }

        tmp_cmp_expr_right_1 = var_overloaded_types;
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_1, tmp_cmp_expr_left_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1186;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }
        tmp_and_left_value_1 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        CHECK_OBJECT(var_arg_type);
        tmp_expression_value_1 = var_arg_type;
        tmp_attribute_value_1 = mod_consts[145];
        tmp_res = BUILTIN_HASATTR_BOOL(tmp_expression_value_1, tmp_attribute_value_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1186;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }
        tmp_and_right_value_1 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_1 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_1 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_1 == NUITKA_BOOL_TRUE) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    {
        nuitka_bool tmp_condition_result_2;
        int tmp_truth_name_1;
        if (var_overloaded_types == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[996]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1189;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }

        tmp_truth_name_1 = CHECK_IF_TRUE(var_overloaded_types);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1189;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }
        tmp_condition_result_2 = tmp_truth_name_1 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    {
        PyObject *tmp_called_instance_1;
        PyObject *tmp_call_result_1;
        PyObject *tmp_args_element_value_1;
        if (var_overloaded_types == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[996]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1190;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }

        tmp_called_instance_1 = var_overloaded_types;
        CHECK_OBJECT(var_arg_type);
        tmp_args_element_value_1 = var_arg_type;
        frame_2aee0e71fbfb7d70078ef3e5651c5274->m_frame.f_lineno = 1190;
        tmp_call_result_1 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_1, mod_consts[175], tmp_args_element_value_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1190;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }
        Py_DECREF(tmp_call_result_1);
    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_len_arg_1;
        if (var_overloaded_args == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[997]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1194;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }

        tmp_len_arg_1 = var_overloaded_args;
        tmp_assign_source_7 = BUILTIN_LEN(tmp_len_arg_1);
        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1194;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_index;
            var_index = tmp_assign_source_7;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_8;
        PyObject *tmp_iter_arg_2;
        PyObject *tmp_called_value_1;
        PyObject *tmp_args_element_value_2;
        tmp_called_value_1 = (PyObject *)&PyEnum_Type;
        if (var_overloaded_args == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[997]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1195;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }

        tmp_args_element_value_2 = var_overloaded_args;
        frame_2aee0e71fbfb7d70078ef3e5651c5274->m_frame.f_lineno = 1195;
        tmp_iter_arg_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_1, tmp_args_element_value_2);
        if (tmp_iter_arg_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1195;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }
        tmp_assign_source_8 = MAKE_ITERATOR(tmp_iter_arg_2);
        Py_DECREF(tmp_iter_arg_2);
        if (tmp_assign_source_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1195;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = tmp_for_loop_2__for_iterator;
            tmp_for_loop_2__for_iterator = tmp_assign_source_8;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    loop_start_2:;
    {
        PyObject *tmp_next_source_2;
        PyObject *tmp_assign_source_9;
        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
        tmp_assign_source_9 = ITERATOR_NEXT(tmp_next_source_2);
        if (tmp_assign_source_9 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_2;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "oooooooo";
                exception_lineno = 1195;
                goto try_except_handler_3;
            }
        }

        {
            PyObject *old = tmp_for_loop_2__iter_value;
            tmp_for_loop_2__iter_value = tmp_assign_source_9;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_iter_arg_3;
        CHECK_OBJECT(tmp_for_loop_2__iter_value);
        tmp_iter_arg_3 = tmp_for_loop_2__iter_value;
        tmp_assign_source_10 = MAKE_UNPACK_ITERATOR(tmp_iter_arg_3);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1195;
            type_description_1 = "oooooooo";
            goto try_except_handler_4;
        }
        {
            PyObject *old = tmp_tuple_unpack_1__source_iter;
            tmp_tuple_unpack_1__source_iter = tmp_assign_source_10;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_unpack_1;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_unpack_1 = tmp_tuple_unpack_1__source_iter;
        tmp_assign_source_11 = UNPACK_NEXT(tmp_unpack_1, 0, 2);
        if (tmp_assign_source_11 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "oooooooo";
            exception_lineno = 1195;
            goto try_except_handler_5;
        }
        {
            PyObject *old = tmp_tuple_unpack_1__element_1;
            tmp_tuple_unpack_1__element_1 = tmp_assign_source_11;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_unpack_2;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_unpack_2 = tmp_tuple_unpack_1__source_iter;
        tmp_assign_source_12 = UNPACK_NEXT(tmp_unpack_2, 1, 2);
        if (tmp_assign_source_12 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "oooooooo";
            exception_lineno = 1195;
            goto try_except_handler_5;
        }
        {
            PyObject *old = tmp_tuple_unpack_1__element_2;
            tmp_tuple_unpack_1__element_2 = tmp_assign_source_12;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_iterator_name_1;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_iterator_name_1 = tmp_tuple_unpack_1__source_iter;
        // Check if iterator has left-over elements.
        CHECK_OBJECT(tmp_iterator_name_1); assert(HAS_ITERNEXT(tmp_iterator_name_1));

        tmp_iterator_attempt = (*Py_TYPE(tmp_iterator_name_1)->tp_iternext)(tmp_iterator_name_1);

        if (likely(tmp_iterator_attempt == NULL)) {
            PyObject *error = GET_ERROR_OCCURRED();

            if (error != NULL) {
                if (EXCEPTION_MATCH_BOOL_SINGLE(error, PyExc_StopIteration)) {
                    CLEAR_ERROR_OCCURRED();
                } else {
                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    type_description_1 = "oooooooo";
                    exception_lineno = 1195;
                    goto try_except_handler_5;
                }
            }
        } else {
            Py_DECREF(tmp_iterator_attempt);

            exception_type = PyExc_ValueError;
            Py_INCREF(PyExc_ValueError);
            exception_value = mod_consts[975];
            Py_INCREF(exception_value);
            exception_tb = NULL;

            type_description_1 = "oooooooo";
            exception_lineno = 1195;
            goto try_except_handler_5;
        }
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
    Py_DECREF(tmp_tuple_unpack_1__source_iter);
    tmp_tuple_unpack_1__source_iter = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto try_except_handler_4;
    // End of try:
    try_end_1:;
    goto try_end_2;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_tuple_unpack_1__element_1);
    tmp_tuple_unpack_1__element_1 = NULL;
    Py_XDECREF(tmp_tuple_unpack_1__element_2);
    tmp_tuple_unpack_1__element_2 = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto try_except_handler_3;
    // End of try:
    try_end_2:;
    CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
    Py_DECREF(tmp_tuple_unpack_1__source_iter);
    tmp_tuple_unpack_1__source_iter = NULL;
    {
        PyObject *tmp_assign_source_13;
        CHECK_OBJECT(tmp_tuple_unpack_1__element_1);
        tmp_assign_source_13 = tmp_tuple_unpack_1__element_1;
        {
            PyObject *old = var_i;
            var_i = tmp_assign_source_13;
            Py_INCREF(var_i);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_1__element_1);
    tmp_tuple_unpack_1__element_1 = NULL;

    {
        PyObject *tmp_assign_source_14;
        CHECK_OBJECT(tmp_tuple_unpack_1__element_2);
        tmp_assign_source_14 = tmp_tuple_unpack_1__element_2;
        {
            PyObject *old = var_old_arg;
            var_old_arg = tmp_assign_source_14;
            Py_INCREF(var_old_arg);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_1__element_2);
    tmp_tuple_unpack_1__element_2 = NULL;

    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_issubclass_cls_1;
        PyObject *tmp_issubclass_classes_1;
        PyObject *tmp_type_arg_2;
        CHECK_OBJECT(var_arg_type);
        tmp_issubclass_cls_1 = var_arg_type;
        CHECK_OBJECT(var_old_arg);
        tmp_type_arg_2 = var_old_arg;
        tmp_issubclass_classes_1 = BUILTIN_TYPE1(tmp_type_arg_2);
        assert(!(tmp_issubclass_classes_1 == NULL));
        tmp_res = PyObject_IsSubclass(tmp_issubclass_cls_1, tmp_issubclass_classes_1);
        Py_DECREF(tmp_issubclass_classes_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1196;
            type_description_1 = "oooooooo";
            goto try_except_handler_3;
        }
        tmp_condition_result_3 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
    }
    branch_yes_3:;
    {
        PyObject *tmp_assign_source_15;
        CHECK_OBJECT(var_i);
        tmp_assign_source_15 = var_i;
        {
            PyObject *old = var_index;
            assert(old != NULL);
            var_index = tmp_assign_source_15;
            Py_INCREF(var_index);
            Py_DECREF(old);
        }

    }
    goto loop_end_2;
    branch_no_3:;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 1195;
        type_description_1 = "oooooooo";
        goto try_except_handler_3;
    }
    goto loop_start_2;
    loop_end_2:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto try_except_handler_2;
    // End of try:
    try_end_3:;
    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;
    {
        PyObject *tmp_called_instance_2;
        PyObject *tmp_call_result_2;
        PyObject *tmp_args_element_value_3;
        PyObject *tmp_args_element_value_4;
        if (var_overloaded_args == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[997]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1199;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }

        tmp_called_instance_2 = var_overloaded_args;
        CHECK_OBJECT(var_index);
        tmp_args_element_value_3 = var_index;
        CHECK_OBJECT(var_arg);
        tmp_args_element_value_4 = var_arg;
        frame_2aee0e71fbfb7d70078ef3e5651c5274->m_frame.f_lineno = 1199;
        {
            PyObject *call_args[] = {tmp_args_element_value_3, tmp_args_element_value_4};
            tmp_call_result_2 = CALL_METHOD_WITH_ARGS2(
                tmp_called_instance_2,
                mod_consts[998],
                call_args
            );
        }

        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1199;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }
        Py_DECREF(tmp_call_result_2);
    }
    goto branch_end_2;
    branch_no_2:;
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_set_element_1;
        CHECK_OBJECT(var_arg_type);
        tmp_set_element_1 = var_arg_type;
        tmp_assign_source_16 = PySet_New(NULL);
        assert(tmp_assign_source_16);
        tmp_res = PySet_Add(tmp_assign_source_16, tmp_set_element_1);
        if (tmp_res != 0) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_assign_source_16);

            exception_lineno = 1201;
            type_description_1 = "oooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_overloaded_types;
            var_overloaded_types = tmp_assign_source_16;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_list_element_1;
        CHECK_OBJECT(var_arg);
        tmp_list_element_1 = var_arg;
        tmp_assign_source_17 = PyList_New(1);
        PyList_SET_ITEM0(tmp_assign_source_17, 0, tmp_list_element_1);
        {
            PyObject *old = var_overloaded_args;
            var_overloaded_args = tmp_assign_source_17;
            Py_XDECREF(old);
        }

    }
    branch_end_2:;
    branch_no_1:;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 1181;
        type_description_1 = "oooooooo";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_4;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    if (var_overloaded_args == NULL) {

        FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[997]);
        exception_tb = NULL;
        NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
        CHAIN_EXCEPTION(exception_value);

        exception_lineno = 1203;
        type_description_1 = "oooooooo";
        goto frame_exception_exit_1;
    }

    tmp_return_value = var_overloaded_args;
    Py_INCREF(tmp_return_value);
    goto frame_return_exit_1;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_2aee0e71fbfb7d70078ef3e5651c5274);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_2aee0e71fbfb7d70078ef3e5651c5274);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_2aee0e71fbfb7d70078ef3e5651c5274);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_2aee0e71fbfb7d70078ef3e5651c5274, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_2aee0e71fbfb7d70078ef3e5651c5274->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_2aee0e71fbfb7d70078ef3e5651c5274, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_2aee0e71fbfb7d70078ef3e5651c5274,
        type_description_1,
        par_relevant_args,
        var_overloaded_types,
        var_overloaded_args,
        var_arg,
        var_arg_type,
        var_index,
        var_i,
        var_old_arg
    );


    // Release cached frame if used for exception.
    if (frame_2aee0e71fbfb7d70078ef3e5651c5274 == cache_frame_2aee0e71fbfb7d70078ef3e5651c5274) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_2aee0e71fbfb7d70078ef3e5651c5274);
        cache_frame_2aee0e71fbfb7d70078ef3e5651c5274 = NULL;
    }

    assertFrameObject(frame_2aee0e71fbfb7d70078ef3e5651c5274);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    Py_XDECREF(var_overloaded_types);
    var_overloaded_types = NULL;
    Py_XDECREF(var_overloaded_args);
    var_overloaded_args = NULL;
    Py_XDECREF(var_arg);
    var_arg = NULL;
    Py_XDECREF(var_arg_type);
    var_arg_type = NULL;
    Py_XDECREF(var_index);
    var_index = NULL;
    Py_XDECREF(var_i);
    var_i = NULL;
    Py_XDECREF(var_old_arg);
    var_old_arg = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_5 = exception_type;
    exception_keeper_value_5 = exception_value;
    exception_keeper_tb_5 = exception_tb;
    exception_keeper_lineno_5 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_overloaded_types);
    var_overloaded_types = NULL;
    Py_XDECREF(var_overloaded_args);
    var_overloaded_args = NULL;
    Py_XDECREF(var_arg);
    var_arg = NULL;
    Py_XDECREF(var_arg_type);
    var_arg_type = NULL;
    Py_XDECREF(var_index);
    var_index = NULL;
    Py_XDECREF(var_i);
    var_i = NULL;
    Py_XDECREF(var_old_arg);
    var_old_arg = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_5;
    exception_value = exception_keeper_value_5;
    exception_tb = exception_keeper_tb_5;
    exception_lineno = exception_keeper_lineno_5;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_relevant_args);
    Py_DECREF(par_relevant_args);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_relevant_args);
    Py_DECREF(par_relevant_args);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_torch$overrides$$$function__5_handle_torch_function(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_public_api = python_pars[0];
    PyObject *par_relevant_args = python_pars[1];
    PyObject *par_args = python_pars[2];
    PyObject *par_kwargs = python_pars[3];
    PyObject *var_overloaded_args = NULL;
    PyObject *var_types = NULL;
    PyObject *var_overloaded_arg = NULL;
    PyObject *var_result = NULL;
    PyObject *var_func_name = NULL;
    PyObject *outline_0_var_arg = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_listcomp_1__$0 = NULL;
    PyObject *tmp_listcomp_1__contraction = NULL;
    PyObject *tmp_listcomp_1__iter_value_0 = NULL;
    struct Nuitka_FrameObject *frame_29fc55b34bb3ce57dc59d6be792503c9;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    struct Nuitka_FrameObject *frame_d01e95afa6773609415a5ad3d1bc7378_2;
    NUITKA_MAY_BE_UNUSED char const *type_description_2 = NULL;
    bool tmp_result;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    static struct Nuitka_FrameObject *cache_frame_d01e95afa6773609415a5ad3d1bc7378_2 = NULL;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    static struct Nuitka_FrameObject *cache_frame_29fc55b34bb3ce57dc59d6be792503c9 = NULL;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_29fc55b34bb3ce57dc59d6be792503c9)) {
        Py_XDECREF(cache_frame_29fc55b34bb3ce57dc59d6be792503c9);

#if _DEBUG_REFCOUNTS
        if (cache_frame_29fc55b34bb3ce57dc59d6be792503c9 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_29fc55b34bb3ce57dc59d6be792503c9 = MAKE_FUNCTION_FRAME(codeobj_29fc55b34bb3ce57dc59d6be792503c9, module_torch$overrides, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_29fc55b34bb3ce57dc59d6be792503c9->m_type_description == NULL);
    frame_29fc55b34bb3ce57dc59d6be792503c9 = cache_frame_29fc55b34bb3ce57dc59d6be792503c9;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_29fc55b34bb3ce57dc59d6be792503c9);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_29fc55b34bb3ce57dc59d6be792503c9) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_value_1;
        PyObject *tmp_args_element_value_1;
        tmp_called_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1000]);

        if (unlikely(tmp_called_value_1 == NULL)) {
            tmp_called_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1000]);
        }

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1244;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }
        CHECK_OBJECT(par_relevant_args);
        tmp_args_element_value_1 = par_relevant_args;
        frame_29fc55b34bb3ce57dc59d6be792503c9->m_frame.f_lineno = 1244;
        tmp_assign_source_1 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_1, tmp_args_element_value_1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1244;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_overloaded_args == NULL);
        var_overloaded_args = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_tuple_arg_1;
        PyObject *tmp_called_value_2;
        PyObject *tmp_args_element_value_2;
        PyObject *tmp_args_element_value_3;
        tmp_called_value_2 = (PyObject *)&PyMap_Type;
        tmp_args_element_value_2 = (PyObject *)&PyType_Type;
        CHECK_OBJECT(var_overloaded_args);
        tmp_args_element_value_3 = var_overloaded_args;
        frame_29fc55b34bb3ce57dc59d6be792503c9->m_frame.f_lineno = 1246;
        {
            PyObject *call_args[] = {tmp_args_element_value_2, tmp_args_element_value_3};
            tmp_tuple_arg_1 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_2, call_args);
        }

        if (tmp_tuple_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1246;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_2 = PySequence_Tuple(tmp_tuple_arg_1);
        Py_DECREF(tmp_tuple_arg_1);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1246;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_types == NULL);
        var_types = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_iter_arg_1;
        CHECK_OBJECT(var_overloaded_args);
        tmp_iter_arg_1 = var_overloaded_args;
        tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1249;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_3;
    }
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_4;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_1 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_4 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooooo";
                exception_lineno = 1249;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_4;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_5;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_assign_source_5 = tmp_for_loop_1__iter_value;
        {
            PyObject *old = var_overloaded_arg;
            var_overloaded_arg = tmp_assign_source_5;
            Py_INCREF(var_overloaded_arg);
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_called_value_3;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_args_element_value_4;
        PyObject *tmp_args_element_value_5;
        PyObject *tmp_args_element_value_6;
        PyObject *tmp_args_element_value_7;
        CHECK_OBJECT(var_overloaded_arg);
        tmp_expression_value_1 = var_overloaded_arg;
        tmp_called_value_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[145]);
        if (tmp_called_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1252;
            type_description_1 = "ooooooooo";
            goto try_except_handler_2;
        }
        if (par_public_api == NULL) {
            Py_DECREF(tmp_called_value_3);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[1001]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1252;
            type_description_1 = "ooooooooo";
            goto try_except_handler_2;
        }

        tmp_args_element_value_4 = par_public_api;
        if (var_types == NULL) {
            Py_DECREF(tmp_called_value_3);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[1002]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1252;
            type_description_1 = "ooooooooo";
            goto try_except_handler_2;
        }

        tmp_args_element_value_5 = var_types;
        if (par_args == NULL) {
            Py_DECREF(tmp_called_value_3);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[1003]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1252;
            type_description_1 = "ooooooooo";
            goto try_except_handler_2;
        }

        tmp_args_element_value_6 = par_args;
        if (par_kwargs == NULL) {
            Py_DECREF(tmp_called_value_3);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[1004]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1252;
            type_description_1 = "ooooooooo";
            goto try_except_handler_2;
        }

        tmp_args_element_value_7 = par_kwargs;
        frame_29fc55b34bb3ce57dc59d6be792503c9->m_frame.f_lineno = 1252;
        {
            PyObject *call_args[] = {tmp_args_element_value_4, tmp_args_element_value_5, tmp_args_element_value_6, tmp_args_element_value_7};
            tmp_assign_source_6 = CALL_FUNCTION_WITH_ARGS4(tmp_called_value_3, call_args);
        }

        Py_DECREF(tmp_called_value_3);
        if (tmp_assign_source_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1252;
            type_description_1 = "ooooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = var_result;
            var_result = tmp_assign_source_6;
            Py_XDECREF(old);
        }

    }
    {
        bool tmp_condition_result_1;
        PyObject *tmp_cmp_expr_left_1;
        PyObject *tmp_cmp_expr_right_1;
        CHECK_OBJECT(var_result);
        tmp_cmp_expr_left_1 = var_result;
        tmp_cmp_expr_right_1 = Py_NotImplemented;
        tmp_condition_result_1 = (tmp_cmp_expr_left_1 != tmp_cmp_expr_right_1) ? true : false;
        if (tmp_condition_result_1 != false) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    CHECK_OBJECT(var_result);
    tmp_return_value = var_result;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_2;
    branch_no_1:;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 1249;
        type_description_1 = "ooooooooo";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_1;
    // Return handler code:
    try_return_handler_2:;
    CHECK_OBJECT(tmp_for_loop_1__iter_value);
    Py_DECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    goto frame_return_exit_1;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_kw_call_arg_value_0_1;
        PyObject *tmp_kw_call_arg_value_1_1;
        PyObject *tmp_expression_value_2;
        PyObject *tmp_kw_call_arg_value_2_1;
        PyObject *tmp_expression_value_3;
        tmp_kw_call_arg_value_0_1 = mod_consts[1005];
        if (par_public_api == NULL) {

            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[1001]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1257;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_2 = par_public_api;
        tmp_kw_call_arg_value_1_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_2, mod_consts[1006]);
        if (tmp_kw_call_arg_value_1_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1257;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }
        if (par_public_api == NULL) {
            Py_DECREF(tmp_kw_call_arg_value_1_1);
            FORMAT_UNBOUND_LOCAL_ERROR(&exception_type, &exception_value, mod_consts[1001]);
            exception_tb = NULL;
            NORMALIZE_EXCEPTION(&exception_type, &exception_value, &exception_tb);
            CHAIN_EXCEPTION(exception_value);

            exception_lineno = 1257;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }

        tmp_expression_value_3 = par_public_api;
        tmp_kw_call_arg_value_2_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_3, mod_consts[976]);
        if (tmp_kw_call_arg_value_2_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_kw_call_arg_value_1_1);

            exception_lineno = 1257;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }
        frame_29fc55b34bb3ce57dc59d6be792503c9->m_frame.f_lineno = 1257;
        {
            PyObject *call_args[] = {tmp_kw_call_arg_value_0_1, tmp_kw_call_arg_value_1_1, tmp_kw_call_arg_value_2_1};
            tmp_assign_source_7 = CALL_FUNCTION_WITH_ARGS3(unicode_builtin_format, call_args);
        }

        Py_DECREF(tmp_kw_call_arg_value_1_1);
        Py_DECREF(tmp_kw_call_arg_value_2_1);
        if (tmp_assign_source_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1257;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_func_name == NULL);
        var_func_name = tmp_assign_source_7;
    }
    {
        PyObject *tmp_raise_type_1;
        PyObject *tmp_make_exception_arg_1;
        PyObject *tmp_kw_call_arg_value_0_2;
        PyObject *tmp_kw_call_arg_value_1_2;
        PyObject *tmp_kw_call_arg_value_2_2;
        tmp_kw_call_arg_value_0_2 = mod_consts[1007];
        CHECK_OBJECT(var_func_name);
        tmp_kw_call_arg_value_1_2 = var_func_name;
        // Tried code:
        {
            PyObject *tmp_assign_source_8;
            PyObject *tmp_iter_arg_2;
            CHECK_OBJECT(var_overloaded_args);
            tmp_iter_arg_2 = var_overloaded_args;
            tmp_assign_source_8 = MAKE_ITERATOR(tmp_iter_arg_2);
            if (tmp_assign_source_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1260;
                type_description_1 = "ooooooooo";
                goto try_except_handler_3;
            }
            assert(tmp_listcomp_1__$0 == NULL);
            tmp_listcomp_1__$0 = tmp_assign_source_8;
        }
        {
            PyObject *tmp_assign_source_9;
            tmp_assign_source_9 = PyList_New(0);
            assert(tmp_listcomp_1__contraction == NULL);
            tmp_listcomp_1__contraction = tmp_assign_source_9;
        }
        if (isFrameUnusable(cache_frame_d01e95afa6773609415a5ad3d1bc7378_2)) {
            Py_XDECREF(cache_frame_d01e95afa6773609415a5ad3d1bc7378_2);

#if _DEBUG_REFCOUNTS
            if (cache_frame_d01e95afa6773609415a5ad3d1bc7378_2 == NULL) {
                count_active_frame_cache_instances += 1;
            } else {
                count_released_frame_cache_instances += 1;
            }
            count_allocated_frame_cache_instances += 1;
#endif
            cache_frame_d01e95afa6773609415a5ad3d1bc7378_2 = MAKE_FUNCTION_FRAME(codeobj_d01e95afa6773609415a5ad3d1bc7378, module_torch$overrides, sizeof(void *));
#if _DEBUG_REFCOUNTS
        } else {
            count_hit_frame_cache_instances += 1;
#endif
        }
        assert(cache_frame_d01e95afa6773609415a5ad3d1bc7378_2->m_type_description == NULL);
        frame_d01e95afa6773609415a5ad3d1bc7378_2 = cache_frame_d01e95afa6773609415a5ad3d1bc7378_2;

        // Push the new frame as the currently active one.
        pushFrameStack(frame_d01e95afa6773609415a5ad3d1bc7378_2);

        // Mark the frame object as in use, ref count 1 will be up for reuse.
        assert(Py_REFCNT(frame_d01e95afa6773609415a5ad3d1bc7378_2) == 2); // Frame stack

        // Framed code:
        // Tried code:
        loop_start_2:;
        {
            PyObject *tmp_next_source_2;
            PyObject *tmp_assign_source_10;
            CHECK_OBJECT(tmp_listcomp_1__$0);
            tmp_next_source_2 = tmp_listcomp_1__$0;
            tmp_assign_source_10 = ITERATOR_NEXT(tmp_next_source_2);
            if (tmp_assign_source_10 == NULL) {
                if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                    goto loop_end_2;
                } else {

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                    type_description_2 = "o";
                    exception_lineno = 1260;
                    goto try_except_handler_4;
                }
            }

            {
                PyObject *old = tmp_listcomp_1__iter_value_0;
                tmp_listcomp_1__iter_value_0 = tmp_assign_source_10;
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_assign_source_11;
            CHECK_OBJECT(tmp_listcomp_1__iter_value_0);
            tmp_assign_source_11 = tmp_listcomp_1__iter_value_0;
            {
                PyObject *old = outline_0_var_arg;
                outline_0_var_arg = tmp_assign_source_11;
                Py_INCREF(outline_0_var_arg);
                Py_XDECREF(old);
            }

        }
        {
            PyObject *tmp_append_list_1;
            PyObject *tmp_append_value_1;
            PyObject *tmp_type_arg_1;
            CHECK_OBJECT(tmp_listcomp_1__contraction);
            tmp_append_list_1 = tmp_listcomp_1__contraction;
            CHECK_OBJECT(outline_0_var_arg);
            tmp_type_arg_1 = outline_0_var_arg;
            tmp_append_value_1 = BUILTIN_TYPE1(tmp_type_arg_1);
            assert(!(tmp_append_value_1 == NULL));
            assert(PyList_Check(tmp_append_list_1));
            tmp_result = LIST_APPEND1(tmp_append_list_1, tmp_append_value_1);
            if (tmp_result == false) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1260;
                type_description_2 = "o";
                goto try_except_handler_4;
            }
        }
        if (CONSIDER_THREADING() == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1260;
            type_description_2 = "o";
            goto try_except_handler_4;
        }
        goto loop_start_2;
        loop_end_2:;
        CHECK_OBJECT(tmp_listcomp_1__contraction);
        tmp_kw_call_arg_value_2_2 = tmp_listcomp_1__contraction;
        Py_INCREF(tmp_kw_call_arg_value_2_2);
        goto try_return_handler_4;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_4:;
        CHECK_OBJECT(tmp_listcomp_1__$0);
        Py_DECREF(tmp_listcomp_1__$0);
        tmp_listcomp_1__$0 = NULL;
        CHECK_OBJECT(tmp_listcomp_1__contraction);
        Py_DECREF(tmp_listcomp_1__contraction);
        tmp_listcomp_1__contraction = NULL;
        Py_XDECREF(tmp_listcomp_1__iter_value_0);
        tmp_listcomp_1__iter_value_0 = NULL;
        goto frame_return_exit_2;
        // Exception handler code:
        try_except_handler_4:;
        exception_keeper_type_2 = exception_type;
        exception_keeper_value_2 = exception_value;
        exception_keeper_tb_2 = exception_tb;
        exception_keeper_lineno_2 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        CHECK_OBJECT(tmp_listcomp_1__$0);
        Py_DECREF(tmp_listcomp_1__$0);
        tmp_listcomp_1__$0 = NULL;
        CHECK_OBJECT(tmp_listcomp_1__contraction);
        Py_DECREF(tmp_listcomp_1__contraction);
        tmp_listcomp_1__contraction = NULL;
        Py_XDECREF(tmp_listcomp_1__iter_value_0);
        tmp_listcomp_1__iter_value_0 = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_2;
        exception_value = exception_keeper_value_2;
        exception_tb = exception_keeper_tb_2;
        exception_lineno = exception_keeper_lineno_2;

        goto frame_exception_exit_2;
        // End of try:

#if 0
        RESTORE_FRAME_EXCEPTION(frame_d01e95afa6773609415a5ad3d1bc7378_2);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto frame_no_exception_1;

        frame_return_exit_2:;
#if 0
        RESTORE_FRAME_EXCEPTION(frame_d01e95afa6773609415a5ad3d1bc7378_2);
#endif

        // Put the previous frame back on top.
        popFrameStack();

        goto try_return_handler_3;

        frame_exception_exit_2:;

#if 0
        RESTORE_FRAME_EXCEPTION(frame_d01e95afa6773609415a5ad3d1bc7378_2);
#endif

        if (exception_tb == NULL) {
            exception_tb = MAKE_TRACEBACK(frame_d01e95afa6773609415a5ad3d1bc7378_2, exception_lineno);
        } else if (exception_tb->tb_frame != &frame_d01e95afa6773609415a5ad3d1bc7378_2->m_frame) {
            exception_tb = ADD_TRACEBACK(exception_tb, frame_d01e95afa6773609415a5ad3d1bc7378_2, exception_lineno);
        }

        // Attaches locals to frame if any.
        Nuitka_Frame_AttachLocals(
            frame_d01e95afa6773609415a5ad3d1bc7378_2,
            type_description_2,
            outline_0_var_arg
        );


        // Release cached frame if used for exception.
        if (frame_d01e95afa6773609415a5ad3d1bc7378_2 == cache_frame_d01e95afa6773609415a5ad3d1bc7378_2) {
#if _DEBUG_REFCOUNTS
            count_active_frame_cache_instances -= 1;
            count_released_frame_cache_instances += 1;
#endif

            Py_DECREF(cache_frame_d01e95afa6773609415a5ad3d1bc7378_2);
            cache_frame_d01e95afa6773609415a5ad3d1bc7378_2 = NULL;
        }

        assertFrameObject(frame_d01e95afa6773609415a5ad3d1bc7378_2);

        // Put the previous frame back on top.
        popFrameStack();

        // Return the error.
        goto nested_frame_exit_1;

        frame_no_exception_1:;
        goto skip_nested_handling_1;
        nested_frame_exit_1:;
        type_description_1 = "ooooooooo";
        goto try_except_handler_3;
        skip_nested_handling_1:;
        NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
        return NULL;
        // Return handler code:
        try_return_handler_3:;
        Py_XDECREF(outline_0_var_arg);
        outline_0_var_arg = NULL;
        goto outline_result_1;
        // Exception handler code:
        try_except_handler_3:;
        exception_keeper_type_3 = exception_type;
        exception_keeper_value_3 = exception_value;
        exception_keeper_tb_3 = exception_tb;
        exception_keeper_lineno_3 = exception_lineno;
        exception_type = NULL;
        exception_value = NULL;
        exception_tb = NULL;
        exception_lineno = 0;

        Py_XDECREF(outline_0_var_arg);
        outline_0_var_arg = NULL;
        // Re-raise.
        exception_type = exception_keeper_type_3;
        exception_value = exception_keeper_value_3;
        exception_tb = exception_keeper_tb_3;
        exception_lineno = exception_keeper_lineno_3;

        goto outline_exception_1;
        // End of try:
        NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
        return NULL;
        outline_exception_1:;
        exception_lineno = 1260;
        goto frame_exception_exit_1;
        outline_result_1:;
        frame_29fc55b34bb3ce57dc59d6be792503c9->m_frame.f_lineno = 1258;
        {
            PyObject *call_args[] = {tmp_kw_call_arg_value_0_2, tmp_kw_call_arg_value_1_2, tmp_kw_call_arg_value_2_2};
            tmp_make_exception_arg_1 = CALL_FUNCTION_WITH_ARGS3(unicode_builtin_format, call_args);
        }

        Py_DECREF(tmp_kw_call_arg_value_2_2);
        if (tmp_make_exception_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1258;
            type_description_1 = "ooooooooo";
            goto frame_exception_exit_1;
        }
        frame_29fc55b34bb3ce57dc59d6be792503c9->m_frame.f_lineno = 1258;
        tmp_raise_type_1 = CALL_FUNCTION_WITH_SINGLE_ARG(PyExc_TypeError, tmp_make_exception_arg_1);
        Py_DECREF(tmp_make_exception_arg_1);
        assert(!(tmp_raise_type_1 == NULL));
        exception_type = tmp_raise_type_1;
        exception_lineno = 1258;
        RAISE_EXCEPTION_WITH_TYPE(&exception_type, &exception_value, &exception_tb);
        type_description_1 = "ooooooooo";
        goto frame_exception_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_29fc55b34bb3ce57dc59d6be792503c9);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_2;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_29fc55b34bb3ce57dc59d6be792503c9);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto try_return_handler_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_29fc55b34bb3ce57dc59d6be792503c9);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_29fc55b34bb3ce57dc59d6be792503c9, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_29fc55b34bb3ce57dc59d6be792503c9->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_29fc55b34bb3ce57dc59d6be792503c9, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_29fc55b34bb3ce57dc59d6be792503c9,
        type_description_1,
        par_public_api,
        par_relevant_args,
        par_args,
        par_kwargs,
        var_overloaded_args,
        var_types,
        var_overloaded_arg,
        var_result,
        var_func_name
    );


    // Release cached frame if used for exception.
    if (frame_29fc55b34bb3ce57dc59d6be792503c9 == cache_frame_29fc55b34bb3ce57dc59d6be792503c9) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_29fc55b34bb3ce57dc59d6be792503c9);
        cache_frame_29fc55b34bb3ce57dc59d6be792503c9 = NULL;
    }

    assertFrameObject(frame_29fc55b34bb3ce57dc59d6be792503c9);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_2:;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_overloaded_args);
    Py_DECREF(var_overloaded_args);
    var_overloaded_args = NULL;
    Py_XDECREF(var_types);
    var_types = NULL;
    CHECK_OBJECT(var_overloaded_arg);
    Py_DECREF(var_overloaded_arg);
    var_overloaded_arg = NULL;
    CHECK_OBJECT(var_result);
    Py_DECREF(var_result);
    var_result = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_overloaded_args);
    var_overloaded_args = NULL;
    Py_XDECREF(var_types);
    var_types = NULL;
    Py_XDECREF(var_overloaded_arg);
    var_overloaded_arg = NULL;
    Py_XDECREF(var_result);
    var_result = NULL;
    Py_XDECREF(var_func_name);
    var_func_name = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_public_api);
    Py_DECREF(par_public_api);
    CHECK_OBJECT(par_relevant_args);
    Py_DECREF(par_relevant_args);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);
    CHECK_OBJECT(par_kwargs);
    Py_DECREF(par_kwargs);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_public_api);
    Py_DECREF(par_public_api);
    CHECK_OBJECT(par_relevant_args);
    Py_DECREF(par_relevant_args);
    CHECK_OBJECT(par_args);
    Py_DECREF(par_args);
    CHECK_OBJECT(par_kwargs);
    Py_DECREF(par_kwargs);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_torch$overrides$$$function__6_get_overridable_functions(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *var_overridable_funcs = NULL;
    PyObject *var_tested_namespaces = NULL;
    PyObject *var_namespace = NULL;
    PyObject *var_ns_funcs = NULL;
    PyObject *var_func_name = NULL;
    PyObject *var_func = NULL;
    PyObject *var_msg = NULL;
    PyObject *tmp_for_loop_1__for_iterator = NULL;
    PyObject *tmp_for_loop_1__iter_value = NULL;
    PyObject *tmp_for_loop_2__for_iterator = NULL;
    PyObject *tmp_for_loop_2__iter_value = NULL;
    PyObject *tmp_tuple_unpack_1__element_1 = NULL;
    PyObject *tmp_tuple_unpack_1__element_2 = NULL;
    PyObject *tmp_tuple_unpack_1__source_iter = NULL;
    struct Nuitka_FrameObject *frame_08a8341025608895f5cca084a2a73a59;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *tmp_iterator_attempt;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    int tmp_res;
    NUITKA_MAY_BE_UNUSED nuitka_void tmp_unused;
    PyObject *exception_keeper_type_3;
    PyObject *exception_keeper_value_3;
    PyTracebackObject *exception_keeper_tb_3;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_3;
    PyObject *exception_keeper_type_4;
    PyObject *exception_keeper_value_4;
    PyTracebackObject *exception_keeper_tb_4;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_4;
    static struct Nuitka_FrameObject *cache_frame_08a8341025608895f5cca084a2a73a59 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_5;
    PyObject *exception_keeper_value_5;
    PyTracebackObject *exception_keeper_tb_5;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_5;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_08a8341025608895f5cca084a2a73a59)) {
        Py_XDECREF(cache_frame_08a8341025608895f5cca084a2a73a59);

#if _DEBUG_REFCOUNTS
        if (cache_frame_08a8341025608895f5cca084a2a73a59 == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_08a8341025608895f5cca084a2a73a59 = MAKE_FUNCTION_FRAME(codeobj_08a8341025608895f5cca084a2a73a59, module_torch$overrides, sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_08a8341025608895f5cca084a2a73a59->m_type_description == NULL);
    frame_08a8341025608895f5cca084a2a73a59 = cache_frame_08a8341025608895f5cca084a2a73a59;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_08a8341025608895f5cca084a2a73a59);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_08a8341025608895f5cca084a2a73a59) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_instance_1;
        tmp_called_instance_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1009]);

        if (unlikely(tmp_called_instance_1 == NULL)) {
            tmp_called_instance_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1009]);
        }

        if (tmp_called_instance_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1319;
            type_description_1 = "ooooooo";
            goto frame_exception_exit_1;
        }
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1319;
        tmp_assign_source_1 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_1,
            mod_consts[1010],
            PyTuple_GET_ITEM(mod_consts[1011], 0)
        );

        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1319;
            type_description_1 = "ooooooo";
            goto frame_exception_exit_1;
        }
        assert(var_overridable_funcs == NULL);
        var_overridable_funcs = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_list_element_1;
        PyObject *tmp_tuple_element_1;
        tmp_tuple_element_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_tuple_element_1 == NULL)) {
            tmp_tuple_element_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1321;
            type_description_1 = "ooooooo";
            goto frame_exception_exit_1;
        }
        tmp_list_element_1 = PyTuple_New(2);
        {
            PyObject *tmp_left_value_1;
            PyObject *tmp_expression_value_1;
            PyObject *tmp_right_value_1;
            PyObject *tmp_dir_arg_1;
            PyObject *tmp_expression_value_2;
            PyObject *tmp_expression_value_3;
            PyTuple_SET_ITEM0(tmp_list_element_1, 0, tmp_tuple_element_1);
            tmp_expression_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_1 == NULL)) {
                tmp_expression_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1321;
                type_description_1 = "ooooooo";
                goto tuple_build_exception_1;
            }
            tmp_left_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[1012]);
            if (tmp_left_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1321;
                type_description_1 = "ooooooo";
                goto tuple_build_exception_1;
            }
            tmp_expression_value_3 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_3 == NULL)) {
                tmp_expression_value_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_left_value_1);

                exception_lineno = 1321;
                type_description_1 = "ooooooo";
                goto tuple_build_exception_1;
            }
            tmp_expression_value_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_3, mod_consts[1013]);
            if (tmp_expression_value_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_left_value_1);

                exception_lineno = 1321;
                type_description_1 = "ooooooo";
                goto tuple_build_exception_1;
            }
            tmp_dir_arg_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_2, mod_consts[1014]);
            Py_DECREF(tmp_expression_value_2);
            if (tmp_dir_arg_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_left_value_1);

                exception_lineno = 1321;
                type_description_1 = "ooooooo";
                goto tuple_build_exception_1;
            }
            tmp_right_value_1 = PyObject_Dir(tmp_dir_arg_1);
            Py_DECREF(tmp_dir_arg_1);
            if (tmp_right_value_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                Py_DECREF(tmp_left_value_1);

                exception_lineno = 1321;
                type_description_1 = "ooooooo";
                goto tuple_build_exception_1;
            }
            tmp_tuple_element_1 = BINARY_OPERATION_ADD_OBJECT_OBJECT_OBJECT(tmp_left_value_1, tmp_right_value_1);
            Py_DECREF(tmp_left_value_1);
            Py_DECREF(tmp_right_value_1);
            if (tmp_tuple_element_1 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1321;
                type_description_1 = "ooooooo";
                goto tuple_build_exception_1;
            }
            PyTuple_SET_ITEM(tmp_list_element_1, 1, tmp_tuple_element_1);
        }
        goto tuple_build_noexception_1;
        // Exception handling pass through code for tuple_build:
        tuple_build_exception_1:;
        Py_DECREF(tmp_list_element_1);
        goto frame_exception_exit_1;
        // Finished with no exception for tuple_build:
        tuple_build_noexception_1:;
        tmp_assign_source_2 = PyList_New(7);
        {
            PyObject *tmp_tuple_element_2;
            PyObject *tmp_expression_value_4;
            PyObject *tmp_tuple_element_3;
            PyObject *tmp_expression_value_7;
            PyObject *tmp_expression_value_8;
            PyObject *tmp_tuple_element_4;
            PyObject *tmp_expression_value_11;
            PyObject *tmp_tuple_element_5;
            PyObject *tmp_expression_value_13;
            PyObject *tmp_tuple_element_6;
            PyObject *tmp_expression_value_15;
            PyObject *tmp_tuple_element_7;
            PyObject *tmp_expression_value_17;
            PyList_SET_ITEM(tmp_assign_source_2, 0, tmp_list_element_1);
            tmp_expression_value_4 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_4 == NULL)) {
                tmp_expression_value_4 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1322;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_tuple_element_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_4, mod_consts[109]);
            if (tmp_tuple_element_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1322;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_list_element_1 = PyTuple_New(2);
            {
                PyObject *tmp_expression_value_5;
                PyObject *tmp_expression_value_6;
                PyTuple_SET_ITEM(tmp_list_element_1, 0, tmp_tuple_element_2);
                tmp_expression_value_6 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

                if (unlikely(tmp_expression_value_6 == NULL)) {
                    tmp_expression_value_6 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
                }

                if (tmp_expression_value_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1322;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_2;
                }
                tmp_expression_value_5 = LOOKUP_ATTRIBUTE(tmp_expression_value_6, mod_consts[109]);
                if (tmp_expression_value_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1322;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_2;
                }
                tmp_tuple_element_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_5, mod_consts[1012]);
                Py_DECREF(tmp_expression_value_5);
                if (tmp_tuple_element_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1322;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_2;
                }
                PyTuple_SET_ITEM(tmp_list_element_1, 1, tmp_tuple_element_2);
            }
            goto tuple_build_noexception_2;
            // Exception handling pass through code for tuple_build:
            tuple_build_exception_2:;
            Py_DECREF(tmp_list_element_1);
            goto list_build_exception_1;
            // Finished with no exception for tuple_build:
            tuple_build_noexception_2:;
            PyList_SET_ITEM(tmp_assign_source_2, 1, tmp_list_element_1);
            tmp_expression_value_8 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_8 == NULL)) {
                tmp_expression_value_8 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_8 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1323;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_expression_value_7 = LOOKUP_ATTRIBUTE(tmp_expression_value_8, mod_consts[108]);
            if (tmp_expression_value_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1323;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_tuple_element_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_7, mod_consts[109]);
            Py_DECREF(tmp_expression_value_7);
            if (tmp_tuple_element_3 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1323;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_list_element_1 = PyTuple_New(2);
            {
                PyObject *tmp_dir_arg_2;
                PyObject *tmp_expression_value_9;
                PyObject *tmp_expression_value_10;
                PyTuple_SET_ITEM(tmp_list_element_1, 0, tmp_tuple_element_3);
                tmp_expression_value_10 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

                if (unlikely(tmp_expression_value_10 == NULL)) {
                    tmp_expression_value_10 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
                }

                if (tmp_expression_value_10 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1323;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_3;
                }
                tmp_expression_value_9 = LOOKUP_ATTRIBUTE(tmp_expression_value_10, mod_consts[108]);
                if (tmp_expression_value_9 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1323;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_3;
                }
                tmp_dir_arg_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_9, mod_consts[109]);
                Py_DECREF(tmp_expression_value_9);
                if (tmp_dir_arg_2 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1323;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_3;
                }
                tmp_tuple_element_3 = PyObject_Dir(tmp_dir_arg_2);
                Py_DECREF(tmp_dir_arg_2);
                if (tmp_tuple_element_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1323;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_3;
                }
                PyTuple_SET_ITEM(tmp_list_element_1, 1, tmp_tuple_element_3);
            }
            goto tuple_build_noexception_3;
            // Exception handling pass through code for tuple_build:
            tuple_build_exception_3:;
            Py_DECREF(tmp_list_element_1);
            goto list_build_exception_1;
            // Finished with no exception for tuple_build:
            tuple_build_noexception_3:;
            PyList_SET_ITEM(tmp_assign_source_2, 2, tmp_list_element_1);
            tmp_expression_value_11 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_11 == NULL)) {
                tmp_expression_value_11 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_11 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1324;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_tuple_element_4 = LOOKUP_ATTRIBUTE(tmp_expression_value_11, mod_consts[1]);
            if (tmp_tuple_element_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1324;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_list_element_1 = PyTuple_New(2);
            {
                PyObject *tmp_dir_arg_3;
                PyObject *tmp_expression_value_12;
                PyTuple_SET_ITEM(tmp_list_element_1, 0, tmp_tuple_element_4);
                tmp_expression_value_12 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

                if (unlikely(tmp_expression_value_12 == NULL)) {
                    tmp_expression_value_12 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
                }

                if (tmp_expression_value_12 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1324;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_4;
                }
                tmp_dir_arg_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_12, mod_consts[1]);
                if (tmp_dir_arg_3 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1324;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_4;
                }
                tmp_tuple_element_4 = PyObject_Dir(tmp_dir_arg_3);
                Py_DECREF(tmp_dir_arg_3);
                if (tmp_tuple_element_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1324;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_4;
                }
                PyTuple_SET_ITEM(tmp_list_element_1, 1, tmp_tuple_element_4);
            }
            goto tuple_build_noexception_4;
            // Exception handling pass through code for tuple_build:
            tuple_build_exception_4:;
            Py_DECREF(tmp_list_element_1);
            goto list_build_exception_1;
            // Finished with no exception for tuple_build:
            tuple_build_noexception_4:;
            PyList_SET_ITEM(tmp_assign_source_2, 3, tmp_list_element_1);
            tmp_expression_value_13 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_13 == NULL)) {
                tmp_expression_value_13 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_13 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1325;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_tuple_element_5 = LOOKUP_ATTRIBUTE(tmp_expression_value_13, mod_consts[253]);
            if (tmp_tuple_element_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1325;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_list_element_1 = PyTuple_New(2);
            {
                PyObject *tmp_dir_arg_4;
                PyObject *tmp_expression_value_14;
                PyTuple_SET_ITEM(tmp_list_element_1, 0, tmp_tuple_element_5);
                tmp_expression_value_14 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

                if (unlikely(tmp_expression_value_14 == NULL)) {
                    tmp_expression_value_14 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
                }

                if (tmp_expression_value_14 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1325;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_5;
                }
                tmp_dir_arg_4 = LOOKUP_ATTRIBUTE(tmp_expression_value_14, mod_consts[253]);
                if (tmp_dir_arg_4 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1325;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_5;
                }
                tmp_tuple_element_5 = PyObject_Dir(tmp_dir_arg_4);
                Py_DECREF(tmp_dir_arg_4);
                if (tmp_tuple_element_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1325;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_5;
                }
                PyTuple_SET_ITEM(tmp_list_element_1, 1, tmp_tuple_element_5);
            }
            goto tuple_build_noexception_5;
            // Exception handling pass through code for tuple_build:
            tuple_build_exception_5:;
            Py_DECREF(tmp_list_element_1);
            goto list_build_exception_1;
            // Finished with no exception for tuple_build:
            tuple_build_noexception_5:;
            PyList_SET_ITEM(tmp_assign_source_2, 4, tmp_list_element_1);
            tmp_expression_value_15 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_15 == NULL)) {
                tmp_expression_value_15 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_15 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1326;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_tuple_element_6 = LOOKUP_ATTRIBUTE(tmp_expression_value_15, mod_consts[74]);
            if (tmp_tuple_element_6 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1326;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_list_element_1 = PyTuple_New(2);
            {
                PyObject *tmp_dir_arg_5;
                PyObject *tmp_expression_value_16;
                PyTuple_SET_ITEM(tmp_list_element_1, 0, tmp_tuple_element_6);
                tmp_expression_value_16 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

                if (unlikely(tmp_expression_value_16 == NULL)) {
                    tmp_expression_value_16 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
                }

                if (tmp_expression_value_16 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1326;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_6;
                }
                tmp_dir_arg_5 = LOOKUP_ATTRIBUTE(tmp_expression_value_16, mod_consts[74]);
                if (tmp_dir_arg_5 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1326;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_6;
                }
                tmp_tuple_element_6 = PyObject_Dir(tmp_dir_arg_5);
                Py_DECREF(tmp_dir_arg_5);
                if (tmp_tuple_element_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1326;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_6;
                }
                PyTuple_SET_ITEM(tmp_list_element_1, 1, tmp_tuple_element_6);
            }
            goto tuple_build_noexception_6;
            // Exception handling pass through code for tuple_build:
            tuple_build_exception_6:;
            Py_DECREF(tmp_list_element_1);
            goto list_build_exception_1;
            // Finished with no exception for tuple_build:
            tuple_build_noexception_6:;
            PyList_SET_ITEM(tmp_assign_source_2, 5, tmp_list_element_1);
            tmp_expression_value_17 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

            if (unlikely(tmp_expression_value_17 == NULL)) {
                tmp_expression_value_17 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
            }

            if (tmp_expression_value_17 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1327;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_tuple_element_7 = LOOKUP_ATTRIBUTE(tmp_expression_value_17, mod_consts[768]);
            if (tmp_tuple_element_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1327;
                type_description_1 = "ooooooo";
                goto list_build_exception_1;
            }
            tmp_list_element_1 = PyTuple_New(2);
            {
                PyObject *tmp_dir_arg_6;
                PyObject *tmp_expression_value_18;
                PyTuple_SET_ITEM(tmp_list_element_1, 0, tmp_tuple_element_7);
                tmp_expression_value_18 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

                if (unlikely(tmp_expression_value_18 == NULL)) {
                    tmp_expression_value_18 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
                }

                if (tmp_expression_value_18 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1327;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_7;
                }
                tmp_dir_arg_6 = LOOKUP_ATTRIBUTE(tmp_expression_value_18, mod_consts[768]);
                if (tmp_dir_arg_6 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1327;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_7;
                }
                tmp_tuple_element_7 = PyObject_Dir(tmp_dir_arg_6);
                Py_DECREF(tmp_dir_arg_6);
                if (tmp_tuple_element_7 == NULL) {
                    assert(ERROR_OCCURRED());

                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                    exception_lineno = 1327;
                    type_description_1 = "ooooooo";
                    goto tuple_build_exception_7;
                }
                PyTuple_SET_ITEM(tmp_list_element_1, 1, tmp_tuple_element_7);
            }
            goto tuple_build_noexception_7;
            // Exception handling pass through code for tuple_build:
            tuple_build_exception_7:;
            Py_DECREF(tmp_list_element_1);
            goto list_build_exception_1;
            // Finished with no exception for tuple_build:
            tuple_build_noexception_7:;
            PyList_SET_ITEM(tmp_assign_source_2, 6, tmp_list_element_1);
        }
        goto list_build_noexception_1;
        // Exception handling pass through code for list_build:
        list_build_exception_1:;
        Py_DECREF(tmp_assign_source_2);
        goto frame_exception_exit_1;
        // Finished with no exception for list_build:
        list_build_noexception_1:;
        assert(var_tested_namespaces == NULL);
        var_tested_namespaces = tmp_assign_source_2;
    }
    {
        PyObject *tmp_assign_source_3;
        PyObject *tmp_iter_arg_1;
        CHECK_OBJECT(var_tested_namespaces);
        tmp_iter_arg_1 = var_tested_namespaces;
        tmp_assign_source_3 = MAKE_ITERATOR(tmp_iter_arg_1);
        if (tmp_assign_source_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1329;
            type_description_1 = "ooooooo";
            goto frame_exception_exit_1;
        }
        assert(tmp_for_loop_1__for_iterator == NULL);
        tmp_for_loop_1__for_iterator = tmp_assign_source_3;
    }
    // Tried code:
    loop_start_1:;
    {
        PyObject *tmp_next_source_1;
        PyObject *tmp_assign_source_4;
        CHECK_OBJECT(tmp_for_loop_1__for_iterator);
        tmp_next_source_1 = tmp_for_loop_1__for_iterator;
        tmp_assign_source_4 = ITERATOR_NEXT(tmp_next_source_1);
        if (tmp_assign_source_4 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_1;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooo";
                exception_lineno = 1329;
                goto try_except_handler_2;
            }
        }

        {
            PyObject *old = tmp_for_loop_1__iter_value;
            tmp_for_loop_1__iter_value = tmp_assign_source_4;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_iter_arg_2;
        CHECK_OBJECT(tmp_for_loop_1__iter_value);
        tmp_iter_arg_2 = tmp_for_loop_1__iter_value;
        tmp_assign_source_5 = MAKE_UNPACK_ITERATOR(tmp_iter_arg_2);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1329;
            type_description_1 = "ooooooo";
            goto try_except_handler_3;
        }
        {
            PyObject *old = tmp_tuple_unpack_1__source_iter;
            tmp_tuple_unpack_1__source_iter = tmp_assign_source_5;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    {
        PyObject *tmp_assign_source_6;
        PyObject *tmp_unpack_1;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_unpack_1 = tmp_tuple_unpack_1__source_iter;
        tmp_assign_source_6 = UNPACK_NEXT(tmp_unpack_1, 0, 2);
        if (tmp_assign_source_6 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ooooooo";
            exception_lineno = 1329;
            goto try_except_handler_4;
        }
        {
            PyObject *old = tmp_tuple_unpack_1__element_1;
            tmp_tuple_unpack_1__element_1 = tmp_assign_source_6;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_7;
        PyObject *tmp_unpack_2;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_unpack_2 = tmp_tuple_unpack_1__source_iter;
        tmp_assign_source_7 = UNPACK_NEXT(tmp_unpack_2, 1, 2);
        if (tmp_assign_source_7 == NULL) {
            if (!ERROR_OCCURRED()) {
                exception_type = PyExc_StopIteration;
                Py_INCREF(exception_type);
                exception_value = NULL;
                exception_tb = NULL;
            } else {
                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            }


            type_description_1 = "ooooooo";
            exception_lineno = 1329;
            goto try_except_handler_4;
        }
        {
            PyObject *old = tmp_tuple_unpack_1__element_2;
            tmp_tuple_unpack_1__element_2 = tmp_assign_source_7;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_iterator_name_1;
        CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
        tmp_iterator_name_1 = tmp_tuple_unpack_1__source_iter;
        // Check if iterator has left-over elements.
        CHECK_OBJECT(tmp_iterator_name_1); assert(HAS_ITERNEXT(tmp_iterator_name_1));

        tmp_iterator_attempt = (*Py_TYPE(tmp_iterator_name_1)->tp_iternext)(tmp_iterator_name_1);

        if (likely(tmp_iterator_attempt == NULL)) {
            PyObject *error = GET_ERROR_OCCURRED();

            if (error != NULL) {
                if (EXCEPTION_MATCH_BOOL_SINGLE(error, PyExc_StopIteration)) {
                    CLEAR_ERROR_OCCURRED();
                } else {
                    FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);

                    type_description_1 = "ooooooo";
                    exception_lineno = 1329;
                    goto try_except_handler_4;
                }
            }
        } else {
            Py_DECREF(tmp_iterator_attempt);

            exception_type = PyExc_ValueError;
            Py_INCREF(PyExc_ValueError);
            exception_value = mod_consts[975];
            Py_INCREF(exception_value);
            exception_tb = NULL;

            type_description_1 = "ooooooo";
            exception_lineno = 1329;
            goto try_except_handler_4;
        }
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_4:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
    Py_DECREF(tmp_tuple_unpack_1__source_iter);
    tmp_tuple_unpack_1__source_iter = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto try_except_handler_3;
    // End of try:
    try_end_1:;
    goto try_end_2;
    // Exception handler code:
    try_except_handler_3:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_tuple_unpack_1__element_1);
    tmp_tuple_unpack_1__element_1 = NULL;
    Py_XDECREF(tmp_tuple_unpack_1__element_2);
    tmp_tuple_unpack_1__element_2 = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto try_except_handler_2;
    // End of try:
    try_end_2:;
    CHECK_OBJECT(tmp_tuple_unpack_1__source_iter);
    Py_DECREF(tmp_tuple_unpack_1__source_iter);
    tmp_tuple_unpack_1__source_iter = NULL;
    {
        PyObject *tmp_assign_source_8;
        CHECK_OBJECT(tmp_tuple_unpack_1__element_1);
        tmp_assign_source_8 = tmp_tuple_unpack_1__element_1;
        {
            PyObject *old = var_namespace;
            var_namespace = tmp_assign_source_8;
            Py_INCREF(var_namespace);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_1__element_1);
    tmp_tuple_unpack_1__element_1 = NULL;

    {
        PyObject *tmp_assign_source_9;
        CHECK_OBJECT(tmp_tuple_unpack_1__element_2);
        tmp_assign_source_9 = tmp_tuple_unpack_1__element_2;
        {
            PyObject *old = var_ns_funcs;
            var_ns_funcs = tmp_assign_source_9;
            Py_INCREF(var_ns_funcs);
            Py_XDECREF(old);
        }

    }
    Py_XDECREF(tmp_tuple_unpack_1__element_2);
    tmp_tuple_unpack_1__element_2 = NULL;

    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_iter_arg_3;
        CHECK_OBJECT(var_ns_funcs);
        tmp_iter_arg_3 = var_ns_funcs;
        tmp_assign_source_10 = MAKE_ITERATOR(tmp_iter_arg_3);
        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1330;
            type_description_1 = "ooooooo";
            goto try_except_handler_2;
        }
        {
            PyObject *old = tmp_for_loop_2__for_iterator;
            tmp_for_loop_2__for_iterator = tmp_assign_source_10;
            Py_XDECREF(old);
        }

    }
    // Tried code:
    loop_start_2:;
    {
        PyObject *tmp_next_source_2;
        PyObject *tmp_assign_source_11;
        CHECK_OBJECT(tmp_for_loop_2__for_iterator);
        tmp_next_source_2 = tmp_for_loop_2__for_iterator;
        tmp_assign_source_11 = ITERATOR_NEXT(tmp_next_source_2);
        if (tmp_assign_source_11 == NULL) {
            if (CHECK_AND_CLEAR_STOP_ITERATION_OCCURRED()) {

                goto loop_end_2;
            } else {

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
                type_description_1 = "ooooooo";
                exception_lineno = 1330;
                goto try_except_handler_5;
            }
        }

        {
            PyObject *old = tmp_for_loop_2__iter_value;
            tmp_for_loop_2__iter_value = tmp_assign_source_11;
            Py_XDECREF(old);
        }

    }
    {
        PyObject *tmp_assign_source_12;
        CHECK_OBJECT(tmp_for_loop_2__iter_value);
        tmp_assign_source_12 = tmp_for_loop_2__iter_value;
        {
            PyObject *old = var_func_name;
            var_func_name = tmp_assign_source_12;
            Py_INCREF(var_func_name);
            Py_XDECREF(old);
        }

    }
    {
        bool tmp_condition_result_1;
        PyObject *tmp_cmp_expr_left_1;
        PyObject *tmp_cmp_expr_right_1;
        PyObject *tmp_expression_value_19;
        CHECK_OBJECT(var_namespace);
        tmp_cmp_expr_left_1 = var_namespace;
        tmp_expression_value_19 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_19 == NULL)) {
            tmp_expression_value_19 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1332;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_cmp_expr_right_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_19, mod_consts[1]);
        if (tmp_cmp_expr_right_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1332;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_1 = (tmp_cmp_expr_left_1 != tmp_cmp_expr_right_1) ? true : false;
        Py_DECREF(tmp_cmp_expr_right_1);
        if (tmp_condition_result_1 != false) {
            goto branch_yes_1;
        } else {
            goto branch_no_1;
        }
    }
    branch_yes_1:;
    {
        nuitka_bool tmp_condition_result_2;
        PyObject *tmp_called_value_1;
        PyObject *tmp_expression_value_20;
        PyObject *tmp_call_result_1;
        int tmp_truth_name_1;
        CHECK_OBJECT(var_func_name);
        tmp_expression_value_20 = var_func_name;
        tmp_called_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_20, mod_consts[981]);
        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1333;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1333;
        tmp_call_result_1 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_1, mod_consts[1015]);

        Py_DECREF(tmp_called_value_1);
        if (tmp_call_result_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1333;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_truth_name_1 = CHECK_IF_TRUE(tmp_call_result_1);
        if (tmp_truth_name_1 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_1);

            exception_lineno = 1333;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_2 = tmp_truth_name_1 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_1);
        if (tmp_condition_result_2 == NUITKA_BOOL_TRUE) {
            goto branch_yes_2;
        } else {
            goto branch_no_2;
        }
    }
    branch_yes_2:;
    goto loop_start_2;
    goto branch_end_2;
    branch_no_2:;
    {
        nuitka_bool tmp_condition_result_3;
        PyObject *tmp_called_value_2;
        PyObject *tmp_expression_value_21;
        PyObject *tmp_call_result_2;
        int tmp_truth_name_2;
        CHECK_OBJECT(var_func_name);
        tmp_expression_value_21 = var_func_name;
        tmp_called_value_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_21, mod_consts[1016]);
        if (tmp_called_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1335;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1335;
        tmp_call_result_2 = CALL_FUNCTION_WITH_POSARGS1(tmp_called_value_2, mod_consts[1015]);

        Py_DECREF(tmp_called_value_2);
        if (tmp_call_result_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1335;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_truth_name_2 = CHECK_IF_TRUE(tmp_call_result_2);
        if (tmp_truth_name_2 == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_call_result_2);

            exception_lineno = 1335;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_3 = tmp_truth_name_2 == 0 ? NUITKA_BOOL_FALSE : NUITKA_BOOL_TRUE;
        Py_DECREF(tmp_call_result_2);
        if (tmp_condition_result_3 == NUITKA_BOOL_TRUE) {
            goto branch_yes_3;
        } else {
            goto branch_no_3;
        }
    }
    branch_yes_3:;
    goto loop_start_2;
    goto branch_end_3;
    branch_no_3:;
    {
        bool tmp_condition_result_4;
        PyObject *tmp_operand_value_1;
        PyObject *tmp_called_value_3;
        PyObject *tmp_expression_value_22;
        PyObject *tmp_expression_value_23;
        PyObject *tmp_subscript_value_1;
        CHECK_OBJECT(var_func_name);
        tmp_expression_value_23 = var_func_name;
        tmp_subscript_value_1 = mod_consts[1017];
        tmp_expression_value_22 = LOOKUP_SUBSCRIPT_CONST(tmp_expression_value_23, tmp_subscript_value_1, 0);
        if (tmp_expression_value_22 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1337;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_called_value_3 = LOOKUP_ATTRIBUTE(tmp_expression_value_22, mod_consts[1018]);
        Py_DECREF(tmp_expression_value_22);
        if (tmp_called_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1337;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1337;
        tmp_operand_value_1 = CALL_FUNCTION_NO_ARGS(tmp_called_value_3);
        Py_DECREF(tmp_called_value_3);
        if (tmp_operand_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1337;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_1);
        Py_DECREF(tmp_operand_value_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1337;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_4 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_4 != false) {
            goto branch_yes_4;
        } else {
            goto branch_no_4;
        }
    }
    branch_yes_4:;
    goto loop_start_2;
    goto branch_end_4;
    branch_no_4:;
    {
        nuitka_bool tmp_condition_result_5;
        PyObject *tmp_cmp_expr_left_2;
        PyObject *tmp_cmp_expr_right_2;
        CHECK_OBJECT(var_func_name);
        tmp_cmp_expr_left_2 = var_func_name;
        tmp_cmp_expr_right_2 = mod_consts[1019];
        tmp_condition_result_5 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_2, tmp_cmp_expr_right_2);
        if (tmp_condition_result_5 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1339;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        if (tmp_condition_result_5 == NUITKA_BOOL_TRUE) {
            goto branch_yes_5;
        } else {
            goto branch_no_5;
        }
        assert(tmp_condition_result_5 != NUITKA_BOOL_UNASSIGNED);
    }
    branch_yes_5:;
    goto loop_start_2;
    branch_no_5:;
    branch_end_4:;
    branch_end_3:;
    branch_end_2:;
    goto branch_end_1;
    branch_no_1:;
    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_getattr_target_1;
        PyObject *tmp_getattr_attr_1;
        CHECK_OBJECT(var_namespace);
        tmp_getattr_target_1 = var_namespace;
        CHECK_OBJECT(var_func_name);
        tmp_getattr_attr_1 = var_func_name;
        tmp_assign_source_13 = BUILTIN_GETATTR(tmp_getattr_target_1, tmp_getattr_attr_1, NULL);
        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1342;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        {
            PyObject *old = var_func;
            var_func = tmp_assign_source_13;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_6;
        PyObject *tmp_cmp_expr_left_3;
        PyObject *tmp_cmp_expr_right_3;
        PyObject *tmp_getattr_target_2;
        PyObject *tmp_getattr_attr_2;
        PyObject *tmp_getattr_default_1;
        tmp_getattr_target_2 = (PyObject *)&PyBaseObject_Type;
        CHECK_OBJECT(var_func_name);
        tmp_getattr_attr_2 = var_func_name;
        tmp_getattr_default_1 = Py_None;
        tmp_cmp_expr_left_3 = BUILTIN_GETATTR(tmp_getattr_target_2, tmp_getattr_attr_2, tmp_getattr_default_1);
        if (tmp_cmp_expr_left_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1343;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        CHECK_OBJECT(var_func);
        tmp_cmp_expr_right_3 = var_func;
        tmp_condition_result_6 = RICH_COMPARE_EQ_NBOOL_OBJECT_OBJECT(tmp_cmp_expr_left_3, tmp_cmp_expr_right_3);
        Py_DECREF(tmp_cmp_expr_left_3);
        if (tmp_condition_result_6 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1343;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        if (tmp_condition_result_6 == NUITKA_BOOL_TRUE) {
            goto branch_yes_6;
        } else {
            goto branch_no_6;
        }
        assert(tmp_condition_result_6 != NUITKA_BOOL_UNASSIGNED);
    }
    branch_yes_6:;
    goto loop_start_2;
    branch_no_6:;
    {
        nuitka_bool tmp_condition_result_7;
        PyObject *tmp_cmp_expr_left_4;
        PyObject *tmp_cmp_expr_right_4;
        CHECK_OBJECT(var_func_name);
        tmp_cmp_expr_left_4 = var_func_name;
        tmp_cmp_expr_right_4 = mod_consts[1020];
        tmp_condition_result_7 = RICH_COMPARE_EQ_NBOOL_OBJECT_UNICODE(tmp_cmp_expr_left_4, tmp_cmp_expr_right_4);
        if (tmp_condition_result_7 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1345;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        if (tmp_condition_result_7 == NUITKA_BOOL_TRUE) {
            goto branch_yes_7;
        } else {
            goto branch_no_7;
        }
        assert(tmp_condition_result_7 != NUITKA_BOOL_UNASSIGNED);
    }
    branch_yes_7:;
    goto loop_start_2;
    branch_no_7:;
    branch_end_1:;
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_getattr_target_3;
        PyObject *tmp_getattr_attr_3;
        CHECK_OBJECT(var_namespace);
        tmp_getattr_target_3 = var_namespace;
        CHECK_OBJECT(var_func_name);
        tmp_getattr_attr_3 = var_func_name;
        tmp_assign_source_14 = BUILTIN_GETATTR(tmp_getattr_target_3, tmp_getattr_attr_3, NULL);
        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1347;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        {
            PyObject *old = var_func;
            var_func = tmp_assign_source_14;
            Py_XDECREF(old);
        }

    }
    {
        nuitka_bool tmp_condition_result_8;
        int tmp_and_left_truth_1;
        nuitka_bool tmp_and_left_value_1;
        nuitka_bool tmp_and_right_value_1;
        PyObject *tmp_cmp_expr_left_5;
        PyObject *tmp_cmp_expr_right_5;
        PyObject *tmp_expression_value_24;
        PyObject *tmp_cmp_expr_left_6;
        PyObject *tmp_cmp_expr_right_6;
        PyObject *tmp_getattr_target_4;
        PyObject *tmp_getattr_attr_4;
        PyObject *tmp_getattr_default_2;
        CHECK_OBJECT(var_namespace);
        tmp_cmp_expr_left_5 = var_namespace;
        tmp_expression_value_24 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_24 == NULL)) {
            tmp_expression_value_24 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1348;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_cmp_expr_right_5 = LOOKUP_ATTRIBUTE(tmp_expression_value_24, mod_consts[1]);
        if (tmp_cmp_expr_right_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1348;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_and_left_value_1 = (tmp_cmp_expr_left_5 == tmp_cmp_expr_right_5) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        Py_DECREF(tmp_cmp_expr_right_5);
        tmp_and_left_truth_1 = tmp_and_left_value_1 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_1 == 1) {
            goto and_right_1;
        } else {
            goto and_left_1;
        }
        and_right_1:;
        tmp_getattr_target_4 = (PyObject *)&PyBaseObject_Type;
        CHECK_OBJECT(var_func_name);
        tmp_getattr_attr_4 = var_func_name;
        tmp_getattr_default_2 = Py_None;
        tmp_cmp_expr_left_6 = BUILTIN_GETATTR(tmp_getattr_target_4, tmp_getattr_attr_4, tmp_getattr_default_2);
        if (tmp_cmp_expr_left_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1348;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        CHECK_OBJECT(var_func);
        tmp_cmp_expr_right_6 = var_func;
        tmp_and_right_value_1 = RICH_COMPARE_EQ_NBOOL_OBJECT_OBJECT(tmp_cmp_expr_left_6, tmp_cmp_expr_right_6);
        Py_DECREF(tmp_cmp_expr_left_6);
        if (tmp_and_right_value_1 == NUITKA_BOOL_EXCEPTION) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1348;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_8 = tmp_and_right_value_1;
        goto and_end_1;
        and_left_1:;
        tmp_condition_result_8 = tmp_and_left_value_1;
        and_end_1:;
        if (tmp_condition_result_8 == NUITKA_BOOL_TRUE) {
            goto branch_yes_8;
        } else {
            goto branch_no_8;
        }
        assert(tmp_condition_result_8 != NUITKA_BOOL_UNASSIGNED);
    }
    branch_yes_8:;
    goto loop_start_2;
    branch_no_8:;
    {
        nuitka_bool tmp_condition_result_9;
        PyObject *tmp_isinstance_inst_1;
        PyObject *tmp_isinstance_cls_1;
        PyObject *tmp_expression_value_25;
        CHECK_OBJECT(var_func);
        tmp_isinstance_inst_1 = var_func;
        tmp_expression_value_25 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1002]);

        if (unlikely(tmp_expression_value_25 == NULL)) {
            tmp_expression_value_25 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1002]);
        }

        if (tmp_expression_value_25 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1351;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_isinstance_cls_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_25, mod_consts[1021]);
        if (tmp_isinstance_cls_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1351;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_res = PyObject_IsInstance(tmp_isinstance_inst_1, tmp_isinstance_cls_1);
        Py_DECREF(tmp_isinstance_cls_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1351;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_9 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_9 == NUITKA_BOOL_TRUE) {
            goto branch_yes_9;
        } else {
            goto branch_no_9;
        }
    }
    branch_yes_9:;
    goto loop_start_2;
    branch_no_9:;
    {
        nuitka_bool tmp_condition_result_10;
        PyObject *tmp_isinstance_inst_2;
        PyObject *tmp_isinstance_cls_2;
        PyObject *tmp_expression_value_26;
        CHECK_OBJECT(var_func);
        tmp_isinstance_inst_2 = var_func;
        tmp_expression_value_26 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1022]);

        if (unlikely(tmp_expression_value_26 == NULL)) {
            tmp_expression_value_26 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1022]);
        }

        if (tmp_expression_value_26 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1354;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_isinstance_cls_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_26, mod_consts[1023]);
        if (tmp_isinstance_cls_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1354;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_res = PyObject_IsInstance(tmp_isinstance_inst_2, tmp_isinstance_cls_2);
        Py_DECREF(tmp_isinstance_cls_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1354;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_10 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        if (tmp_condition_result_10 == NUITKA_BOOL_TRUE) {
            goto branch_yes_10;
        } else {
            goto branch_no_10;
        }
    }
    branch_yes_10:;
    goto loop_start_2;
    branch_no_10:;
    {
        nuitka_bool tmp_condition_result_11;
        int tmp_and_left_truth_2;
        nuitka_bool tmp_and_left_value_2;
        nuitka_bool tmp_and_right_value_2;
        PyObject *tmp_operand_value_2;
        PyObject *tmp_called_value_4;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_expression_value_27;
        PyObject *tmp_attribute_value_1;
        tmp_called_value_4 = LOOKUP_BUILTIN(mod_consts[985]);
        assert(tmp_called_value_4 != NULL);
        CHECK_OBJECT(var_func);
        tmp_args_element_value_1 = var_func;
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1357;
        tmp_operand_value_2 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_4, tmp_args_element_value_1);
        if (tmp_operand_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1357;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_2);
        Py_DECREF(tmp_operand_value_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1357;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_and_left_value_2 = (tmp_res == 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_and_left_truth_2 = tmp_and_left_value_2 == NUITKA_BOOL_TRUE ? 1 : 0;
        if (tmp_and_left_truth_2 == 1) {
            goto and_right_2;
        } else {
            goto and_left_2;
        }
        and_right_2:;
        CHECK_OBJECT(var_func);
        tmp_expression_value_27 = var_func;
        tmp_attribute_value_1 = mod_consts[843];
        tmp_res = BUILTIN_HASATTR_BOOL(tmp_expression_value_27, tmp_attribute_value_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1357;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_and_right_value_2 = (tmp_res != 0) ? NUITKA_BOOL_TRUE : NUITKA_BOOL_FALSE;
        tmp_condition_result_11 = tmp_and_right_value_2;
        goto and_end_2;
        and_left_2:;
        tmp_condition_result_11 = tmp_and_left_value_2;
        and_end_2:;
        if (tmp_condition_result_11 == NUITKA_BOOL_TRUE) {
            goto branch_yes_11;
        } else {
            goto branch_no_11;
        }
    }
    branch_yes_11:;
    {
        PyObject *tmp_called_value_5;
        PyObject *tmp_expression_value_28;
        PyObject *tmp_expression_value_29;
        PyObject *tmp_subscript_value_2;
        PyObject *tmp_call_result_3;
        PyObject *tmp_args_element_value_2;
        PyObject *tmp_expression_value_30;
        CHECK_OBJECT(var_overridable_funcs);
        tmp_expression_value_29 = var_overridable_funcs;
        CHECK_OBJECT(var_func);
        tmp_subscript_value_2 = var_func;
        tmp_expression_value_28 = LOOKUP_SUBSCRIPT(tmp_expression_value_29, tmp_subscript_value_2);
        if (tmp_expression_value_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1358;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_called_value_5 = LOOKUP_ATTRIBUTE(tmp_expression_value_28, mod_consts[1024]);
        Py_DECREF(tmp_expression_value_28);
        if (tmp_called_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1358;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        CHECK_OBJECT(var_func);
        tmp_expression_value_30 = var_func;
        tmp_args_element_value_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_30, mod_consts[843]);
        if (tmp_args_element_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_5);

            exception_lineno = 1358;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1358;
        tmp_call_result_3 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_5, tmp_args_element_value_2);
        Py_DECREF(tmp_called_value_5);
        Py_DECREF(tmp_args_element_value_2);
        if (tmp_call_result_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1358;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        Py_DECREF(tmp_call_result_3);
    }
    goto loop_start_2;
    branch_no_11:;
    {
        bool tmp_condition_result_12;
        PyObject *tmp_operand_value_3;
        PyObject *tmp_called_value_6;
        PyObject *tmp_args_element_value_3;
        tmp_called_value_6 = LOOKUP_BUILTIN(mod_consts[985]);
        assert(tmp_called_value_6 != NULL);
        CHECK_OBJECT(var_func);
        tmp_args_element_value_3 = var_func;
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1361;
        tmp_operand_value_3 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_6, tmp_args_element_value_3);
        if (tmp_operand_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1361;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_res = CHECK_IF_TRUE(tmp_operand_value_3);
        Py_DECREF(tmp_operand_value_3);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1361;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_12 = (tmp_res == 0) ? true : false;
        if (tmp_condition_result_12 != false) {
            goto branch_yes_12;
        } else {
            goto branch_no_12;
        }
    }
    branch_yes_12:;
    goto loop_start_2;
    branch_no_12:;
    {
        bool tmp_condition_result_13;
        PyObject *tmp_cmp_expr_left_7;
        PyObject *tmp_cmp_expr_right_7;
        PyObject *tmp_called_value_7;
        CHECK_OBJECT(var_func);
        tmp_cmp_expr_left_7 = var_func;
        tmp_called_value_7 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[974]);

        if (unlikely(tmp_called_value_7 == NULL)) {
            tmp_called_value_7 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[974]);
        }

        if (tmp_called_value_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1365;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1365;
        tmp_cmp_expr_right_7 = CALL_FUNCTION_NO_ARGS(tmp_called_value_7);
        if (tmp_cmp_expr_right_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1365;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_7, tmp_cmp_expr_left_7);
        Py_DECREF(tmp_cmp_expr_right_7);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1365;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_13 = (tmp_res == 1) ? true : false;
        if (tmp_condition_result_13 != false) {
            goto branch_yes_13;
        } else {
            goto branch_no_13;
        }
    }
    branch_yes_13:;
    {
        PyObject *tmp_assign_source_15;
        tmp_assign_source_15 = mod_consts[1025];
        {
            PyObject *old = var_msg;
            var_msg = tmp_assign_source_15;
            Py_INCREF(var_msg);
            Py_XDECREF(old);
        }

    }
    {
        bool tmp_condition_result_14;
        PyObject *tmp_cmp_expr_left_8;
        PyObject *tmp_cmp_expr_right_8;
        PyObject *tmp_called_value_8;
        CHECK_OBJECT(var_func);
        tmp_cmp_expr_left_8 = var_func;
        tmp_called_value_8 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1026]);

        if (unlikely(tmp_called_value_8 == NULL)) {
            tmp_called_value_8 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1026]);
        }

        if (tmp_called_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1368;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1368;
        tmp_cmp_expr_right_8 = CALL_FUNCTION_NO_ARGS(tmp_called_value_8);
        if (tmp_cmp_expr_right_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1368;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_8, tmp_cmp_expr_left_8);
        Py_DECREF(tmp_cmp_expr_right_8);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1368;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_condition_result_14 = (tmp_res == 1) ? true : false;
        if (tmp_condition_result_14 != false) {
            goto branch_yes_14;
        } else {
            goto branch_no_14;
        }
    }
    branch_yes_14:;
    {
        PyObject *tmp_raise_type_1;
        PyObject *tmp_raise_value_1;
        PyObject *tmp_tuple_element_8;
        PyObject *tmp_kw_call_arg_value_0_1;
        PyObject *tmp_kw_call_arg_value_1_1;
        PyObject *tmp_kw_call_arg_value_2_1;
        PyObject *tmp_expression_value_31;
        tmp_raise_type_1 = PyExc_AssertionError;
        CHECK_OBJECT(var_msg);
        tmp_kw_call_arg_value_0_1 = var_msg;
        CHECK_OBJECT(var_namespace);
        tmp_kw_call_arg_value_1_1 = var_namespace;
        CHECK_OBJECT(var_func);
        tmp_expression_value_31 = var_func;
        tmp_kw_call_arg_value_2_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_31, mod_consts[976]);
        if (tmp_kw_call_arg_value_2_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1368;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1368;
        {
            PyObject *call_args[] = {tmp_kw_call_arg_value_0_1, tmp_kw_call_arg_value_1_1, tmp_kw_call_arg_value_2_1};
            tmp_tuple_element_8 = CALL_FUNCTION_WITH_ARGS3(unicode_builtin_format, call_args);
        }

        Py_DECREF(tmp_kw_call_arg_value_2_1);
        if (tmp_tuple_element_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1368;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        tmp_raise_value_1 = PyTuple_New(1);
        PyTuple_SET_ITEM(tmp_raise_value_1, 0, tmp_tuple_element_8);
        exception_type = tmp_raise_type_1;
        Py_INCREF(tmp_raise_type_1);
        exception_value = tmp_raise_value_1;
        exception_lineno = 1368;
        RAISE_EXCEPTION_WITH_VALUE(&exception_type, &exception_value, &exception_tb);
        type_description_1 = "ooooooo";
        goto try_except_handler_5;
    }
    branch_no_14:;
    goto loop_start_2;
    branch_no_13:;
    {
        PyObject *tmp_called_instance_2;
        PyObject *tmp_expression_value_32;
        PyObject *tmp_subscript_value_3;
        PyObject *tmp_call_result_4;
        PyObject *tmp_args_element_value_4;
        CHECK_OBJECT(var_overridable_funcs);
        tmp_expression_value_32 = var_overridable_funcs;
        CHECK_OBJECT(var_namespace);
        tmp_subscript_value_3 = var_namespace;
        tmp_called_instance_2 = LOOKUP_SUBSCRIPT(tmp_expression_value_32, tmp_subscript_value_3);
        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1370;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        CHECK_OBJECT(var_func);
        tmp_args_element_value_4 = var_func;
        frame_08a8341025608895f5cca084a2a73a59->m_frame.f_lineno = 1370;
        tmp_call_result_4 = CALL_METHOD_WITH_SINGLE_ARG(tmp_called_instance_2, mod_consts[1024], tmp_args_element_value_4);
        Py_DECREF(tmp_called_instance_2);
        if (tmp_call_result_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1370;
            type_description_1 = "ooooooo";
            goto try_except_handler_5;
        }
        Py_DECREF(tmp_call_result_4);
    }
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 1330;
        type_description_1 = "ooooooo";
        goto try_except_handler_5;
    }
    goto loop_start_2;
    loop_end_2:;
    goto try_end_3;
    // Exception handler code:
    try_except_handler_5:;
    exception_keeper_type_3 = exception_type;
    exception_keeper_value_3 = exception_value;
    exception_keeper_tb_3 = exception_tb;
    exception_keeper_lineno_3 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_3;
    exception_value = exception_keeper_value_3;
    exception_tb = exception_keeper_tb_3;
    exception_lineno = exception_keeper_lineno_3;

    goto try_except_handler_2;
    // End of try:
    try_end_3:;
    Py_XDECREF(tmp_for_loop_2__iter_value);
    tmp_for_loop_2__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_2__for_iterator);
    Py_DECREF(tmp_for_loop_2__for_iterator);
    tmp_for_loop_2__for_iterator = NULL;
    if (CONSIDER_THREADING() == false) {
        assert(ERROR_OCCURRED());

        FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


        exception_lineno = 1329;
        type_description_1 = "ooooooo";
        goto try_except_handler_2;
    }
    goto loop_start_1;
    loop_end_1:;
    goto try_end_4;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_4 = exception_type;
    exception_keeper_value_4 = exception_value;
    exception_keeper_tb_4 = exception_tb;
    exception_keeper_lineno_4 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_4;
    exception_value = exception_keeper_value_4;
    exception_tb = exception_keeper_tb_4;
    exception_lineno = exception_keeper_lineno_4;

    goto frame_exception_exit_1;
    // End of try:
    try_end_4:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_08a8341025608895f5cca084a2a73a59);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_08a8341025608895f5cca084a2a73a59);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_08a8341025608895f5cca084a2a73a59, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_08a8341025608895f5cca084a2a73a59->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_08a8341025608895f5cca084a2a73a59, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_08a8341025608895f5cca084a2a73a59,
        type_description_1,
        var_overridable_funcs,
        var_tested_namespaces,
        var_namespace,
        var_ns_funcs,
        var_func_name,
        var_func,
        var_msg
    );


    // Release cached frame if used for exception.
    if (frame_08a8341025608895f5cca084a2a73a59 == cache_frame_08a8341025608895f5cca084a2a73a59) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_08a8341025608895f5cca084a2a73a59);
        cache_frame_08a8341025608895f5cca084a2a73a59 = NULL;
    }

    assertFrameObject(frame_08a8341025608895f5cca084a2a73a59);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    Py_XDECREF(tmp_for_loop_1__iter_value);
    tmp_for_loop_1__iter_value = NULL;
    CHECK_OBJECT(tmp_for_loop_1__for_iterator);
    Py_DECREF(tmp_for_loop_1__for_iterator);
    tmp_for_loop_1__for_iterator = NULL;
    CHECK_OBJECT(var_overridable_funcs);
    tmp_return_value = var_overridable_funcs;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_overridable_funcs);
    Py_DECREF(var_overridable_funcs);
    var_overridable_funcs = NULL;
    CHECK_OBJECT(var_tested_namespaces);
    Py_DECREF(var_tested_namespaces);
    var_tested_namespaces = NULL;
    Py_XDECREF(var_namespace);
    var_namespace = NULL;
    Py_XDECREF(var_ns_funcs);
    var_ns_funcs = NULL;
    Py_XDECREF(var_func_name);
    var_func_name = NULL;
    Py_XDECREF(var_func);
    var_func = NULL;
    Py_XDECREF(var_msg);
    var_msg = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_5 = exception_type;
    exception_keeper_value_5 = exception_value;
    exception_keeper_tb_5 = exception_tb;
    exception_keeper_lineno_5 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_overridable_funcs);
    var_overridable_funcs = NULL;
    Py_XDECREF(var_tested_namespaces);
    var_tested_namespaces = NULL;
    Py_XDECREF(var_namespace);
    var_namespace = NULL;
    Py_XDECREF(var_ns_funcs);
    var_ns_funcs = NULL;
    Py_XDECREF(var_func_name);
    var_func_name = NULL;
    Py_XDECREF(var_func);
    var_func = NULL;
    Py_XDECREF(var_msg);
    var_msg = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_5;
    exception_value = exception_keeper_value_5;
    exception_tb = exception_keeper_tb_5;
    exception_lineno = exception_keeper_lineno_5;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.


   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_torch$overrides$$$function__7__get_tensor_methods(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *var_overridable_funcs = NULL;
    PyObject *var_methods = NULL;
    struct Nuitka_FrameObject *frame_9e53b0661e341a07bfe06ad7b3648d5c;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    static struct Nuitka_FrameObject *cache_frame_9e53b0661e341a07bfe06ad7b3648d5c = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;

    // Actual function body.
    // Tried code:
    if (isFrameUnusable(cache_frame_9e53b0661e341a07bfe06ad7b3648d5c)) {
        Py_XDECREF(cache_frame_9e53b0661e341a07bfe06ad7b3648d5c);

#if _DEBUG_REFCOUNTS
        if (cache_frame_9e53b0661e341a07bfe06ad7b3648d5c == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_9e53b0661e341a07bfe06ad7b3648d5c = MAKE_FUNCTION_FRAME(codeobj_9e53b0661e341a07bfe06ad7b3648d5c, module_torch$overrides, sizeof(void *)+sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_9e53b0661e341a07bfe06ad7b3648d5c->m_type_description == NULL);
    frame_9e53b0661e341a07bfe06ad7b3648d5c = cache_frame_9e53b0661e341a07bfe06ad7b3648d5c;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_9e53b0661e341a07bfe06ad7b3648d5c);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_9e53b0661e341a07bfe06ad7b3648d5c) == 2); // Frame stack

    // Framed code:
    {
        PyObject *tmp_assign_source_1;
        PyObject *tmp_called_value_1;
        tmp_called_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1028]);

        if (unlikely(tmp_called_value_1 == NULL)) {
            tmp_called_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1028]);
        }

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1376;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        frame_9e53b0661e341a07bfe06ad7b3648d5c->m_frame.f_lineno = 1376;
        tmp_assign_source_1 = CALL_FUNCTION_NO_ARGS(tmp_called_value_1);
        if (tmp_assign_source_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1376;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        assert(var_overridable_funcs == NULL);
        var_overridable_funcs = tmp_assign_source_1;
    }
    {
        PyObject *tmp_assign_source_2;
        PyObject *tmp_set_arg_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_subscript_value_1;
        PyObject *tmp_expression_value_2;
        CHECK_OBJECT(var_overridable_funcs);
        tmp_expression_value_1 = var_overridable_funcs;
        tmp_expression_value_2 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_2 == NULL)) {
            tmp_expression_value_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1377;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_subscript_value_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_2, mod_consts[1]);
        if (tmp_subscript_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1377;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_set_arg_1 = LOOKUP_SUBSCRIPT(tmp_expression_value_1, tmp_subscript_value_1);
        Py_DECREF(tmp_subscript_value_1);
        if (tmp_set_arg_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1377;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        tmp_assign_source_2 = PySet_New(tmp_set_arg_1);
        Py_DECREF(tmp_set_arg_1);
        if (tmp_assign_source_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1377;
            type_description_1 = "oo";
            goto frame_exception_exit_1;
        }
        assert(var_methods == NULL);
        var_methods = tmp_assign_source_2;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_9e53b0661e341a07bfe06ad7b3648d5c);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_9e53b0661e341a07bfe06ad7b3648d5c);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_9e53b0661e341a07bfe06ad7b3648d5c, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_9e53b0661e341a07bfe06ad7b3648d5c->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_9e53b0661e341a07bfe06ad7b3648d5c, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_9e53b0661e341a07bfe06ad7b3648d5c,
        type_description_1,
        var_overridable_funcs,
        var_methods
    );


    // Release cached frame if used for exception.
    if (frame_9e53b0661e341a07bfe06ad7b3648d5c == cache_frame_9e53b0661e341a07bfe06ad7b3648d5c) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_9e53b0661e341a07bfe06ad7b3648d5c);
        cache_frame_9e53b0661e341a07bfe06ad7b3648d5c = NULL;
    }

    assertFrameObject(frame_9e53b0661e341a07bfe06ad7b3648d5c);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto try_except_handler_1;

    frame_no_exception_1:;
    CHECK_OBJECT(var_methods);
    tmp_return_value = var_methods;
    Py_INCREF(tmp_return_value);
    goto try_return_handler_1;
    NUITKA_CANNOT_GET_HERE("tried codes exits in all cases");
    return NULL;
    // Return handler code:
    try_return_handler_1:;
    CHECK_OBJECT(var_overridable_funcs);
    Py_DECREF(var_overridable_funcs);
    var_overridable_funcs = NULL;
    CHECK_OBJECT(var_methods);
    Py_DECREF(var_methods);
    var_methods = NULL;
    goto function_return_exit;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    Py_XDECREF(var_overridable_funcs);
    var_overridable_funcs = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto function_exception_exit;
    // End of try:

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.


   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_torch$overrides$$$function__8_is_tensor_method_or_property(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_func = python_pars[0];
    struct Nuitka_FrameObject *frame_9d175873b9d319b284c2dd2cd56512fd;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_9d175873b9d319b284c2dd2cd56512fd = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_9d175873b9d319b284c2dd2cd56512fd)) {
        Py_XDECREF(cache_frame_9d175873b9d319b284c2dd2cd56512fd);

#if _DEBUG_REFCOUNTS
        if (cache_frame_9d175873b9d319b284c2dd2cd56512fd == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_9d175873b9d319b284c2dd2cd56512fd = MAKE_FUNCTION_FRAME(codeobj_9d175873b9d319b284c2dd2cd56512fd, module_torch$overrides, sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_9d175873b9d319b284c2dd2cd56512fd->m_type_description == NULL);
    frame_9d175873b9d319b284c2dd2cd56512fd = cache_frame_9d175873b9d319b284c2dd2cd56512fd;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_9d175873b9d319b284c2dd2cd56512fd);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_9d175873b9d319b284c2dd2cd56512fd) == 2); // Frame stack

    // Framed code:
    {
        int tmp_or_left_truth_1;
        PyObject *tmp_or_left_value_1;
        PyObject *tmp_or_right_value_1;
        PyObject *tmp_cmp_expr_left_1;
        PyObject *tmp_cmp_expr_right_1;
        PyObject *tmp_called_value_1;
        PyObject *tmp_cmp_expr_left_2;
        PyObject *tmp_cmp_expr_right_2;
        PyObject *tmp_expression_value_1;
        CHECK_OBJECT(par_func);
        tmp_cmp_expr_left_1 = par_func;
        tmp_called_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1030]);

        if (unlikely(tmp_called_value_1 == NULL)) {
            tmp_called_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1030]);
        }

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1402;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        frame_9d175873b9d319b284c2dd2cd56512fd->m_frame.f_lineno = 1402;
        tmp_cmp_expr_right_1 = CALL_FUNCTION_NO_ARGS(tmp_called_value_1);
        if (tmp_cmp_expr_right_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1402;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_res = PySequence_Contains(tmp_cmp_expr_right_1, tmp_cmp_expr_left_1);
        Py_DECREF(tmp_cmp_expr_right_1);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1402;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_1 = (tmp_res == 1) ? Py_True : Py_False;
        tmp_or_left_truth_1 = CHECK_IF_TRUE(tmp_or_left_value_1);
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        CHECK_OBJECT(par_func);
        tmp_expression_value_1 = par_func;
        tmp_cmp_expr_left_2 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[976]);
        if (tmp_cmp_expr_left_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1402;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_cmp_expr_right_2 = mod_consts[843];
        tmp_or_right_value_1 = RICH_COMPARE_EQ_OBJECT_OBJECT_UNICODE(tmp_cmp_expr_left_2, tmp_cmp_expr_right_2);
        Py_DECREF(tmp_cmp_expr_left_2);
        if (tmp_or_right_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1402;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_return_value = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        Py_INCREF(tmp_or_left_value_1);
        tmp_return_value = tmp_or_left_value_1;
        or_end_1:;
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_9d175873b9d319b284c2dd2cd56512fd);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_9d175873b9d319b284c2dd2cd56512fd);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_9d175873b9d319b284c2dd2cd56512fd);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_9d175873b9d319b284c2dd2cd56512fd, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_9d175873b9d319b284c2dd2cd56512fd->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_9d175873b9d319b284c2dd2cd56512fd, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_9d175873b9d319b284c2dd2cd56512fd,
        type_description_1,
        par_func
    );


    // Release cached frame if used for exception.
    if (frame_9d175873b9d319b284c2dd2cd56512fd == cache_frame_9d175873b9d319b284c2dd2cd56512fd) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_9d175873b9d319b284c2dd2cd56512fd);
        cache_frame_9d175873b9d319b284c2dd2cd56512fd = NULL;
    }

    assertFrameObject(frame_9d175873b9d319b284c2dd2cd56512fd);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_func);
    Py_DECREF(par_func);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_func);
    Py_DECREF(par_func);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}


static PyObject *impl_torch$overrides$$$function__9_is_tensor_like(struct Nuitka_FunctionObject const *self, PyObject **python_pars) {
    // Preserve error status for checks
#ifndef __NUITKA_NO_ASSERT__
    NUITKA_MAY_BE_UNUSED bool had_error = ERROR_OCCURRED();
#endif

    // Local variable declarations.
    PyObject *par_inp = python_pars[0];
    struct Nuitka_FrameObject *frame_804b72e970ddaba1aaa2ed310122c27c;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    PyObject *tmp_return_value = NULL;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    int tmp_res;
    static struct Nuitka_FrameObject *cache_frame_804b72e970ddaba1aaa2ed310122c27c = NULL;

    // Actual function body.
    if (isFrameUnusable(cache_frame_804b72e970ddaba1aaa2ed310122c27c)) {
        Py_XDECREF(cache_frame_804b72e970ddaba1aaa2ed310122c27c);

#if _DEBUG_REFCOUNTS
        if (cache_frame_804b72e970ddaba1aaa2ed310122c27c == NULL) {
            count_active_frame_cache_instances += 1;
        } else {
            count_released_frame_cache_instances += 1;
        }
        count_allocated_frame_cache_instances += 1;
#endif
        cache_frame_804b72e970ddaba1aaa2ed310122c27c = MAKE_FUNCTION_FRAME(codeobj_804b72e970ddaba1aaa2ed310122c27c, module_torch$overrides, sizeof(void *));
#if _DEBUG_REFCOUNTS
    } else {
        count_hit_frame_cache_instances += 1;
#endif
    }
    assert(cache_frame_804b72e970ddaba1aaa2ed310122c27c->m_type_description == NULL);
    frame_804b72e970ddaba1aaa2ed310122c27c = cache_frame_804b72e970ddaba1aaa2ed310122c27c;

    // Push the new frame as the currently active one.
    pushFrameStack(frame_804b72e970ddaba1aaa2ed310122c27c);

    // Mark the frame object as in use, ref count 1 will be up for reuse.
    assert(Py_REFCNT(frame_804b72e970ddaba1aaa2ed310122c27c) == 2); // Frame stack

    // Framed code:
    {
        int tmp_or_left_truth_1;
        PyObject *tmp_or_left_value_1;
        PyObject *tmp_or_right_value_1;
        PyObject *tmp_cmp_expr_left_1;
        PyObject *tmp_cmp_expr_right_1;
        PyObject *tmp_type_arg_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_expression_value_2;
        PyObject *tmp_type_arg_2;
        PyObject *tmp_attribute_value_1;
        CHECK_OBJECT(par_inp);
        tmp_type_arg_1 = par_inp;
        tmp_cmp_expr_left_1 = BUILTIN_TYPE1(tmp_type_arg_1);
        assert(!(tmp_cmp_expr_left_1 == NULL));
        tmp_expression_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0]);

        if (unlikely(tmp_expression_value_1 == NULL)) {
            tmp_expression_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[0]);
        }

        if (tmp_expression_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_cmp_expr_left_1);

            exception_lineno = 1437;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_cmp_expr_right_1 = LOOKUP_ATTRIBUTE(tmp_expression_value_1, mod_consts[1]);
        if (tmp_cmp_expr_right_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_cmp_expr_left_1);

            exception_lineno = 1437;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_or_left_value_1 = (tmp_cmp_expr_left_1 == tmp_cmp_expr_right_1) ? Py_True : Py_False;
        Py_DECREF(tmp_cmp_expr_left_1);
        Py_DECREF(tmp_cmp_expr_right_1);
        tmp_or_left_truth_1 = CHECK_IF_TRUE(tmp_or_left_value_1);
        if (tmp_or_left_truth_1 == 1) {
            goto or_left_1;
        } else {
            goto or_right_1;
        }
        or_right_1:;
        CHECK_OBJECT(par_inp);
        tmp_type_arg_2 = par_inp;
        tmp_expression_value_2 = BUILTIN_TYPE1(tmp_type_arg_2);
        assert(!(tmp_expression_value_2 == NULL));
        tmp_attribute_value_1 = mod_consts[145];
        tmp_res = BUILTIN_HASATTR_BOOL(tmp_expression_value_2, tmp_attribute_value_1);
        Py_DECREF(tmp_expression_value_2);
        if (tmp_res == -1) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1437;
            type_description_1 = "o";
            goto frame_exception_exit_1;
        }
        tmp_or_right_value_1 = (tmp_res != 0) ? Py_True : Py_False;
        tmp_return_value = tmp_or_right_value_1;
        goto or_end_1;
        or_left_1:;
        tmp_return_value = tmp_or_left_value_1;
        or_end_1:;
        Py_INCREF(tmp_return_value);
        goto frame_return_exit_1;
    }

#if 0
    RESTORE_FRAME_EXCEPTION(frame_804b72e970ddaba1aaa2ed310122c27c);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto frame_no_exception_1;

    frame_return_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_804b72e970ddaba1aaa2ed310122c27c);
#endif

    // Put the previous frame back on top.
    popFrameStack();

    goto function_return_exit;

    frame_exception_exit_1:;

#if 0
    RESTORE_FRAME_EXCEPTION(frame_804b72e970ddaba1aaa2ed310122c27c);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_804b72e970ddaba1aaa2ed310122c27c, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_804b72e970ddaba1aaa2ed310122c27c->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_804b72e970ddaba1aaa2ed310122c27c, exception_lineno);
    }

    // Attaches locals to frame if any.
    Nuitka_Frame_AttachLocals(
        frame_804b72e970ddaba1aaa2ed310122c27c,
        type_description_1,
        par_inp
    );


    // Release cached frame if used for exception.
    if (frame_804b72e970ddaba1aaa2ed310122c27c == cache_frame_804b72e970ddaba1aaa2ed310122c27c) {
#if _DEBUG_REFCOUNTS
        count_active_frame_cache_instances -= 1;
        count_released_frame_cache_instances += 1;
#endif

        Py_DECREF(cache_frame_804b72e970ddaba1aaa2ed310122c27c);
        cache_frame_804b72e970ddaba1aaa2ed310122c27c = NULL;
    }

    assertFrameObject(frame_804b72e970ddaba1aaa2ed310122c27c);

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto function_exception_exit;

    frame_no_exception_1:;

    NUITKA_CANNOT_GET_HERE("Return statement must have exited already.");
    return NULL;

function_exception_exit:
    CHECK_OBJECT(par_inp);
    Py_DECREF(par_inp);    assert(exception_type);
    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);

    return NULL;

function_return_exit:
   // Function cleanup code if any.
    CHECK_OBJECT(par_inp);
    Py_DECREF(par_inp);

   // Actual function exit with return value, making sure we did not make
   // the error status worse despite non-NULL return.
   CHECK_OBJECT(tmp_return_value);
   assert(had_error || !ERROR_OCCURRED());
   return tmp_return_value;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__1_get_ignored_functions(PyObject *annotations) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__1_get_ignored_functions,
        mod_consts[974],
#if PYTHON_VERSION >= 0x300
        NULL,
#endif
        codeobj_b1e8231baac4ff0fb8a1ee4db14e786e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        annotations,
#endif
        module_torch$overrides,
        mod_consts[162],
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides(PyObject *annotations) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__2_get_testing_overrides,
        mod_consts[1026],
#if PYTHON_VERSION >= 0x300
        NULL,
#endif
        codeobj_7ff0ae4604184518803c0a295e81bf4d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        annotations,
#endif
        module_torch$overrides,
        mod_consts[987],
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__100_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e3dd73bdb8b4f5b0e782f3b248d1bbf0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__101_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6b24c16c22c91bae759c0880b4d48ccc,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__102_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1a8dd72c18c03866f4411799d28c5979,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__103_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_070433f3767f708a84b2d945cf43fae6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__104_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_47a8b3e55610cac64a887d5a1173d7fc,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__105_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4d55603165fdee73a489e272024b5566,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__106_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_117d3283aee70b6adb62bd73b24a6ff8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__107_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_83a0479aad60579f308e6f6f95af3eaa,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__108_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7487d6261417f0aca2a73c3a15e13b42,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__109_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6a2bd8324fe3f931dbef4853f99ecd07,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__10_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ff6a6c91581c991ce7ff66a82456e11e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__110_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7b0e3ea98adb4818017d9e75273e41e9,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__111_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_df2ebb7a6d74120aa1eb5ed010155688,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__112_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_14b5187c5fc6a1513f5a02a87c05fceb,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__113_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5e8436bbe59a5692f996f9c84c98cbc3,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__114_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5eb2744b4e974e464ee7e95bb0317b7a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__115_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_759c40cc67642f4aa4a594d390905a11,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__116_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c232368d74abb528dc4c2cf68d0c34d0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__117_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3ada5cafca958e603018cefe71f873a4,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__118_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fdbccf0dca7dd3d1021cbe260d48fc7d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__119_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_19ddd7ccf85d1dee8bf238ecff939a31,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__11_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4fed1211764a0002f0964ff5df22ee52,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__120_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ce17ee6c6fb41334def2115245226780,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__121_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_cddcaedf1e77551465322634fe58726f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__122_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9a27727bb923b412dcaf4ee658e94d9e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__123_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a9415034c86ef3814f538cc41b464fea,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__124_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b67624ded915f5d05c31ccc42d6d25e1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__125_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bb2c8c9fadd63b1a4ce6cd3fd14cc65c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__126_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_43f882f911f1fdc6257937f2709bffe0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__127_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_207bf4b4970fe9bb91f60e54ef73ea55,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__128_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d9ea36f93ae2a0e75fa4a9dd58385550,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__129_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d0a2f4f5e657233985c4a742359d6214,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__12_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_02dbede001a1e37e15f84d532cf6190f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__130_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4c1db0006441ef38b5ee7e374d4d0804,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__131_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5725a606917de9528607d361a4ee1397,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__132_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fda8a10e2d867eed91cca663273223a5,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__133_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_153f0a5ce3d8144d9a719bbae36498b3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__134_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0217d7f76189cbe2fc8608bf5ff28577,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__135_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d9dacdea00267e02bc2ade1e15a52716,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__136_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_18c0c6d51def37199a83c105dfe79a97,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__137_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_afced52859d61a926d49e9db5968663b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__138_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e514ce676e9f791e724b3e2b8ee3517e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__139_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0c0378777b73c34d05e89d65ad0024a8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__13_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0819dab7e34e03edbb94ce48792910d8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__140_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ef3d4dbaad1d0fab2b5ea2537a5937ef,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__141_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4479328ca0f341c323060fd957269caf,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__142_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_60784da2011e39b547d44efed65cd1e0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__143_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_df9b95b5283b43df8b32b2e5533651f3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__144_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8034a89fe0b7148ca5dd2c02e7c43174,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__145_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d1b65482262a0612a10b90eaa8c63863,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__146_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b3a95c48a95604147f501a5e1bae01c7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__147_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1b7d3ef7a10bf4daaec1a9f38c967397,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__148_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_846c413d32166b7d9cddd7eba52302e9,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__149_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0098591fcaa03562bc14b8e795c9382a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__14_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4de9d5ecec663a7049590e0f934cf873,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__150_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3bf6be688ad9b71b4846e4a9bd532493,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__151_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_951a4ade5a8a01727ae0a9da3adc2623,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__152_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bf1d96d936851e30d347ea328df356f7,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__153_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d6639c3d748e14f52c70358395c9ce89,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__154_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f7b308f4266b182e74ddc6f21d23bd71,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__155_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b3e1ba6f1fbc7a4b10ca6563414cda35,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__156_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2659af50e36e4452e4562f92b573703f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__157_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_55b854c24cbd63a08fcdcc73eb3b0304,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__158_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a0aa0a9c3412002aff4b12ea95de651b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__159_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b2f3ddb6f4491168deaddb0651d6ac58,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__15_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3fa143d70c25849b2036970c219a875c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__160_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fb8c196bd77170d2afc4bb456f4aac04,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__161_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6959040a96bc56f9695cc9025388110e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__162_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7ee093a8f8de311dfd521a4b41a320de,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__163_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a07b3f4b2ed3f1d9f9e6b20454bc343b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__164_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d9889fa5f466ba8401cd91caf28cc58c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__165_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_50182f3bffbda404c2a830019baebd4e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__166_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1623a43da474bdf0f22c8765c99e3a4e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__167_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c3d96b030b6fc90e6efb95680c7f7324,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__168_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a5b9f9edb882a26f8fc6ff962747aeb2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__169_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2838850478099bc5a2b92ea8894fad5c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__16_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_89195a8737e718a015732554cd8b0ecf,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__170_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_dee84dd429cee958e3392b429d6e10d1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__171_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a62328bc960ae7d17d18e863953cbc03,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__172_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_369fee2725204340697986f5db225b90,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__173_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b881e1fe1733720427f035cb9b4ccd3c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__174_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d282ae9df147bcd7f6700260fc074fb6,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__175_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2b1f70a99dd0e1ac366fe3369c9a3a02,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__176_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_88014088a865b5b3d8ccb75f8b3b4bd8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__177_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_860612f3126ad49a39ca8f81c0857218,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__178_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_dbff55d02e8d408bb7d849f7b828beb3,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__179_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d96f65a66c3032c798b258bb4661ae3b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__17_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_99b9afbef98917154a60dac12272ffc4,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__180_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5dbfbaf2b8149e574fa6038492b6fa1c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__181_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bbd2972b9a6900270bbb1644b4f17020,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__182_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_58a61b888b720a8b4aa0d167cdfe4ba7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__183_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_caae7c841607feef1f9e6ee0b90f969d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__184_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_de532df743d4c03dc3d41168738d9763,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__185_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b6ae86e102d5d39379e37307d01fe6b7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__186_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_88a434033bc1819617af944fd43221ec,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__187_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ca7f5e8e75fc52fc00cf987f16dc68ca,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__188_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7da9ef674f1f2dc5b8eab6d23e0e0287,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__189_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_01f33796bc85db7f9da6f1ce0b59cc41,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__18_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_99a2f3c9140d5ef026bac3942daba5aa,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__190_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d9f16c6baf6c725760400c2c10970d16,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__191_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3ebea4094d228bdf91ba1233ffaa72b6,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__192_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5239cc8a975d587e172c73f1728ddb8d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__193_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d128997ac371bbf8c38ac42c8bf5fde8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__194_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7a1be44988387e2ed8c8ba6f57154393,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__195_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ba83dfb20e240cf85b24c48c039a4cbc,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__196_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f0e7ed39f87a8008f5700b9b6ae6498a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__197_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_329e72e79189363e9dc039ce83923479,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__198_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bb0d153d8897a5b657176d08c8594a16,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__199_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3e40584376e7f60db271b0c3d156792f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__19_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e6b2c140edef90ef38b8cbf83aaa48f3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__1_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_18aa2bed3b87c73f81192f6cd10b065d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__200_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_43c677e2b954722d242194acbb400a27,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__201_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_089281af5425e2496b79c97b5a55a1d4,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__202_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d3678db6fa46a0c989cf4da38ae23f60,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__203_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_911caabdc1d3d60cc1bbe0e84eeba228,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__204_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fb2a85f922638a745586f424e7065204,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__205_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9390a753c6277141b6a5006c15a149c0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__206_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d5a7daa8d114bb71ee1452af953dc7c5,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__207_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7bb7929a2ff6e5695b7ecb6c0d79653b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__208_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8ecacd6c708a9404cb57f07285318e85,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__209_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_679b827a638bfcb2f34fc1025ad1cce0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__20_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2bc8c668ef6f5479552a4909464bcf97,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__210_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c089b03676f4ea5846854cbc3742dac2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__211_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5195d7b7ceed11f99575358553d18f3a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__212_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1b1baa996a9aa4db3501ac39f75605ef,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__213_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_eb9b182d1a8b2e3c06f57c8c989ce4ea,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__214_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ed9089c3669b9fcbfe6a2d632c80c428,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__215_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6b20f2bc37602335552e6e16621dd1c4,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__216_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c7e57baae065ffbb9bd3fed8e60117be,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__217_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fa1144e4a4cea04a80e187e761dcf994,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__218_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_004ac222539267a5a5b8c98f585994c9,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__219_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9fd5b6e9fc1f9531b50008440dac46ff,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__21_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_21db83cf1a3fcc5313dbbedf59f61c88,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__220_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_622843b7a2fd6392f8e33d080f4de109,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__221_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3cd0ef2071698f6da56bace17d4a2635,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__222_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ebeb8fc984071b1910e67484d5e9a92c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__223_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f46d1adb89c674089a3e8a206fa1520a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__224_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ce6c7911a3ec55475198e2cb89e7df36,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__225_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8bcfcc928f3f7335c124c74f34429144,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__226_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_de09c6c08f1327b2adc32bbc4dc46f13,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__227_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bba29cf04bc3d1b0badf15dbd430adc8,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__228_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_27a378dbc9145be3dcf7c610710a33cc,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__229_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_12e190367c8b6f27df7ac1f957838d67,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__22_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1573b5a984f0ce603d01a7cbf6c95988,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__230_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ef7dcfb54a473c258c8f12cc4fe59917,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__231_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a62ab153a36f9f18c2bce55b7660fec6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__232_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_57b447c6cfb2ed7b4d40d192dd7f6c3c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__233_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_db68008fd3848f116b60f95c0a31e897,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__234_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1bf209d16122f9fd4695a2f407470e0e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__235_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3d9285a4fcf9ca7a7c8c9c2ea3b478da,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__236_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6ef106c6f1f9264d11e34b781a6556ab,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__237_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_911ad72d3ebfb3e75f03b048f49992f2,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__238_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_336a3fa4ad87dd1c56d8fa959251adf6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__239_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9be1a2b91b77491923931ff78f51854e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__23_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_eeb8e49306fbcbc54379e1796d043476,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__240_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_90a56f69c7e5a0de9f5bd955e7eac464,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__241_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_184a2782933341af77a8d57338fc87a1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__242_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e67dd18b202923643ba78ba4e53ebae6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__243_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4990cde66c4c8f4d809694e8a4eb030c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__244_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6be0414880ba6f6b433c227f58491bde,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__245_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_49615681273b3d2f3efefbfbcacf8cd5,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__246_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c11a622ba0484bdfcf6a423004a1395a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__247_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_97c1d77c65714df61e4273ee44d29df2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__248_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_dcdf22896010aae78caa8b5330e3545a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__249_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c15799d9c70c75374826b610a49d086d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__24_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e6ebc77f0fb9c37a10f730123c395c1d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__250_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_538b252c1ee4bd11d010f6bfa07bcf5e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__251_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_640bbf7a5633386b24cfe485e733f96e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__252_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_394434abe4388f0e2553cf544effa313,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__253_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_38c37c891a973d6cdf5ffd4f035dcd9a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__254_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f713e4c3e6075f5d1c89a2bf4e4c6d25,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__255_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_79f8a99354682a62830c65be1362f363,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__256_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_11f6003de0ad1b2594bfc7a06d8cafca,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__257_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1358de6509ac5dace0db6cb3abecb644,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__258_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_45dedc6d4e9c8b9f4f1f75c6b6301e38,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__259_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e74e393d662c7e19eaab9c8afe6bfa39,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__25_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_759153a34c095830fd7c2d50e180ecf3,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__260_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_57b6bf21d907008ffecdb3c605b6c86d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__261_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_534c08731440e03b3fbbbbd0e56468db,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__262_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d8383418ceafc69df20e26e6839dba7b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__263_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_36b75efc5cb2644b1e5b2f2b7ac76e2a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__264_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6e19d0b0361ba16de8adbb71f462b65e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__265_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2f9941c07e060233d65e197a9dec2c91,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__266_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_68aa4e1f033f852aa1be53efa9cb0c1d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__267_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2e0815109111092eaee9219bb3e29c44,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__268_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_66dff01e9a6d2ebf860304a66e264e5f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__269_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_92ed8b352e35254f0f80f83309cd00a4,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__26_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_eac471b32f47cbacbdbf3230a633171a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__270_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c725a154746ff10192c05ef4dd1774d4,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__271_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_803a5a9f7e3ec6d7170b9ee2717ebed8,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__272_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8cf9e6fb448187310d81e577aecc3e3c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__273_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_48388f92d237b47809acaf7d616bd695,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__274_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_cbbfb275684a4d801a2e486028aa560c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__275_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e89a914ce94f89bf6ee0a028768882fd,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__276_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_820d4c3053ff03a73b15ed9fe22ce4e4,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__277_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_12c7efe66f7f77aa3a060530e2d53131,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__278_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6472c0ce4b64cd5a6fbc99d80b23915e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__279_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0392c46a2ee0c29b638b907f9d54fcfe,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__27_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1b091a7c5d6be595b8b930e08ddd81a3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__280_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b68b44b6917bd020e82e67c555514b55,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__281_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f022cc6910c9b592d8dc7281b9bfdd98,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__282_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_03b5692592251a258d193cf42a9f3d07,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__283_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7ef9b8317e9297f244713fbc98813a01,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__284_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_047ba541c18e97aeae041f81b866bf17,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__285_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1417d16419933e762e389fbee90b91f7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__286_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7811755944a2a6d05e812dc52274bd3d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__287_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_73be685428acc1df92a271369e0bd316,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__288_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_02e39bd46c17894dab0bb0824f1a58eb,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__289_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c21e6268f9d53429e789e8b545b43323,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__28_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_dce98f1557effa7f2578e587c810cbd3,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__290_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c5d0961ae719cc71346189506826b938,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__291_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0dc0e4d07490a41fb31654c9de80395c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__292_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_35a765f50b569583621a6b1140ea33c3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__293_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7425705ecc93cd66642eac4b0156f7af,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__294_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9961eaaca2a502e0f5e2f659b19965f1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__295_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5931536a62ae399c9e5fc3549619447a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__296_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b298b2c40a578a3f929ded3d64fa23ee,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__297_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6562eb61386ef0033e54c6d938c2bb3c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__298_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_17c32f247cca654448db550a7cb6707c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__299_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5cbf4fab4c2124bb2b36a401dd8e6c5f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__29_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_47dad59927ae2dd6391a3be17728371d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__2_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7eccf1ea19034e827b77b437e7ffd305,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__300_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_69d6e954c709de78083bdff34aaf2a5d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__301_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_08a2cb300cb53ba86f201bacb5497a6d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__302_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_09ca7fd1eeddf11cc9c5e80fc73493fa,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__303_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1cf4344747a5c75784e8f3c9f710b1bc,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__304_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bac6657b7654ae2101b3a4cad951d032,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__305_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_77b7c0239ca19f52b7d2d1b2c93f7212,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__306_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7b01927d67643ce0eef421a64fddf5bc,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__307_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_74f8d94d49e9d1b3fcc51a4010fb5b05,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__308_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_88ceed81d89385e281d76e9b15a676d4,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__309_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a4889ab0a689f3723ddd3b9b83cb43ac,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__30_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b4c511956b95d153925a77792c9529dc,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__310_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d48923f5002d27ad3da630c5654364d0,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__311_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_565f1885c2ffb854444ea9f74f6b8956,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__312_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_cd68e8bb426a4fdad273a47ef28a4472,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__313_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_93718ec85146bccb991e775a65d56ce5,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__314_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_aa3d74651f623430808b6764ed9cfe54,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__315_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_75901d348710cd83bd43eaa66a6a2485,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__316_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bcfb4d516614a69aa8dac813d636e504,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__317_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5ccf6114025d5d4590a61c81081129c6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__318_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c7c62883de64a4cb091b457e98e0d629,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__319_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_670b54eed00e6a0160abec021a231c03,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__31_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_28770312ef3371ffa7a6f34789007dc5,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__320_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9969c43c09bbcede7412f8523f86d3db,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__321_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0876eff6cda25315b54cb0b6810f6735,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__322_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b2c915c276c7bab1c5af37f44766629e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__323_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c1aa34506ff2db6b85c5687004f2df7b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__324_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7b5d97caf456021d6b8481ea17c89349,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__325_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8a7ee6585868ca50e2114a9a86988dbd,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__326_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0d05f362a21cc26461ea0dd004036f12,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__327_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_daa00c4f7a55cd6beb342fb86581f5ea,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__328_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ae595f8c12674e6c48ea94edaeb93219,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__329_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ce551165bf4720e28f888c3643e71da4,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__32_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3758e92bb394c6d2db5c57808746d8c0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__330_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a13ed037050aee545a18c73b495018dd,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__331_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_df95a7e4895f6fa556eba21da9f897f1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__332_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_78133a70371f2ea6e9fee4dbc7da11f3,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__333_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_867d7a9403b4a36258cab6ee35fa6660,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__334_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ce45e4d62e343addeff2f4ed2725eeed,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__335_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5ab0a02771904f856e100fdffdb485af,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__336_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d4beabe9b103084c2c3c1d8ef23475c7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__337_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_53151ac996a3dfb557c13732aaa679af,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__338_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_957a72d891b459369be02a68dd1c4808,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__339_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4a669e1d327be6e579110e86cbc1f9af,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__33_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_325a94d2bac807d6eab4763bd33aa964,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__340_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_31699ff386c647c16a59772e9d1185d5,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__341_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e6c5424638a72a51a134e6981f4abcca,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__342_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_30520d877a78800de309434c65b4b753,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__343_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9d59abfd62c703b2cd4348f789089995,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__344_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bb38ae4c913c9c6ec8e62282ec4d473d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__345_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3c64cd27205b35aebadb239d9a7aa80f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__346_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bcf5330f19ef0731084be5d9945f8c9d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__347_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f9ab347541fbb7e5eaa73462a987fc35,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__348_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f75ffe88a2d601dbcccd2bc3a46d2bba,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__349_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b6bbf93c71965cedf95e6f130505292c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__34_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ce683cdbaf2de138a67b5fdefb42e521,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__350_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3cbfb00d8f52e5f3ea9e5b2ab83591b9,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__351_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7caf0afd9012f0af301e8b709cdfa99d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__352_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d9930f6e633506b969ba611cdf1479d2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__353_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_579754208aaa7c15a36c75102a11aa0c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__354_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_35f7f1d018fa2dbb6cbe9a5c0b1300fb,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__355_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8f63aecf7c8e2a65e2d7a4897c495afa,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__356_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b702c39d122d4ea4a738e071068e65c6,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__357_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_29c14bb16de6dc53d8e0f34ad36ff02b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__358_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_33ebeb93e8a54dbd98a47855b44bd399,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__359_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ec3de194f702361a9c161ada714ca3ab,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__35_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3128194a7d217473c0c34e84f918828a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__360_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6ce3174de930bea221eced6e2e726dd1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__361_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d716b4f9d196fdc5294974789343c57b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__362_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ed54930c97a0df1a522ef2f535df61e0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__363_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a30a11a6233846fbb368dd9f0fb13b57,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__364_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_010aacf245659ff840a43fec530aecad,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__365_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d395b78973a7028499477696d5097fd2,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__366_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_61557941a19612574c0ed389afa577bb,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__367_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b506ad863a22802b35b3747f2dba5fee,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__368_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6c9c587629c9b266088ba0d533e41227,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__369_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_87abfa1590bf8169d5377e954b0c82f8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__36_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3ec7f4a6d1ce72308783aa898cd0fcba,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__370_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_be86b0b4f821fe9d7a68a3790a84ce71,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__371_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_492eff16660605d922dc693506811e59,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__372_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fa1529bc8deeac510c9e61be87ca6aac,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__373_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e3927df365719d87fb24263593ffbbf1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__374_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_663ec780e62890150bd2c77ef4253d81,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__375_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b19e3924e96957c6b96e2a00a7dea162,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__376_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5e972c3f26641aab2b72670051502ec0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__377_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e1d5765d62a6bbed8da789a588d10c48,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__378_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_419684b5882985a25304089cb3d66260,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__379_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d5099f7201f9d7484a8aec53c51c60a7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__37_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1807b6ca922be67e82841e9b47006d62,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__380_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3fea8db730d78923acb09e6373cd046b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__381_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f118337dfde5f486568a609d11677db0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__382_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_78016b5d58a552903192e58be446eedf,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__383_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ea8b8556cb410ced311557529d8d570d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__384_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_105bba3e6b74f13048ebdf4a3372d7d9,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__385_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_42f5df001e42f799bdd66d4326fe2450,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__386_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e5afc1ad9cda13ba888e6f5e96fab8aa,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__387_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_50b6b4daf896d5be4739a5d145e2f314,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__388_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0d6c425a5f5d0eb42421874900957b98,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__389_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e9688202b23273a47d7fbfce7166accf,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__38_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e575def1afe55ee5a201ad8385042e98,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__390_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7048327794ed05677dc3db834248708d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__391_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_92ef3f463c788f23a576893dbf6b909e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__392_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c11d1b982eee87e35a8c60b0b1858cc8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__393_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_015f2933fabaefb40f8e6f44268235ad,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__394_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6cb9b39ffff3d0fb681bc5d8ac3a0585,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__395_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_febe1e83734af1268446672bca1191b7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__396_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e83983f0754629dff38961216e4710b2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__397_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_cbae45b5325d2cff917d3ed35a3b3317,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__398_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8486ded99a7036e4ad5e8a9a53ba969a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__399_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_10420cfcf7ebe4cd0eab890d1e989634,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__39_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_17eabe4867ea0ae34f6a9c77e36a7b6f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__3_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_40b04b9f841b34f3203c1b2c76bcc522,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__400_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_91df195e5feae93a70c33f23586dad62,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__401_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_56b165b15a71faca856d8e3fc8529a6c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__402_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a5dcb1ee4f6881a996dd4905c583a6d6,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__403_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_26a32058e04ccddcc9d6e45f075d588d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__404_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_dbc69801ca75427565e636777011a71a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__405_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_22d63acaadcd9c5c4979a368c514d1d2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__406_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_eaf14433425ec478a824daf963b03aa6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__407_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3992139ed177013d28ac2cb0b9470fdf,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__408_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_913bcdc1b89f5886a92e2a27b919df89,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__409_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_75af841ea69fc76854984e678b0b8031,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__40_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7d5c1059aad8945ec264524e8c9122fa,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__410_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a6871a6e1a2c53302f56f24c9b999259,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__411_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d5e3aa421711a2dba633e028baa2c2b2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__412_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7998909bd240ccad8a9cbe9c82425a6e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__413_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_96333c87531cca458baded93ba67a994,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__414_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_101fd9de83e830389def230eb29d9748,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__415_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_dca7d7ceec02a5c60f3aba206cd28c08,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__416_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0b37822f831e4e3d35266a32a435acee,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__417_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_038e6956e138bae26d9af57a7fc4fbe4,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__418_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0baba68eb7cc8951affff6641fda0c8d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__419_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a0ae26c7c4ec302b47b5c582629bbdf5,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__41_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8fa9016cb500bfadea6ce1eb2928f741,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__420_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_35a67090b889b989d26e87cdbed941a0,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__421_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7cce56e8c0630cae54932162cf0e5cbc,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__422_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_42e4f9648e940e1996ea0380aa2dd19f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__423_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d62377d328f3057ec90c50c0f2ab5ae0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__424_lambda(PyObject *kw_defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f1aa09101725e0642609e846892d9b01,
        NULL,
#if PYTHON_VERSION >= 0x300
        kw_defaults,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__425_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_dab2b3f853aa4fa30df04b6078bc5b84,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__426_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_33b3ebb2639d8201740c7f88fb7e76eb,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__427_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d27a9cbea385c54ea14d9ca48006bffe,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__428_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_cb75dd4a920f9ed7594fc7b7a200b6da,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__429_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5ceaeffb584fefeace4e5b355d63d14c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__42_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7dba519dedf0b9af6c294099e52053d4,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__430_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_403fba215e1be6cada8e3a594959041d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__431_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_064d595c73c8c4974ab0d3debd4311fd,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__432_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_82c21351b4dc8934a6909353ef6d29fa,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__433_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fa25d15cf1fa2e3381cf8dc26bf48222,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__434_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4f029fda04d4a776069f561c70540239,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__435_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_934e05ded79a3d0b8d146d629a638b34,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__436_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bd4819956892029ce6dc625927cdd03b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__437_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_cebb6efe21f489a19821799b0060167e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__438_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_757b1082df04a403c0a459cef6cf9da9,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__439_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_94349176af01fe74dfc97a36048368b8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__43_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1b38c67db128e220d5a863b37a8c9974,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__440_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_069952b989110b445af0387d1bc12a3e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__441_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1935982f7f2e7edafd8854ffca92c6ce,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__442_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d3f474efd33e0186ab9be5330a06226e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__443_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9526b135c0873ed4bb9febc5403fb64d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__444_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_db7118ac13e131a2cadd81769740d3a8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__445_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8554aaa1872522d93fc64c498f6928c8,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__446_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fc2db9d4ea2bb13741ef9ffe5a821f22,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__447_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b5c8ac55f31c9ed42e6b8968df60a72b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__448_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6664e8abfe89cdaffd1accfc260d7920,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__449_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7be122713bad7a97e7cbad601870a6fe,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__44_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e913fc1923a2041be8a63962f48d0e5a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__450_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bd77611a57d488d6c56b04d1b5c49dba,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__451_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_039b5265281ad57a712922f98f0812d9,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__452_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b2f46e65a0af69f974e9a53ab89a0be6,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__453_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a044b5240e92debc1935c582e93e2186,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__454_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a5a4d193cd9df1d36327d84a80f3b7e5,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__455_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d215e2ba512ee9033650d8b51ddd108a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__456_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a66340aa3818c3e823891c63bf9404f1,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__457_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a7313fa40e83d68bfe82303c0a0992bf,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__458_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_63d8839719c5a9facef3e01c988bf9f7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__459_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f5b647f327f3b0fb92fb8ac242a9c936,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__45_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2512803867250188a038c678598dded1,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__460_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0686c6936da42e5c9e3830de2765f320,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__461_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ee1dc6734df143ad01be28c17fbc76dc,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__462_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5aec9d865aeb577325622ca57b6d1ead,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__463_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ef1fdf9fe45f9b292cf8f7347adab7b0,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__464_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a9cdc0aff805406c166683af171167b0,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__465_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a2df74f714f923ca0c9cb06cd54fb0b5,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__466_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_96ddb8815cf4bb710cf30ee865186f25,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__467_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_caedcfb81a0fed3d121d765915818434,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__468_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ec940f940e125a56c033b0dcbe00a7cb,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__469_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3c59c11e27aaf96affbb2cc6fb48439f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__46_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a0dc54c45fcc846ca04bd9c292ed73a2,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__470_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_21b8e9598e709b0aee1f9ad7ac4754e0,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__471_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4cb2f46ae6b39d870d336fa9414b7c2c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__472_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f5df1d21ddf8e39ac1de2ec92b7a732d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__473_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_757cdda819ed5ac2ce010c3286d047a1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__474_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_091c3edc2f88d28baa92628bdf1826ab,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__475_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ffb3ed9f24610894b544e92e6e470195,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__476_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_11be5a9b0f0ff9afb6355035bbd86d01,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__477_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d9b9da619da6673fe39675c26f86594a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__478_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b23c2f0992890a01dbc50170aa50db2c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__479_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e9ecf5a44896ac4ea478229af8a82752,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__47_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d09bcbfd1cfab4b1d360d255d20b82b1,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__480_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7de916c913eda9d261875ff98cb8496e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__481_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_eb1c245e48b941846b0b896bc0ec2742,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__482_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b94cc4b18209a972f4dc8868c7c142a1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__483_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9ae21e3f2dd4eede222c2d6713f44f5a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__484_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8becbf862656f24a0c1445c038cbd46f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__485_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b38c2f41511fe86579a792e89d90a30d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__486_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8e36e5d1e256a6c5bb5fa5feb41b87f5,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__487_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_88fc0f2ae009ccabc6944ffe5331e522,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__488_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_49e2192e908c890d63fa4044a86d75ad,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__489_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c42b5b313542a6b626cefecea6c6177f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__48_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6940b4176a83c1d9fa637c0cf43f59e2,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__490_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7c620f04362547a6d05f51da8135c643,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__491_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_56d146bf25b7fa18f990b47f0ee2038d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__492_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_37d0a4114cc1dcfdbdbb7b0b4b0ad6cd,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__493_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_931c0a7f3453008c37a1330dd732be96,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__494_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e8234a88e79846c05388c3368aa40b02,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__495_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_135b5aac5a454240e83ffe5bdb909fce,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__496_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_eba05ca0485db4d8c66ff68463505ac6,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__497_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7782c6441866344e4165bd7ddedefe17,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__498_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5743abae41ae01f99d7f294a1f645cfc,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__499_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6f5e5fe31763de9725e981639ac53c42,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__49_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8de0beff63021828d98d8050200bc6d8,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__4_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_12569823e89ebd1f7010bf35877653ec,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__500_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_139d293f6e7bb1529805e599c82875d9,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__501_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0eed00c2a4d10957613addab994fb2e2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__502_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_051bd70207baefc2ef119e1054f4129c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__503_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f7ede9e9636103a0471d3efe1db139b1,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__504_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_95a7035c66c033fc3948b7d88d4ef685,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__505_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e2c82381507ef1204be505cda1acc5b0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__506_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_44798b7dfe042838663a5b12e2f6bf27,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__507_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6a9ac7e5d81c628a4339348ce189da08,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__508_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d58dd01f1969168e51a71aea03ee8b27,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__509_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3698f8981d4de5f415fde27a218e38f2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__50_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_35a8a6000774522f3b3731f2d7345fc8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__510_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_724336cddb4cf636cb87309f68e1324d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__511_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fa63cd0813c56e78a3a00bca56366486,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__512_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1f394b6b945ba82645562d0c03256e5b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__513_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1677263690ec58d4effc5d0b50f29445,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__514_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b8451e5709a1aa8626cb694891c2213e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__515_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_65063d2a6ef308a64cba3c04606d9254,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__516_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_35bf73cf0ae77c5bb93bddeed02081cb,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__517_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0e5f69316d9939294241b29a44ef7c48,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__518_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_85e049a385cf6befd2a3dd18bb942e13,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__519_lambda(PyObject *defaults, PyObject *kw_defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_06ecd1f315f809289f5b18347b82346a,
        defaults,
#if PYTHON_VERSION >= 0x300
        kw_defaults,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__51_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_00eecd338db8e7fc72104c076ea2cb22,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__520_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d98789f658724e5a85f4af82e1f5c43e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__521_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f71878a4dfa11d4726ae13c2b5baf2d1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__522_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ca94db2dacbf98c23fff8c77542a7f67,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__523_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d8ca62146a408f595fe18c0bd8602c11,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__524_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e5e3d89d91ac76e946c6083d6cf1c800,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__525_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_267f88b7ea050a5ef525ee54749d6053,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__526_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e4b372e089fbc7e5fb4d45b16a0c8636,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__527_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e1774da6a1766e1d975eb101bd34a2e7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__528_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d690d1937797e01720ebf96be9d98ca3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__529_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ece0f7949a98bad71ccdddb3c4cc207a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__52_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e3135b30c2ffbb37d50c1e103e4ea327,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__530_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_28a02dffcd25c131006ca4e06bb94f89,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__531_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2b8c8696daefc8805988d0da2857e91c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__532_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1eb3a784606f27eccfa1af31af0a759b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__533_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a427df230a95c321dc1f4fca84aeec35,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__534_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8b31a2b7f77e39180cd9d431e18a8372,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__535_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d4e09ddc82d94690a2e82f2b1b98f7e7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__536_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_275a18e23547aac0f83f823531dfba33,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__537_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0da4cdf33236de410794e8bf89fd4b73,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__538_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7b4cce7a471ca55569284493bdb8d656,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__539_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6fbd5549adcae78dcad4b2fceb91c294,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__53_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6f1e994bac42fa341d0aa13e327c8daa,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__540_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a1a65d242e50d9b70abbe6dffb8b2af9,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__541_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0b173ab2a6bec184761f01e2464f2ba7,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__542_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1fa8f624fd6adff65d701213c759f51f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__543_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_09d3fea6e2500d3521943ff2de4df2d9,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__544_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9172690bec2dbe37b68ffadc63563e6e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__545_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_75179e8d70cdbfec19d864aa7c3ced7a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__546_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6e9b2cbbf689806b4339763bf1d176da,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__547_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5898b81da0cf7407918deb15d503c796,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__548_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b25cb90b9ec6e4f31bdc56dfcde6b5e3,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__549_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8abf15b14cb41d197135b54b6f67f114,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__54_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_badaa9b7f948cb582c8bf0d638344bc1,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__550_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0fa9e2f0115127f3271301505a36d30f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__551_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f5f13b859fd2ee6622b96445c9556d08,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__552_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_61bac6b71be71b0bab7c7a1e8f010417,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__553_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7866eb0199194d07f7442c2f25c88337,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__554_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7356e6fba53388ac762b8826b4072ec2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__555_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_268b7c8e14b394f60bf3da706570ea1e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__556_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_97891f1081890478238e058551bcca16,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__557_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d2e0a3028c0ae5d690c5d6dc62586c2c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__558_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_617da111e7814616a99fd7ec33c56714,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__559_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d68d4e80f536f7a9780b74378060ae30,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__55_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_42a1e3b8b6287a9a90dde009079d0c87,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__560_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fff1d3cc677986b42634e045306adbc8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__561_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_55d7dbc327d092f771f630573bf598df,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__562_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_77dd84102614fc0ca107217a4db53b73,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__563_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4b87dea8bb2487680acfb86e0d218d25,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__564_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_656af5bed6b115ca2f28706e3d089147,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__565_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b51f6348dfbbeed9756692accaa73eee,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__566_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ce3d7f1da4108e9ee73751089818154a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__567_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_76d063a905c17a9a99f1be7a331e67cf,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__568_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8d198e86cb981b8f13fe0348758c1155,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__569_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_839e52343318810e4edcc15d5bb0dcc0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__56_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d350070fd3b14826b127d45a88dcbb1b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__570_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_06d8be554f837c8a1a50cf361ebf7081,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__571_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bceb8a557171a6e4ef02ce411d32d7ec,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__572_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c281df153b9eef1fa73b8d62af4d7c74,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__573_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_696112b42c2d230fdf675f427878dfef,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__574_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0f8f81ca55e8e1da5ed9cc6e2c5c4c3b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__575_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_092ef49a35e65ed64056b7c044ef2ef7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__576_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ef265e5e884d4102d9829bf9c096fdef,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__577_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_cca8fd0701c5392dbc7d40521b9b3a08,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__578_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_df6e651c101aa95f91564425da2654cd,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__579_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f5b625089ea6dd48dcdf8a643bcbb5ae,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__57_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_29f82f0f326391364ccc8ddd1e20698c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__580_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_41f9984a59ae08351d997376f897d71f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__581_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bf37ad38612391430fcf4c134de1dea9,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__582_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d1936b6a18422425889ccc56bfcddc66,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__583_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b1f0b52deb44af19d4dec0799359dbc6,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__584_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_40c8a1ab097e24e73d21b243b5ea1a1b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__585_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e8714a4ce7540a6e343c851d3200980c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__586_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8010d6bb762f8675cc559331bfa74efb,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__587_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f0739fe6a3573ced803d021a46f73484,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__588_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a4b91766ab7047a92cbf56396ffc786f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__589_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2fdd8ebf8b37a3be4d078f5aa37f6b9b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__58_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ef1397d459020de6931074dbdb5e0d87,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__590_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f779d74eebc1cb8fce27d789ba9c525d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__591_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5109c98e1e11618c92a0cf7838547347,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__592_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c752f3799ac01c3199ebdaedb36a8142,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__593_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_14aee79461124a621d76399c7bd182a8,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__594_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_75e66ccd951a27b683ba1d1964e713da,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__595_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e475846966cdd11f8ed327620243fb8b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__596_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c64deef88142504456628a1c57e2e898,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__597_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_89a9e99fdeb055da1aad7c4cf594bac6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__598_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_707a66e0a7b7d275648c8f6a19111844,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__599_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9a46581073e9d35d3e662f0dd0d90fc6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__59_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a79a5208a14db603e6d837b0c34ebb39,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__5_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3ab6e1e7ff6cd5c63b5c9c2aa90dcba3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__600_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_953e8f7210b66734d2427f7b5e46a13a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__601_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5d284c3564eb208718b4f7b3fdb5c76d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__602_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e3da31d09a44334ff59634ce6ed0bc3c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__603_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_21fff67716cbe4d4e5d761af0af9f929,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__604_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c998dce4ca09801fdb5ec8ec717b3a93,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__605_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8e713bec3ab09c713cc282cf14ff3b40,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__606_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fcc405463fdf61e7cb5f71f88f1b3aae,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__607_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b774c94b41bba0912d7f96c7bf07dcb7,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__608_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a32d9273877d5555e1f8397a426ac96e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__609_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a97f33dcf9bfaf8a4419dabc918ae347,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__60_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_48a0c7e17be9022e2172b77bf4cdfa17,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__610_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d6a48bba910c54c87a10374713f50c03,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__611_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f757f955720f8f6105e2ae3c8140e814,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__612_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_96442a0dfa832a0ca2ef5688d65f0601,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__613_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_85ded636f13dc2748ca6dc2facf04d87,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__614_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fa0ab4f5906404aa4b5cbe475e1f2e6e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__615_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_16f5a860b27edd898159d148b21a269d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__616_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_dbf278b15e5abf874473528998df56a2,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__617_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f0dbe416ae5c1921912a342d9cc5e507,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__618_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8b77290f7cb29f19017b2fabb1f1cd39,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__619_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1a0da7f678d0c44e4ab0b9ee3998ce3d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__61_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_368bd565df8d1b7bc9a4c039f93ba850,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__620_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_588e096092ad3e8ff39d00541f3ba214,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__621_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9aa4f3fcf67882e11384d538da3cf533,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__622_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e3c70d6d7c27f75c285b54bcb9bf5971,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__623_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c728221989c94a572787558029f54575,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__624_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b4384d5fc3e7916e68dd5a79dbe5af6a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__625_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_df6d2d36af6933f0a9c9322ae3cb2d8d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__626_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3d83f283adc8088b6a2389b55a77b22f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__627_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7bb9255037436edd735d9b2f553bced6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__628_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_21fe7c20f7e6de3882fb0c57b3a8518e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__629_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_906a8fe77cc911fc1e2a212899cad0ac,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__62_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c71cbdd5c1a73f69916fb9d768b0e3c8,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__630_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5f0d7afe6dab2cc41cdd921619392452,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__631_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2be1b4aca87a6dc8a16b106038b7e70b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__632_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_21aa967ad87a07864e5de333e28e2ee6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__633_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1d8ea9748902d427ef915d49d461dc64,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__634_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_755d1972be7ae154fd4fa21add3197bb,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__635_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_853e881185c91a789360267365075b33,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__636_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3592e4f7e774e536184c9d85c1636018,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__637_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_61cd31af88d046a364a3284524c567b3,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__638_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d6d5ffafe75da7b5091b64ccd241ec7d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__639_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_889d729aeb89a261055f0a29016f2fdf,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__63_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a73ec3853363e683dfaed25cfd7001e5,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__640_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_13bf352ddd5fa3c695d02068f0b1e30f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__641_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_34148d4b957f95056e6417efc83e54c7,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__642_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7bf90605cb1280915f604f36d70ceb41,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__643_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c8ef158a6ed27b9c50be908fb958740c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__644_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e472dcad8970048cd352890714c223fd,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__645_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0f973e787a689cc52b286a23226535ff,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__646_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e400d213813e546f77aef5718667f789,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__647_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_605416594363f56b0d10d73015825425,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__648_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3f892fb729973a2389b6393bb8d6fb8c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__649_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f92ca0e40f752d9e759d3735cae2475b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__64_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4b3fde649e7c4be6197c566dac81a024,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__650_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_34d520deb0ed14b89036e5c1da00fecc,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__651_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3026332f14fbf8665c7cd4578c428196,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__652_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_dbe16675e951c881376fe3916e59ce39,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__653_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5c40d2d7645073415341562fe91c1f4b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__654_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2d0b66f2b8fd24c66a35f010413b49d5,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__655_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_40fa58f8f298d619ecbc9a81eee4234b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__656_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ff5fe515038cc46493064e2698355f84,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__657_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6e3372a8c156a773345a1df183a9da22,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__658_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1f53acf0eff9c711b12e02e706db1b39,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__659_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2e4da870440087c6273a32fffe6b8f69,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__65_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_db73c6e00aec411f2aa7eb9da05c6805,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__660_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7ab685f261388b269ab7018432a4ba0c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__661_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f077011d878bdd0950478d9435b61f37,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__662_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3305a22d8988435833c7836623df6fca,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__663_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b1ee6155ec7fb1f6382d3953e9bdb127,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__664_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_18e2a6babf431e501ebd34ef62dfee6a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__665_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a9531df7a95b5a1df86ea05bd54be08c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__666_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8a9ce251c9fed0565f88fbd0d8da81d0,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__667_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d17db1f017fbc3be9b7f39950b885ab0,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__668_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_10f57efaeacb58a7dc2fb45250479593,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__669_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ffebb5641ad002c18fec8bef23371a2f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__66_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e26d0b73897c1062af13835f340e634c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__670_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_54d328f6650ecdcedde9b694a65c6992,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__671_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c6c49fe0ad99308d3b88c9927f08c3a8,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__672_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e1c4508088fd65b1b811ece268bb18c0,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__673_lambda(PyObject *defaults, PyObject *kw_defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6b9befeca3059e3efa8ab83f072ae9f9,
        defaults,
#if PYTHON_VERSION >= 0x300
        kw_defaults,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__674_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_efb4a8ca864e92def98ed1b8a1cfbee8,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__675_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_efaae3bc030aba6ae0586fba58adda68,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__676_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_84504c440f206dac8bf39606312c7b53,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__677_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_946438b20fd42ed2d862099a4b118d99,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__678_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7e1725d755d630dc1fdc3dd30b18407b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__679_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d3692d30251465242bca3a2f8dfc1985,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__67_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ef03dcb78a858bb55482715920087f95,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__680_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_320a5da8062c1545fae1c70c2735422b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__681_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_38c2d4a4c251de148d0436a0a4be469e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__682_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b252551eddbbd2576c56696ee1d493dd,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__683_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4d17852abf8a517fc4ff44ae729e548b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__684_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5a885c4160c7fc30ce3cd2b5ddd2cac2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__685_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d2d6a572eccd40b211bf95f563ba310f,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__686_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e89b8e795b4d1910cbcc791149e9a212,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__687_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_cf189704e4014db0ee029373657fd37e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__688_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_99d1e402b1a6521d7f0cc9b1c4c04626,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__689_lambda(PyObject *defaults, PyObject *kw_defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f843252fcf81bae474990bc203ed92b4,
        defaults,
#if PYTHON_VERSION >= 0x300
        kw_defaults,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__68_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_14b0e1c4eeb0efaf4be8284a6bd757bd,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__690_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_eb0c70f7ca52a5d76aa1c66983c5e750,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__691_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9f477e055e6d61b408214f9c75869016,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__692_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7c1a81b4c22081b323098fe75313c380,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__693_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_41439d00d428d07f66100e916a0cebec,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__694_lambda(PyObject *kw_defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a4f4a2117ada9bc708f462b4ccb986c5,
        NULL,
#if PYTHON_VERSION >= 0x300
        kw_defaults,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__695_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_42f175115eb8ff44d2ec6fc8756645a2,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__696_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_48414fb32bb8beea0c751e181df9c780,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__697_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3edaf8be8af74f4d442a9cb5ecd42094,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__698_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7e2e09242460c15f0834e9c5a605ef40,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__699_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_059c2701d069237cb13a3c10a79c2dd7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__69_lambda(PyObject *kw_defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c15bba6d7c175b122a3c688aeb5faae2,
        NULL,
#if PYTHON_VERSION >= 0x300
        kw_defaults,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__6_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8b32de9b527d7790246971657024d8d3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__700_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ca365c385a3d2a0ae87d5750f0bfdfb9,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__701_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2a928a6ecbfea16729224220e9761eac,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__702_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f63a990b5a8ce0603a1d3e259728a3eb,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__703_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_69a535a32cf2e3762391685dba872750,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__704_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_73de6d70f5db1ee1d11eaed6f5a59333,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__705_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1040b822b634c307ec5fa63f79b0e0bc,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__706_lambda(PyObject *defaults, PyObject *kw_defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_70d9974d4dce420c7821cf01f86f3804,
        defaults,
#if PYTHON_VERSION >= 0x300
        kw_defaults,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__707_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ad7abfff9a8ace837cef9c8befb2a3d3,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__708_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c281c027bdb0ca0290530ab424df02bf,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__709_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_48310ecd8e8402d535ab59156deb2693,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__70_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4daceae0fd3cd57c3f1bc8fa728a3431,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__710_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_619539fdd70ba5b6e36e0d21b51c976d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__711_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_042ab9f9f47a2ee1b929194970a894ff,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__712_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_001e334e41d2a52e959d9a55c352cb2d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__713_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2d89cadff36e844998f6c8b3f7ad10e7,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__714_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_34898716a2b25c5ff89184f00bcba555,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__715_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0fc3d3a4cce57302d701706398783808,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__716_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_49f6a0a2ef5d95eab9f10adcbe6d0640,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__717_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bea355721dd4873255d3fa06cd15b076,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__718_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4b4fabf56b81048ddc4b99fb442247be,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__719_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d97f9f397b3cb92eb573e30ebf139cd2,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__71_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f713704a7ba127f931280e52dcd65b8b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__720_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fa6e19317fbdc14afbe4c45f87f453ea,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__721_lambda(PyObject *defaults, PyObject *kw_defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_838dd01117966c2d76f91375634feb0b,
        defaults,
#if PYTHON_VERSION >= 0x300
        kw_defaults,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__722_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2ec674c03dd7fd4126c2ac2ee31b8a05,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__723_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7609cae0868d903e5a2be68e72c874c8,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__724_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c77bac1d2d8b09b36f06541ee7d1c809,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__725_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_847e7f94bf2761dec2c35df656db185e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__726_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_66f7ab97d939c3f4f0e95767f2780a7c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__727_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_927f76c467770a5b9e5c981dc56ce84e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__728_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2866f05819f324b0ba31917d05642955,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__729_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_d2aeb0f6581eea4412c9b79be5fa0530,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__72_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e3a14ab9beee1c7c597e9d8b97e57803,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__730_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_74153452be25943b302bd7b3877d82ba,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__731_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_29a9574f0ae92bde0e463245ffa82934,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__732_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_cf0d8cee1c0e22f3fa8373d9ae1ee202,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__733_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_979f62d5e23e391e772b06edae72c2dc,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__734_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_08462f39dde841a10fab2c87b0ce420e,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__735_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8ca52050f6f9a2d7fdf5e445547c3771,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__736_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fd453767e5259a1a9334b3aa46dd5046,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__737_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bb774c7f31c7bb717b18dcb5b7ccee62,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__738_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_0df2824def00aced95e5ab515ecd14b3,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__739_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_bca737e899e3ad78f1157591a1e24532,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__73_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4dce9161ddbda422699b243c2bac60c4,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__740_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_fe1e246f74080f172c5e511c76764f11,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__741_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_09a08958825512da68a3318a1a74b624,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__742_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8dd4b67d7fc72cbec764bb7937f272cf,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__743_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_9c130511bb36e5474147c5c308128768,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__744_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c2f30c868af015bb1e2957516b303bc4,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__745_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a582dbc6e71bdfe5ea1b503092fc52a9,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__746_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_475ff1167e42bc5c401e446e79cd286a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__747_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_453e315128d097c62446eba020d8b766,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__748_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_006f60789af7f75f333d104908d05101,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__749_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ea92c19a0efc2cc9557533048d34bbe6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__74_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_37f979ef9cd9279e87a48e30be4fabb7,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__750_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7034167245b21eb3259b2ff7355e7a8b,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__751_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_a9f508abcfd284cd87056fb7f5e3acce,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__752_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4fc794cc258db96e0581acd70eed1ee4,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__753_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b8edc5c0d6ababe853c4e97a3c2622f6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__754_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c07f188c3697a98da20f5ecc7087adda,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__755_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_76daf6860d3644632d0d657edfa983a0,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__756_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_322264d5c85ad95f9d3757969320c74c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__757_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_cddf06f76a61e27687c8d04b467e3434,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__758_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_7be041372a3ea2fbf9bfc5563d496a9f,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__759_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2f4825462fa1d8cfb1966311a8d37a18,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__75_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_58eae10d95351d4564e2132f6aabd04d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__76_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_91a95c9af941da45a9fc1aa28527283a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__77_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_93f97c8c1445b8c152e5d7d9edcfad8d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__78_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_43c304f8d065327cf45ced8ec3b9e5e9,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__79_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4da8401bd35984c23466be7ae610a67a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__7_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_947b9e3ac2e65e7b1862c83ef9de9e01,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__80_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_8dca6036569c72b9f5d514aac0bfd41c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__81_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2bfbe594424ebac7f12bee8149bfb73c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__82_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_5ce825167c761b763f62a0cca3170fdc,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__83_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_3426e15d019a2adb0486b728a9dd74e7,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__84_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e22700050447bd1e0f329e8b48907a4e,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__85_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_e3f682910d7e24ca5e7e6b9cb710e670,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__86_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f36d7a238d5b672ebd109bf1278c738c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__87_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_6e7a2c37b05890177243502e8225fad1,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__88_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ee8234270fcb3e8df9dbc4703e4f9902,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__89_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_465a2756349966912eee7527c5e0567a,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__8_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_1eb0004babc4bbda679ee8f99815bfd3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__90_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_438f315a416aa26d9a52c8442e36807d,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__91_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_ce65af401f1139ca5e66474baa28214b,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__92_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_b2ff758cb1d28d1f58f70797a35b4ae3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__93_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_aa0f22dbe3b10af7e29cfb79b24c12bd,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__94_lambda() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_4f7fec7f4b33ced4818a477050b6e2f6,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__95_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_378f1484508a32d57e08e59de784deb3,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__96_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_2d35c35e0539a548d7f7367193233711,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__97_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_f8e6b282c3f6c8e6c394dc315cb67289,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__98_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_c83641657902a7d14882b2c5679c7a27,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__99_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_eda42bf74430799fd6b09c6c89a46e3c,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides$$$function__9_lambda(PyObject *defaults) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        NULL,
        mod_consts[166],
#if PYTHON_VERSION >= 0x300
        mod_consts[167],
#endif
        codeobj_716292767b903a8296167b4ae84d7021,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        NULL,
        0
    );
    Nuitka_Function_EnableConstReturnGeneric(result, mod_consts[165]);

    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__3_wrap_torch_function(PyObject *annotations) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__3_wrap_torch_function,
        mod_consts[1056],
#if PYTHON_VERSION >= 0x300
        NULL,
#endif
        codeobj_db02ea50efb61a8e73a7fefd737c763d,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        annotations,
#endif
        module_torch$overrides,
        mod_consts[989],
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner(struct Nuitka_CellObject **closure) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner,
        mod_consts[395],
#if PYTHON_VERSION >= 0x300
        mod_consts[988],
#endif
        codeobj_fc0fb2316499201016d2c11f98c02811,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        closure,
        1
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner$$$function__1_wrapped(struct Nuitka_CellObject **closure) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner$$$function__1_wrapped,
        mod_consts[992],
#if PYTHON_VERSION >= 0x300
        mod_consts[993],
#endif
        codeobj_bea55e10897cf5b6c5f6dccbe052466a,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        NULL,
        closure,
        2
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__4__get_overloaded_args(PyObject *annotations) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__4__get_overloaded_args,
        mod_consts[1000],
#if PYTHON_VERSION >= 0x300
        NULL,
#endif
        codeobj_2aee0e71fbfb7d70078ef3e5651c5274,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        annotations,
#endif
        module_torch$overrides,
        mod_consts[999],
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__5_handle_torch_function(PyObject *annotations) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__5_handle_torch_function,
        mod_consts[117],
#if PYTHON_VERSION >= 0x300
        NULL,
#endif
        codeobj_29fc55b34bb3ce57dc59d6be792503c9,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        annotations,
#endif
        module_torch$overrides,
        mod_consts[1008],
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__6_get_overridable_functions(PyObject *annotations) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__6_get_overridable_functions,
        mod_consts[1028],
#if PYTHON_VERSION >= 0x300
        NULL,
#endif
        codeobj_08a8341025608895f5cca084a2a73a59,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        annotations,
#endif
        module_torch$overrides,
        mod_consts[1027],
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__7__get_tensor_methods(PyObject *annotations) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__7__get_tensor_methods,
        mod_consts[1030],
#if PYTHON_VERSION >= 0x300
        NULL,
#endif
        codeobj_9e53b0661e341a07bfe06ad7b3648d5c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        annotations,
#endif
        module_torch$overrides,
        mod_consts[1029],
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__8_is_tensor_method_or_property(PyObject *annotations) {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__8_is_tensor_method_or_property,
        mod_consts[1061],
#if PYTHON_VERSION >= 0x300
        NULL,
#endif
        codeobj_9d175873b9d319b284c2dd2cd56512fd,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        annotations,
#endif
        module_torch$overrides,
        mod_consts[1031],
        NULL,
        0
    );


    return (PyObject *)result;
}



static PyObject *MAKE_FUNCTION_torch$overrides$$$function__9_is_tensor_like() {
    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        impl_torch$overrides$$$function__9_is_tensor_like,
        mod_consts[1062],
#if PYTHON_VERSION >= 0x300
        NULL,
#endif
        codeobj_804b72e970ddaba1aaa2ed310122c27c,
        NULL,
#if PYTHON_VERSION >= 0x300
        NULL,
        NULL,
#endif
        module_torch$overrides,
        mod_consts[1032],
        NULL,
        0
    );


    return (PyObject *)result;
}


extern void _initCompiledCellType();
extern void _initCompiledGeneratorType();
extern void _initCompiledFunctionType();
extern void _initCompiledMethodType();
extern void _initCompiledFrameType();

extern PyTypeObject Nuitka_Loader_Type;

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
// Provide a way to create find a function via its C code and create it back
// in another process, useful for multiprocessing extensions like dill
extern void registerDillPluginTables(char const *module_name, PyMethodDef *reduce_compiled_function, PyMethodDef *create_compiled_function);

function_impl_code functable_torch$overrides[] = {
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    impl_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner,
    impl_torch$overrides$$$function__3_wrap_torch_function$$$function__1_inner$$$function__1_wrapped,
    impl_torch$overrides$$$function__1_get_ignored_functions,
    impl_torch$overrides$$$function__2_get_testing_overrides,
    impl_torch$overrides$$$function__3_wrap_torch_function,
    impl_torch$overrides$$$function__4__get_overloaded_args,
    impl_torch$overrides$$$function__5_handle_torch_function,
    impl_torch$overrides$$$function__6_get_overridable_functions,
    impl_torch$overrides$$$function__7__get_tensor_methods,
    impl_torch$overrides$$$function__8_is_tensor_method_or_property,
    impl_torch$overrides$$$function__9_is_tensor_like,
    NULL
};

static char const *_reduce_compiled_function_argnames[] = {
    "func",
    NULL
};

static PyObject *_reduce_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    PyObject *func;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "O:reduce_compiled_function", (char **)_reduce_compiled_function_argnames, &func, NULL)) {
        return NULL;
    }

    if (Nuitka_Function_Check(func) == false) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "not a compiled function");
        return NULL;
    }

    struct Nuitka_FunctionObject *function = (struct Nuitka_FunctionObject *)func;

    function_impl_code *current = functable_torch$overrides;
    int offset = 0;

    while (*current != NULL) {
        if (*current == function->m_c_code) {
            break;
        }

        current += 1;
        offset += 1;
    }

    if (*current == NULL) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "Cannot find compiled function in module.");
        return NULL;
    }

    PyObject *code_object_desc = PyTuple_New(6);
    PyTuple_SET_ITEM0(code_object_desc, 0, function->m_code_object->co_filename);
    PyTuple_SET_ITEM0(code_object_desc, 1, function->m_code_object->co_name);
    PyTuple_SET_ITEM(code_object_desc, 2, PyLong_FromLong(function->m_code_object->co_firstlineno));
    PyTuple_SET_ITEM0(code_object_desc, 3, function->m_code_object->co_varnames);
    PyTuple_SET_ITEM(code_object_desc, 4, PyLong_FromLong(function->m_code_object->co_argcount));
    PyTuple_SET_ITEM(code_object_desc, 5, PyLong_FromLong(function->m_code_object->co_flags));

    CHECK_OBJECT_DEEP(code_object_desc);

    PyObject *result = PyTuple_New(4);
    PyTuple_SET_ITEM(result, 0, PyLong_FromLong(offset));
    PyTuple_SET_ITEM(result, 1, code_object_desc);
    PyTuple_SET_ITEM0(result, 2, function->m_defaults);
    PyTuple_SET_ITEM0(result, 3, function->m_doc != NULL ? function->m_doc : Py_None);

    CHECK_OBJECT_DEEP(result);

    return result;
}

static PyMethodDef _method_def_reduce_compiled_function = {"reduce_compiled_function", (PyCFunction)_reduce_compiled_function,
                                                           METH_VARARGS | METH_KEYWORDS, NULL};

static char const *_create_compiled_function_argnames[] = {
    "func",
    "code_object_desc",
    "defaults",
    "doc",
    NULL
};


static PyObject *_create_compiled_function(PyObject *self, PyObject *args, PyObject *kwds) {
    CHECK_OBJECT_DEEP(args);

    PyObject *func;
    PyObject *code_object_desc;
    PyObject *defaults;
    PyObject *doc;

    if (!PyArg_ParseTupleAndKeywords(args, kwds, "OOOO:create_compiled_function", (char **)_create_compiled_function_argnames, &func, &code_object_desc, &defaults, &doc, NULL)) {
        return NULL;
    }

    int offset = PyLong_AsLong(func);

    if (offset == -1 && ERROR_OCCURRED()) {
        return NULL;
    }

    if (offset > sizeof(functable_torch$overrides) || offset < 0) {
        SET_CURRENT_EXCEPTION_TYPE0_STR(PyExc_TypeError, "Wrong offset for compiled function.");
        return NULL;
    }

    PyObject *filename = PyTuple_GET_ITEM(code_object_desc, 0);
    PyObject *function_name = PyTuple_GET_ITEM(code_object_desc, 1);
    PyObject *line = PyTuple_GET_ITEM(code_object_desc, 2);
    int line_int = PyLong_AsLong(line);
    assert(!ERROR_OCCURRED());

    PyObject *argnames = PyTuple_GET_ITEM(code_object_desc, 3);
    PyObject *arg_count = PyTuple_GET_ITEM(code_object_desc, 4);
    int arg_count_int = PyLong_AsLong(arg_count);
    assert(!ERROR_OCCURRED());
    PyObject *flags = PyTuple_GET_ITEM(code_object_desc, 5);
    int flags_int = PyLong_AsLong(flags);
    assert(!ERROR_OCCURRED());

    PyCodeObject *code_object = MAKE_CODEOBJECT(
        filename,
        line_int,
        flags_int,
        function_name,
        argnames,
        NULL, // freevars
        arg_count_int,
        0, // TODO: Missing kw_only_count
        0 // TODO: Missing pos_only_count
    );

    struct Nuitka_FunctionObject *result = Nuitka_Function_New(
        functable_torch$overrides[offset],
        code_object->co_name,
#if PYTHON_VERSION >= 0x300
        NULL, // TODO: Not transferring qualname yet
#endif
        code_object,
        defaults,
#if PYTHON_VERSION >= 0x300
        NULL, // kwdefaults are done on the outside currently
        NULL, // TODO: Not transferring annotations
#endif
        module_torch$overrides,
        doc,
        NULL,
        0
    );

    return (PyObject *)result;
}

static PyMethodDef _method_def_create_compiled_function = {
    "create_compiled_function",
    (PyCFunction)_create_compiled_function,
    METH_VARARGS | METH_KEYWORDS, NULL
};


#endif

// Internal entry point for module code.
PyObject *modulecode_torch$overrides(PyObject *module, struct Nuitka_MetaPathBasedLoaderEntry const *loader_entry) {
    // Report entry to PGO.
    PGO_onModuleEntered("torch.overrides");

    // Store the module for future use.
    module_torch$overrides = module;

    // Modules can be loaded again in case of errors, avoid the init being done again.
    static bool init_done = false;

    if (init_done == false) {
#if defined(_NUITKA_MODULE) && 0
        // In case of an extension module loaded into a process, we need to call
        // initialization here because that's the first and potentially only time
        // we are going called.

        // Initialize the constant values used.
        _initBuiltinModule();
        createGlobalConstants();

        /* Initialize the compiled types of Nuitka. */
        _initCompiledCellType();
        _initCompiledGeneratorType();
        _initCompiledFunctionType();
        _initCompiledMethodType();
        _initCompiledFrameType();

        _initSlotCompare();
#if PYTHON_VERSION >= 0x270
        _initSlotIterNext();
#endif

        patchTypeComparison();

        // Enable meta path based loader if not already done.
#ifdef _NUITKA_TRACE
        PRINT_STRING("torch.overrides: Calling setupMetaPathBasedLoader().\n");
#endif
        setupMetaPathBasedLoader();

#if PYTHON_VERSION >= 0x300
        patchInspectModule();
#endif

#endif

        /* The constants only used by this module are created now. */
#ifdef _NUITKA_TRACE
        PRINT_STRING("torch.overrides: Calling createModuleConstants().\n");
#endif
        createModuleConstants();

        /* The code objects used by this module are created now. */
#ifdef _NUITKA_TRACE
        PRINT_STRING("torch.overrides: Calling createModuleCodeObjects().\n");
#endif
        createModuleCodeObjects();

        init_done = true;
    }

    // PRINT_STRING("in inittorch$overrides\n");

    moduledict_torch$overrides = MODULE_DICT(module_torch$overrides);

#ifdef _NUITKA_PLUGIN_DILL_ENABLED
    registerDillPluginTables(loader_entry->name, &_method_def_reduce_compiled_function, &_method_def_create_compiled_function);
#endif

    // Set "__compiled__" to what version information we have.
    UPDATE_STRING_DICT0(
        moduledict_torch$overrides,
        (Nuitka_StringObject *)const_str_plain___compiled__,
        Nuitka_dunder_compiled_value
    );

    // Update "__package__" value to what it ought to be.
    {
#if 0
        UPDATE_STRING_DICT0(
            moduledict_torch$overrides,
            (Nuitka_StringObject *)const_str_plain___package__,
            mod_consts[1371]
        );
#elif 0
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)const_str_plain___name__);

        UPDATE_STRING_DICT0(
            moduledict_torch$overrides,
            (Nuitka_StringObject *)const_str_plain___package__,
            module_name
        );
#else

#if PYTHON_VERSION < 0x300
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)const_str_plain___name__);
        char const *module_name_cstr = PyString_AS_STRING(module_name);

        char const *last_dot = strrchr(module_name_cstr, '.');

        if (last_dot != NULL) {
            UPDATE_STRING_DICT1(
                moduledict_torch$overrides,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyString_FromStringAndSize(module_name_cstr, last_dot - module_name_cstr)
            );
        }
#else
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)const_str_plain___name__);
        Py_ssize_t dot_index = PyUnicode_Find(module_name, const_str_dot, 0, PyUnicode_GetLength(module_name), -1);

        if (dot_index != -1) {
            UPDATE_STRING_DICT1(
                moduledict_torch$overrides,
                (Nuitka_StringObject *)const_str_plain___package__,
                PyUnicode_Substring(module_name, 0, dot_index)
            );
        }
#endif
#endif
    }

    CHECK_OBJECT(module_torch$overrides);

    // For deep importing of a module we need to have "__builtins__", so we set
    // it ourselves in the same way than CPython does. Note: This must be done
    // before the frame object is allocated, or else it may fail.

    if (GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)const_str_plain___builtins__) == NULL) {
        PyObject *value = (PyObject *)builtin_module;

        // Check if main module, not a dict then but the module itself.
#if defined(_NUITKA_MODULE) || !0
        value = PyModule_GetDict(value);
#endif

        UPDATE_STRING_DICT0(moduledict_torch$overrides, (Nuitka_StringObject *)const_str_plain___builtins__, value);
    }

#if PYTHON_VERSION >= 0x300
    UPDATE_STRING_DICT0(moduledict_torch$overrides, (Nuitka_StringObject *)const_str_plain___loader__, (PyObject *)&Nuitka_Loader_Type);
#endif

#if PYTHON_VERSION >= 0x340
// Set the "__spec__" value

#if 0
    // Main modules just get "None" as spec.
    UPDATE_STRING_DICT0(moduledict_torch$overrides, (Nuitka_StringObject *)const_str_plain___spec__, Py_None);
#else
    // Other modules get a "ModuleSpec" from the standard mechanism.
    {
        PyObject *bootstrap_module = getImportLibBootstrapModule();
        CHECK_OBJECT(bootstrap_module);

        PyObject *_spec_from_module = PyObject_GetAttrString(bootstrap_module, "_spec_from_module");
        CHECK_OBJECT(_spec_from_module);

        PyObject *spec_value = CALL_FUNCTION_WITH_SINGLE_ARG(_spec_from_module, module_torch$overrides);
        Py_DECREF(_spec_from_module);

        // We can assume this to never fail, or else we are in trouble anyway.
        // CHECK_OBJECT(spec_value);

        if (spec_value == NULL) {
            PyErr_PrintEx(0);
            abort();
        }

// Mark the execution in the "__spec__" value.
        SET_ATTRIBUTE(spec_value, const_str_plain__initializing, Py_True);

        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)const_str_plain___spec__, spec_value);
    }
#endif
#endif

    // Temp variables if any
    PyObject *tmp_import_from_1__module = NULL;
    PyObject *tmp_import_from_2__module = NULL;
    struct Nuitka_FrameObject *frame_c6cff64f5a619567cc90bcd3ff5b41a1;
    NUITKA_MAY_BE_UNUSED char const *type_description_1 = NULL;
    bool tmp_result;
    PyObject *exception_type = NULL;
    PyObject *exception_value = NULL;
    PyTracebackObject *exception_tb = NULL;
    NUITKA_MAY_BE_UNUSED int exception_lineno = 0;
    PyObject *exception_keeper_type_1;
    PyObject *exception_keeper_value_1;
    PyTracebackObject *exception_keeper_tb_1;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_1;
    PyObject *exception_keeper_type_2;
    PyObject *exception_keeper_value_2;
    PyTracebackObject *exception_keeper_tb_2;
    NUITKA_MAY_BE_UNUSED int exception_keeper_lineno_2;
    int tmp_res;

    // Module code.
    {
        PyObject *tmp_assign_source_1;
        tmp_assign_source_1 = mod_consts[1033];
        UPDATE_STRING_DICT0(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1034], tmp_assign_source_1);
    }
    {
        PyObject *tmp_assign_source_2;
        tmp_assign_source_2 = module_filename_obj;
        UPDATE_STRING_DICT0(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1035], tmp_assign_source_2);
    }
    // Frame without reuse.
    frame_c6cff64f5a619567cc90bcd3ff5b41a1 = MAKE_MODULE_FRAME(codeobj_c6cff64f5a619567cc90bcd3ff5b41a1, module_torch$overrides);

    // Push the new frame as the currently active one, and we should be exclusively
    // owning it.
    pushFrameStack(frame_c6cff64f5a619567cc90bcd3ff5b41a1);
    assert(Py_REFCNT(frame_c6cff64f5a619567cc90bcd3ff5b41a1) == 2);

    // Framed code:
    {
        PyObject *tmp_assattr_value_1;
        PyObject *tmp_assattr_target_1;
        tmp_assattr_value_1 = module_filename_obj;
        tmp_assattr_target_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1036]);

        if (unlikely(tmp_assattr_target_1 == NULL)) {
            tmp_assattr_target_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1036]);
        }

        assert(!(tmp_assattr_target_1 == NULL));
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_1, mod_consts[1037], tmp_assattr_value_1);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assattr_value_2;
        PyObject *tmp_assattr_target_2;
        tmp_assattr_value_2 = Py_True;
        tmp_assattr_target_2 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1036]);

        if (unlikely(tmp_assattr_target_2 == NULL)) {
            tmp_assattr_target_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1036]);
        }

        assert(!(tmp_assattr_target_2 == NULL));
        tmp_result = SET_ATTRIBUTE(tmp_assattr_target_2, mod_consts[1038], tmp_assattr_value_2);
        if (tmp_result == false) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1;

            goto frame_exception_exit_1;
        }
    }
    {
        PyObject *tmp_assign_source_3;
        tmp_assign_source_3 = Py_None;
        UPDATE_STRING_DICT0(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1039], tmp_assign_source_3);
    }
    {
        PyObject *tmp_assign_source_4;
        tmp_assign_source_4 = IMPORT_HARD___FUTURE__();
        assert(!(tmp_assign_source_4 == NULL));
        UPDATE_STRING_DICT0(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1022], tmp_assign_source_4);
    }
    {
        PyObject *tmp_assign_source_5;
        PyObject *tmp_name_value_1;
        PyObject *tmp_globals_arg_value_1;
        PyObject *tmp_locals_arg_value_1;
        PyObject *tmp_fromlist_value_1;
        PyObject *tmp_level_value_1;
        tmp_name_value_1 = mod_consts[1009];
        tmp_globals_arg_value_1 = (PyObject *)moduledict_torch$overrides;
        tmp_locals_arg_value_1 = Py_None;
        tmp_fromlist_value_1 = Py_None;
        tmp_level_value_1 = mod_consts[1017];
        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 25;
        tmp_assign_source_5 = IMPORT_MODULE5(tmp_name_value_1, tmp_globals_arg_value_1, tmp_locals_arg_value_1, tmp_fromlist_value_1, tmp_level_value_1);
        if (tmp_assign_source_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 25;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1009], tmp_assign_source_5);
    }
    {
        PyObject *tmp_assign_source_6;
        tmp_assign_source_6 = IMPORT_HARD_FUNCTOOLS();
        assert(!(tmp_assign_source_6 == NULL));
        UPDATE_STRING_DICT0(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[990], tmp_assign_source_6);
    }
    {
        PyObject *tmp_assign_source_7;
        tmp_assign_source_7 = IMPORT_HARD_TYPES();
        assert(!(tmp_assign_source_7 == NULL));
        UPDATE_STRING_DICT0(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1002], tmp_assign_source_7);
    }
    {
        PyObject *tmp_assign_source_8;
        tmp_assign_source_8 = IMPORT_HARD_TYPING();
        assert(!(tmp_assign_source_8 == NULL));
        assert(tmp_import_from_1__module == NULL);
        Py_INCREF(tmp_assign_source_8);
        tmp_import_from_1__module = tmp_assign_source_8;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_9;
        PyObject *tmp_import_name_from_1;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_1 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_1)) {
            tmp_assign_source_9 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_1,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1040],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_9 = IMPORT_NAME(tmp_import_name_from_1, mod_consts[1040]);
        }

        if (tmp_assign_source_9 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 28;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1040], tmp_assign_source_9);
    }
    {
        PyObject *tmp_assign_source_10;
        PyObject *tmp_import_name_from_2;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_2 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_2)) {
            tmp_assign_source_10 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_2,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1041],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_10 = IMPORT_NAME(tmp_import_name_from_2, mod_consts[1041]);
        }

        if (tmp_assign_source_10 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 28;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1041], tmp_assign_source_10);
    }
    {
        PyObject *tmp_assign_source_11;
        PyObject *tmp_import_name_from_3;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_3 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_3)) {
            tmp_assign_source_11 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_3,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1042],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_11 = IMPORT_NAME(tmp_import_name_from_3, mod_consts[1042]);
        }

        if (tmp_assign_source_11 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 28;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1042], tmp_assign_source_11);
    }
    {
        PyObject *tmp_assign_source_12;
        PyObject *tmp_import_name_from_4;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_4 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_4)) {
            tmp_assign_source_12 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_4,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1043],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_12 = IMPORT_NAME(tmp_import_name_from_4, mod_consts[1043]);
        }

        if (tmp_assign_source_12 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 28;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1043], tmp_assign_source_12);
    }
    {
        PyObject *tmp_assign_source_13;
        PyObject *tmp_import_name_from_5;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_5 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_5)) {
            tmp_assign_source_13 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_5,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1044],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_13 = IMPORT_NAME(tmp_import_name_from_5, mod_consts[1044]);
        }

        if (tmp_assign_source_13 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 28;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1044], tmp_assign_source_13);
    }
    {
        PyObject *tmp_assign_source_14;
        PyObject *tmp_import_name_from_6;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_6 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_6)) {
            tmp_assign_source_14 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_6,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1045],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_14 = IMPORT_NAME(tmp_import_name_from_6, mod_consts[1045]);
        }

        if (tmp_assign_source_14 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 28;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1045], tmp_assign_source_14);
    }
    {
        PyObject *tmp_assign_source_15;
        PyObject *tmp_import_name_from_7;
        CHECK_OBJECT(tmp_import_from_1__module);
        tmp_import_name_from_7 = tmp_import_from_1__module;
        if (PyModule_Check(tmp_import_name_from_7)) {
            tmp_assign_source_15 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_7,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1046],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_15 = IMPORT_NAME(tmp_import_name_from_7, mod_consts[1046]);
        }

        if (tmp_assign_source_15 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 28;

            goto try_except_handler_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1046], tmp_assign_source_15);
    }
    goto try_end_1;
    // Exception handler code:
    try_except_handler_1:;
    exception_keeper_type_1 = exception_type;
    exception_keeper_value_1 = exception_value;
    exception_keeper_tb_1 = exception_tb;
    exception_keeper_lineno_1 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_1;
    exception_value = exception_keeper_value_1;
    exception_tb = exception_keeper_tb_1;
    exception_lineno = exception_keeper_lineno_1;

    goto frame_exception_exit_1;
    // End of try:
    try_end_1:;
    CHECK_OBJECT(tmp_import_from_1__module);
    Py_DECREF(tmp_import_from_1__module);
    tmp_import_from_1__module = NULL;
    {
        PyObject *tmp_assign_source_16;
        PyObject *tmp_name_value_2;
        PyObject *tmp_globals_arg_value_2;
        PyObject *tmp_locals_arg_value_2;
        PyObject *tmp_fromlist_value_2;
        PyObject *tmp_level_value_2;
        tmp_name_value_2 = mod_consts[0];
        tmp_globals_arg_value_2 = (PyObject *)moduledict_torch$overrides;
        tmp_locals_arg_value_2 = Py_None;
        tmp_fromlist_value_2 = Py_None;
        tmp_level_value_2 = mod_consts[1017];
        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 30;
        tmp_assign_source_16 = IMPORT_MODULE5(tmp_name_value_2, tmp_globals_arg_value_2, tmp_locals_arg_value_2, tmp_fromlist_value_2, tmp_level_value_2);
        if (tmp_assign_source_16 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 30;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[0], tmp_assign_source_16);
    }
    {
        PyObject *tmp_assign_source_17;
        PyObject *tmp_name_value_3;
        PyObject *tmp_globals_arg_value_3;
        PyObject *tmp_locals_arg_value_3;
        PyObject *tmp_fromlist_value_3;
        PyObject *tmp_level_value_3;
        tmp_name_value_3 = mod_consts[1047];
        tmp_globals_arg_value_3 = (PyObject *)moduledict_torch$overrides;
        tmp_locals_arg_value_3 = Py_None;
        tmp_fromlist_value_3 = mod_consts[1048];
        tmp_level_value_3 = mod_consts[1017];
        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 31;
        tmp_assign_source_17 = IMPORT_MODULE5(tmp_name_value_3, tmp_globals_arg_value_3, tmp_locals_arg_value_3, tmp_fromlist_value_3, tmp_level_value_3);
        if (tmp_assign_source_17 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto frame_exception_exit_1;
        }
        assert(tmp_import_from_2__module == NULL);
        tmp_import_from_2__module = tmp_assign_source_17;
    }
    // Tried code:
    {
        PyObject *tmp_assign_source_18;
        PyObject *tmp_import_name_from_8;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_8 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_8)) {
            tmp_assign_source_18 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_8,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1049],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_18 = IMPORT_NAME(tmp_import_name_from_8, mod_consts[1049]);
        }

        if (tmp_assign_source_18 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1049], tmp_assign_source_18);
    }
    {
        PyObject *tmp_assign_source_19;
        PyObject *tmp_import_name_from_9;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_9 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_9)) {
            tmp_assign_source_19 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_9,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1050],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_19 = IMPORT_NAME(tmp_import_name_from_9, mod_consts[1050]);
        }

        if (tmp_assign_source_19 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1050], tmp_assign_source_19);
    }
    {
        PyObject *tmp_assign_source_20;
        PyObject *tmp_import_name_from_10;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_10 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_10)) {
            tmp_assign_source_20 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_10,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1051],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_20 = IMPORT_NAME(tmp_import_name_from_10, mod_consts[1051]);
        }

        if (tmp_assign_source_20 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1051], tmp_assign_source_20);
    }
    {
        PyObject *tmp_assign_source_21;
        PyObject *tmp_import_name_from_11;
        CHECK_OBJECT(tmp_import_from_2__module);
        tmp_import_name_from_11 = tmp_import_from_2__module;
        if (PyModule_Check(tmp_import_name_from_11)) {
            tmp_assign_source_21 = IMPORT_NAME_OR_MODULE(
                tmp_import_name_from_11,
                (PyObject *)moduledict_torch$overrides,
                mod_consts[1052],
                mod_consts[1017]
            );
        } else {
            tmp_assign_source_21 = IMPORT_NAME(tmp_import_name_from_11, mod_consts[1052]);
        }

        if (tmp_assign_source_21 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 31;

            goto try_except_handler_2;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1052], tmp_assign_source_21);
    }
    goto try_end_2;
    // Exception handler code:
    try_except_handler_2:;
    exception_keeper_type_2 = exception_type;
    exception_keeper_value_2 = exception_value;
    exception_keeper_tb_2 = exception_tb;
    exception_keeper_lineno_2 = exception_lineno;
    exception_type = NULL;
    exception_value = NULL;
    exception_tb = NULL;
    exception_lineno = 0;

    CHECK_OBJECT(tmp_import_from_2__module);
    Py_DECREF(tmp_import_from_2__module);
    tmp_import_from_2__module = NULL;
    // Re-raise.
    exception_type = exception_keeper_type_2;
    exception_value = exception_keeper_value_2;
    exception_tb = exception_keeper_tb_2;
    exception_lineno = exception_keeper_lineno_2;

    goto frame_exception_exit_1;
    // End of try:
    try_end_2:;
    CHECK_OBJECT(tmp_import_from_2__module);
    Py_DECREF(tmp_import_from_2__module);
    tmp_import_from_2__module = NULL;
    {
        PyObject *tmp_assign_source_22;
        tmp_assign_source_22 = LIST_COPY(mod_consts[1053]);
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1012], tmp_assign_source_22);
    }
    {
        PyObject *tmp_assign_source_23;
        PyObject *tmp_called_value_1;
        PyObject *tmp_called_instance_1;
        PyObject *tmp_args_element_value_1;
        PyObject *tmp_annotations_1;
        PyObject *tmp_dict_key_1;
        PyObject *tmp_dict_value_1;
        PyObject *tmp_expression_value_1;
        PyObject *tmp_subscript_value_1;
        tmp_called_instance_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[990]);

        if (unlikely(tmp_called_instance_1 == NULL)) {
            tmp_called_instance_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[990]);
        }

        if (tmp_called_instance_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 46;

            goto frame_exception_exit_1;
        }
        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 46;
        tmp_called_value_1 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_1,
            mod_consts[1054],
            PyTuple_GET_ITEM(mod_consts[164], 0)
        );

        if (tmp_called_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 46;

            goto frame_exception_exit_1;
        }
        tmp_dict_key_1 = mod_consts[1055];
        tmp_expression_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1041]);

        if (unlikely(tmp_expression_value_1 == NULL)) {
            tmp_expression_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1041]);
        }

        if (tmp_expression_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_1);

            exception_lineno = 47;

            goto frame_exception_exit_1;
        }
        tmp_subscript_value_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1044]);

        if (unlikely(tmp_subscript_value_1 == NULL)) {
            tmp_subscript_value_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1044]);
        }

        if (tmp_subscript_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_1);

            exception_lineno = 47;

            goto frame_exception_exit_1;
        }
        tmp_dict_value_1 = LOOKUP_SUBSCRIPT(tmp_expression_value_1, tmp_subscript_value_1);
        if (tmp_dict_value_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_1);

            exception_lineno = 47;

            goto frame_exception_exit_1;
        }
        tmp_annotations_1 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_annotations_1, tmp_dict_key_1, tmp_dict_value_1);
        Py_DECREF(tmp_dict_value_1);
        assert(!(tmp_res != 0));


        tmp_args_element_value_1 = MAKE_FUNCTION_torch$overrides$$$function__1_get_ignored_functions(tmp_annotations_1);

        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 46;
        tmp_assign_source_23 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_1, tmp_args_element_value_1);
        Py_DECREF(tmp_called_value_1);
        Py_DECREF(tmp_args_element_value_1);
        if (tmp_assign_source_23 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 46;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[974], tmp_assign_source_23);
    }
    {
        PyObject *tmp_assign_source_24;
        PyObject *tmp_called_value_2;
        PyObject *tmp_called_instance_2;
        PyObject *tmp_args_element_value_2;
        PyObject *tmp_annotations_2;
        PyObject *tmp_dict_key_2;
        PyObject *tmp_dict_value_2;
        PyObject *tmp_expression_value_2;
        PyObject *tmp_subscript_value_2;
        PyObject *tmp_tuple_element_1;
        tmp_called_instance_2 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[990]);

        if (unlikely(tmp_called_instance_2 == NULL)) {
            tmp_called_instance_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[990]);
        }

        if (tmp_called_instance_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 229;

            goto frame_exception_exit_1;
        }
        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 229;
        tmp_called_value_2 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_2,
            mod_consts[1054],
            PyTuple_GET_ITEM(mod_consts[164], 0)
        );

        if (tmp_called_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 229;

            goto frame_exception_exit_1;
        }
        tmp_dict_key_2 = mod_consts[1055];
        tmp_expression_value_2 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1040]);

        if (unlikely(tmp_expression_value_2 == NULL)) {
            tmp_expression_value_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1040]);
        }

        if (tmp_expression_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_2);

            exception_lineno = 230;

            goto frame_exception_exit_1;
        }
        tmp_tuple_element_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1044]);

        if (unlikely(tmp_tuple_element_1 == NULL)) {
            tmp_tuple_element_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1044]);
        }

        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_2);

            exception_lineno = 230;

            goto frame_exception_exit_1;
        }
        tmp_subscript_value_2 = PyTuple_New(2);
        PyTuple_SET_ITEM0(tmp_subscript_value_2, 0, tmp_tuple_element_1);
        tmp_tuple_element_1 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1044]);

        if (unlikely(tmp_tuple_element_1 == NULL)) {
            tmp_tuple_element_1 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1044]);
        }

        if (tmp_tuple_element_1 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 230;

            goto tuple_build_exception_1;
        }
        PyTuple_SET_ITEM0(tmp_subscript_value_2, 1, tmp_tuple_element_1);
        goto tuple_build_noexception_1;
        // Exception handling pass through code for tuple_build:
        tuple_build_exception_1:;
        Py_DECREF(tmp_called_value_2);
        Py_DECREF(tmp_subscript_value_2);
        goto frame_exception_exit_1;
        // Finished with no exception for tuple_build:
        tuple_build_noexception_1:;
        tmp_dict_value_2 = LOOKUP_SUBSCRIPT(tmp_expression_value_2, tmp_subscript_value_2);
        Py_DECREF(tmp_subscript_value_2);
        if (tmp_dict_value_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_2);

            exception_lineno = 230;

            goto frame_exception_exit_1;
        }
        tmp_annotations_2 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_annotations_2, tmp_dict_key_2, tmp_dict_value_2);
        Py_DECREF(tmp_dict_value_2);
        assert(!(tmp_res != 0));


        tmp_args_element_value_2 = MAKE_FUNCTION_torch$overrides$$$function__2_get_testing_overrides(tmp_annotations_2);

        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 229;
        tmp_assign_source_24 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_2, tmp_args_element_value_2);
        Py_DECREF(tmp_called_value_2);
        Py_DECREF(tmp_args_element_value_2);
        if (tmp_assign_source_24 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 229;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1026], tmp_assign_source_24);
    }
    {
        PyObject *tmp_assign_source_25;
        PyObject *tmp_annotations_3;
        PyObject *tmp_dict_key_3;
        PyObject *tmp_dict_value_3;
        tmp_dict_key_3 = mod_consts[994];
        tmp_dict_value_3 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1044]);

        if (unlikely(tmp_dict_value_3 == NULL)) {
            tmp_dict_value_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1044]);
        }

        if (tmp_dict_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1111;

            goto frame_exception_exit_1;
        }
        tmp_annotations_3 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_annotations_3, tmp_dict_key_3, tmp_dict_value_3);
        assert(!(tmp_res != 0));


        tmp_assign_source_25 = MAKE_FUNCTION_torch$overrides$$$function__3_wrap_torch_function(tmp_annotations_3);

        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1056], tmp_assign_source_25);
    }
    {
        PyObject *tmp_assign_source_26;
        PyObject *tmp_annotations_4;
        PyObject *tmp_dict_key_4;
        PyObject *tmp_dict_value_4;
        PyObject *tmp_expression_value_3;
        PyObject *tmp_subscript_value_3;
        tmp_dict_key_4 = mod_consts[1057];
        tmp_expression_value_3 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1045]);

        if (unlikely(tmp_expression_value_3 == NULL)) {
            tmp_expression_value_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1045]);
        }

        if (tmp_expression_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1147;

            goto frame_exception_exit_1;
        }
        tmp_subscript_value_3 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1043]);

        if (unlikely(tmp_subscript_value_3 == NULL)) {
            tmp_subscript_value_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1043]);
        }

        if (tmp_subscript_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1147;

            goto frame_exception_exit_1;
        }
        tmp_dict_value_4 = LOOKUP_SUBSCRIPT(tmp_expression_value_3, tmp_subscript_value_3);
        if (tmp_dict_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1147;

            goto frame_exception_exit_1;
        }
        tmp_annotations_4 = _PyDict_NewPresized( 2 );
        {
            PyObject *tmp_expression_value_4;
            PyObject *tmp_subscript_value_4;
            tmp_res = PyDict_SetItem(tmp_annotations_4, tmp_dict_key_4, tmp_dict_value_4);
            Py_DECREF(tmp_dict_value_4);
            assert(!(tmp_res != 0));
            tmp_dict_key_4 = mod_consts[1055];
            tmp_expression_value_4 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1042]);

            if (unlikely(tmp_expression_value_4 == NULL)) {
                tmp_expression_value_4 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1042]);
            }

            if (tmp_expression_value_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1147;

                goto dict_build_exception_1;
            }
            tmp_subscript_value_4 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1043]);

            if (unlikely(tmp_subscript_value_4 == NULL)) {
                tmp_subscript_value_4 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1043]);
            }

            if (tmp_subscript_value_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1147;

                goto dict_build_exception_1;
            }
            tmp_dict_value_4 = LOOKUP_SUBSCRIPT(tmp_expression_value_4, tmp_subscript_value_4);
            if (tmp_dict_value_4 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1147;

                goto dict_build_exception_1;
            }
            tmp_res = PyDict_SetItem(tmp_annotations_4, tmp_dict_key_4, tmp_dict_value_4);
            Py_DECREF(tmp_dict_value_4);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_1;
        // Exception handling pass through code for dict_build:
        dict_build_exception_1:;
        Py_DECREF(tmp_annotations_4);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_1:;


        tmp_assign_source_26 = MAKE_FUNCTION_torch$overrides$$$function__4__get_overloaded_args(tmp_annotations_4);

        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1000], tmp_assign_source_26);
    }
    {
        PyObject *tmp_assign_source_27;
        PyObject *tmp_annotations_5;
        PyObject *tmp_dict_key_5;
        PyObject *tmp_dict_value_5;
        tmp_dict_key_5 = mod_consts[1001];
        tmp_dict_value_5 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1044]);

        if (unlikely(tmp_dict_value_5 == NULL)) {
            tmp_dict_value_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1044]);
        }

        if (tmp_dict_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1207;

            goto frame_exception_exit_1;
        }
        tmp_annotations_5 = _PyDict_NewPresized( 3 );
        {
            PyObject *tmp_expression_value_5;
            PyObject *tmp_subscript_value_5;
            tmp_res = PyDict_SetItem(tmp_annotations_5, tmp_dict_key_5, tmp_dict_value_5);
            assert(!(tmp_res != 0));
            tmp_dict_key_5 = mod_consts[1057];
            tmp_expression_value_5 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1045]);

            if (unlikely(tmp_expression_value_5 == NULL)) {
                tmp_expression_value_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1045]);
            }

            if (tmp_expression_value_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1207;

                goto dict_build_exception_2;
            }
            tmp_subscript_value_5 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1043]);

            if (unlikely(tmp_subscript_value_5 == NULL)) {
                tmp_subscript_value_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1043]);
            }

            if (tmp_subscript_value_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1207;

                goto dict_build_exception_2;
            }
            tmp_dict_value_5 = LOOKUP_SUBSCRIPT(tmp_expression_value_5, tmp_subscript_value_5);
            if (tmp_dict_value_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1207;

                goto dict_build_exception_2;
            }
            tmp_res = PyDict_SetItem(tmp_annotations_5, tmp_dict_key_5, tmp_dict_value_5);
            Py_DECREF(tmp_dict_value_5);
            assert(!(tmp_res != 0));
            tmp_dict_key_5 = mod_consts[1055];
            tmp_dict_value_5 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1043]);

            if (unlikely(tmp_dict_value_5 == NULL)) {
                tmp_dict_value_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1043]);
            }

            if (tmp_dict_value_5 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1207;

                goto dict_build_exception_2;
            }
            tmp_res = PyDict_SetItem(tmp_annotations_5, tmp_dict_key_5, tmp_dict_value_5);
            assert(!(tmp_res != 0));
        }
        goto dict_build_noexception_2;
        // Exception handling pass through code for dict_build:
        dict_build_exception_2:;
        Py_DECREF(tmp_annotations_5);
        goto frame_exception_exit_1;
        // Finished with no exception for dict_build:
        dict_build_noexception_2:;


        tmp_assign_source_27 = MAKE_FUNCTION_torch$overrides$$$function__5_handle_torch_function(tmp_annotations_5);

        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[117], tmp_assign_source_27);
    }
    {
        PyObject *tmp_assign_source_28;
        PyObject *tmp_called_value_3;
        PyObject *tmp_args_element_value_3;
        PyObject *tmp_args_element_value_4;
        tmp_called_value_3 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1052]);

        if (unlikely(tmp_called_value_3 == NULL)) {
            tmp_called_value_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1052]);
        }

        if (tmp_called_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1262;

            goto frame_exception_exit_1;
        }
        tmp_args_element_value_3 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1049]);

        if (unlikely(tmp_args_element_value_3 == NULL)) {
            tmp_args_element_value_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1049]);
        }

        if (tmp_args_element_value_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1263;

            goto frame_exception_exit_1;
        }
        tmp_args_element_value_4 = mod_consts[1058];
        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 1262;
        {
            PyObject *call_args[] = {tmp_args_element_value_3, tmp_args_element_value_4};
            tmp_assign_source_28 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_3, call_args);
        }

        if (tmp_assign_source_28 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1262;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[114], tmp_assign_source_28);
    }
    {
        PyObject *tmp_assign_source_29;
        PyObject *tmp_called_value_4;
        PyObject *tmp_args_element_value_5;
        PyObject *tmp_args_element_value_6;
        tmp_called_value_4 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1052]);

        if (unlikely(tmp_called_value_4 == NULL)) {
            tmp_called_value_4 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1052]);
        }

        if (tmp_called_value_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1282;

            goto frame_exception_exit_1;
        }
        tmp_args_element_value_5 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1050]);

        if (unlikely(tmp_args_element_value_5 == NULL)) {
            tmp_args_element_value_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1050]);
        }

        if (tmp_args_element_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1283;

            goto frame_exception_exit_1;
        }
        tmp_args_element_value_6 = mod_consts[1059];
        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 1282;
        {
            PyObject *call_args[] = {tmp_args_element_value_5, tmp_args_element_value_6};
            tmp_assign_source_29 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_4, call_args);
        }

        if (tmp_assign_source_29 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1282;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[115], tmp_assign_source_29);
    }
    {
        PyObject *tmp_assign_source_30;
        PyObject *tmp_called_value_5;
        PyObject *tmp_args_element_value_7;
        PyObject *tmp_args_element_value_8;
        tmp_called_value_5 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1052]);

        if (unlikely(tmp_called_value_5 == NULL)) {
            tmp_called_value_5 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1052]);
        }

        if (tmp_called_value_5 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1293;

            goto frame_exception_exit_1;
        }
        tmp_args_element_value_7 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1051]);

        if (unlikely(tmp_args_element_value_7 == NULL)) {
            tmp_args_element_value_7 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1051]);
        }

        if (tmp_args_element_value_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1294;

            goto frame_exception_exit_1;
        }
        tmp_args_element_value_8 = mod_consts[1060];
        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 1293;
        {
            PyObject *call_args[] = {tmp_args_element_value_7, tmp_args_element_value_8};
            tmp_assign_source_30 = CALL_FUNCTION_WITH_ARGS2(tmp_called_value_5, call_args);
        }

        if (tmp_assign_source_30 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1293;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[116], tmp_assign_source_30);
    }
    {
        PyObject *tmp_assign_source_31;
        PyObject *tmp_called_value_6;
        PyObject *tmp_called_instance_3;
        PyObject *tmp_args_element_value_9;
        PyObject *tmp_annotations_6;
        PyObject *tmp_dict_key_6;
        PyObject *tmp_dict_value_6;
        PyObject *tmp_expression_value_6;
        PyObject *tmp_subscript_value_6;
        PyObject *tmp_tuple_element_2;
        tmp_called_instance_3 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[990]);

        if (unlikely(tmp_called_instance_3 == NULL)) {
            tmp_called_instance_3 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[990]);
        }

        if (tmp_called_instance_3 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1309;

            goto frame_exception_exit_1;
        }
        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 1309;
        tmp_called_value_6 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_3,
            mod_consts[1054],
            PyTuple_GET_ITEM(mod_consts[164], 0)
        );

        if (tmp_called_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1309;

            goto frame_exception_exit_1;
        }
        tmp_dict_key_6 = mod_consts[1055];
        tmp_expression_value_6 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1040]);

        if (unlikely(tmp_expression_value_6 == NULL)) {
            tmp_expression_value_6 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1040]);
        }

        if (tmp_expression_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);

            exception_lineno = 1310;

            goto frame_exception_exit_1;
        }
        tmp_tuple_element_2 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1043]);

        if (unlikely(tmp_tuple_element_2 == NULL)) {
            tmp_tuple_element_2 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1043]);
        }

        if (tmp_tuple_element_2 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);

            exception_lineno = 1310;

            goto frame_exception_exit_1;
        }
        tmp_subscript_value_6 = PyTuple_New(2);
        {
            PyObject *tmp_expression_value_7;
            PyObject *tmp_subscript_value_7;
            PyTuple_SET_ITEM0(tmp_subscript_value_6, 0, tmp_tuple_element_2);
            tmp_expression_value_7 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1042]);

            if (unlikely(tmp_expression_value_7 == NULL)) {
                tmp_expression_value_7 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1042]);
            }

            if (tmp_expression_value_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1310;

                goto tuple_build_exception_2;
            }
            tmp_subscript_value_7 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1044]);

            if (unlikely(tmp_subscript_value_7 == NULL)) {
                tmp_subscript_value_7 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1044]);
            }

            if (tmp_subscript_value_7 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1310;

                goto tuple_build_exception_2;
            }
            tmp_tuple_element_2 = LOOKUP_SUBSCRIPT(tmp_expression_value_7, tmp_subscript_value_7);
            if (tmp_tuple_element_2 == NULL) {
                assert(ERROR_OCCURRED());

                FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


                exception_lineno = 1310;

                goto tuple_build_exception_2;
            }
            PyTuple_SET_ITEM(tmp_subscript_value_6, 1, tmp_tuple_element_2);
        }
        goto tuple_build_noexception_2;
        // Exception handling pass through code for tuple_build:
        tuple_build_exception_2:;
        Py_DECREF(tmp_called_value_6);
        Py_DECREF(tmp_subscript_value_6);
        goto frame_exception_exit_1;
        // Finished with no exception for tuple_build:
        tuple_build_noexception_2:;
        tmp_dict_value_6 = LOOKUP_SUBSCRIPT(tmp_expression_value_6, tmp_subscript_value_6);
        Py_DECREF(tmp_subscript_value_6);
        if (tmp_dict_value_6 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_6);

            exception_lineno = 1310;

            goto frame_exception_exit_1;
        }
        tmp_annotations_6 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_annotations_6, tmp_dict_key_6, tmp_dict_value_6);
        Py_DECREF(tmp_dict_value_6);
        assert(!(tmp_res != 0));


        tmp_args_element_value_9 = MAKE_FUNCTION_torch$overrides$$$function__6_get_overridable_functions(tmp_annotations_6);

        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 1309;
        tmp_assign_source_31 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_6, tmp_args_element_value_9);
        Py_DECREF(tmp_called_value_6);
        Py_DECREF(tmp_args_element_value_9);
        if (tmp_assign_source_31 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1309;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1028], tmp_assign_source_31);
    }
    {
        PyObject *tmp_assign_source_32;
        PyObject *tmp_called_value_7;
        PyObject *tmp_called_instance_4;
        PyObject *tmp_args_element_value_10;
        PyObject *tmp_annotations_7;
        PyObject *tmp_dict_key_7;
        PyObject *tmp_dict_value_7;
        PyObject *tmp_expression_value_8;
        PyObject *tmp_subscript_value_8;
        tmp_called_instance_4 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[990]);

        if (unlikely(tmp_called_instance_4 == NULL)) {
            tmp_called_instance_4 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[990]);
        }

        if (tmp_called_instance_4 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1373;

            goto frame_exception_exit_1;
        }
        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 1373;
        tmp_called_value_7 = CALL_METHOD_WITH_SINGLE_ARG(
            tmp_called_instance_4,
            mod_consts[1054],
            PyTuple_GET_ITEM(mod_consts[164], 0)
        );

        if (tmp_called_value_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1373;

            goto frame_exception_exit_1;
        }
        tmp_dict_key_7 = mod_consts[1055];
        tmp_expression_value_8 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1041]);

        if (unlikely(tmp_expression_value_8 == NULL)) {
            tmp_expression_value_8 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1041]);
        }

        if (tmp_expression_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_7);

            exception_lineno = 1374;

            goto frame_exception_exit_1;
        }
        tmp_subscript_value_8 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1044]);

        if (unlikely(tmp_subscript_value_8 == NULL)) {
            tmp_subscript_value_8 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1044]);
        }

        if (tmp_subscript_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_7);

            exception_lineno = 1374;

            goto frame_exception_exit_1;
        }
        tmp_dict_value_7 = LOOKUP_SUBSCRIPT(tmp_expression_value_8, tmp_subscript_value_8);
        if (tmp_dict_value_7 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);
            Py_DECREF(tmp_called_value_7);

            exception_lineno = 1374;

            goto frame_exception_exit_1;
        }
        tmp_annotations_7 = _PyDict_NewPresized( 1 );
        tmp_res = PyDict_SetItem(tmp_annotations_7, tmp_dict_key_7, tmp_dict_value_7);
        Py_DECREF(tmp_dict_value_7);
        assert(!(tmp_res != 0));


        tmp_args_element_value_10 = MAKE_FUNCTION_torch$overrides$$$function__7__get_tensor_methods(tmp_annotations_7);

        frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame.f_lineno = 1373;
        tmp_assign_source_32 = CALL_FUNCTION_WITH_SINGLE_ARG(tmp_called_value_7, tmp_args_element_value_10);
        Py_DECREF(tmp_called_value_7);
        Py_DECREF(tmp_args_element_value_10);
        if (tmp_assign_source_32 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1373;

            goto frame_exception_exit_1;
        }
        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1030], tmp_assign_source_32);
    }
    {
        PyObject *tmp_assign_source_33;
        PyObject *tmp_annotations_8;
        PyObject *tmp_dict_key_8;
        PyObject *tmp_dict_value_8;
        tmp_dict_key_8 = mod_consts[995];
        tmp_dict_value_8 = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1044]);

        if (unlikely(tmp_dict_value_8 == NULL)) {
            tmp_dict_value_8 = GET_MODULE_VARIABLE_VALUE_FALLBACK(mod_consts[1044]);
        }

        if (tmp_dict_value_8 == NULL) {
            assert(ERROR_OCCURRED());

            FETCH_ERROR_OCCURRED(&exception_type, &exception_value, &exception_tb);


            exception_lineno = 1380;

            goto frame_exception_exit_1;
        }
        tmp_annotations_8 = _PyDict_NewPresized( 2 );
        tmp_res = PyDict_SetItem(tmp_annotations_8, tmp_dict_key_8, tmp_dict_value_8);
        assert(!(tmp_res != 0));
        tmp_dict_key_8 = mod_consts[1055];
        tmp_dict_value_8 = (PyObject *)&PyBool_Type;
        tmp_res = PyDict_SetItem(tmp_annotations_8, tmp_dict_key_8, tmp_dict_value_8);
        assert(!(tmp_res != 0));


        tmp_assign_source_33 = MAKE_FUNCTION_torch$overrides$$$function__8_is_tensor_method_or_property(tmp_annotations_8);

        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1061], tmp_assign_source_33);
    }

    // Restore frame exception if necessary.
#if 0
    RESTORE_FRAME_EXCEPTION(frame_c6cff64f5a619567cc90bcd3ff5b41a1);
#endif
    popFrameStack();

    assertFrameObject(frame_c6cff64f5a619567cc90bcd3ff5b41a1);

    goto frame_no_exception_1;

    frame_exception_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION(frame_c6cff64f5a619567cc90bcd3ff5b41a1);
#endif

    if (exception_tb == NULL) {
        exception_tb = MAKE_TRACEBACK(frame_c6cff64f5a619567cc90bcd3ff5b41a1, exception_lineno);
    } else if (exception_tb->tb_frame != &frame_c6cff64f5a619567cc90bcd3ff5b41a1->m_frame) {
        exception_tb = ADD_TRACEBACK(exception_tb, frame_c6cff64f5a619567cc90bcd3ff5b41a1, exception_lineno);
    }

    // Put the previous frame back on top.
    popFrameStack();

    // Return the error.
    goto module_exception_exit;

    frame_no_exception_1:;
    {
        PyObject *tmp_assign_source_34;


        tmp_assign_source_34 = MAKE_FUNCTION_torch$overrides$$$function__9_is_tensor_like();

        UPDATE_STRING_DICT1(moduledict_torch$overrides, (Nuitka_StringObject *)mod_consts[1062], tmp_assign_source_34);
    }

    // Report to PGO about leaving the module without error.
    PGO_onModuleExit("torch.overrides", false);

    Py_INCREF(module_torch$overrides);
    return module_torch$overrides;
    module_exception_exit:

#if defined(_NUITKA_MODULE) && 0
    {
        PyObject *module_name = GET_STRING_DICT_VALUE(moduledict_torch$overrides, (Nuitka_StringObject *)const_str_plain___name__);

        if (module_name != NULL) {
            Nuitka_DelModule(module_name);
        }
    }
#endif
    PGO_onModuleExit("torch$overrides", false);

    RESTORE_ERROR_OCCURRED(exception_type, exception_value, exception_tb);
    return NULL;
}
